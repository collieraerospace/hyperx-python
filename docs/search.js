window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "hyperx", "modulename": "hyperx", "kind": "module", "doc": "<p>HyperX Scripting Library</p>\n\n<p>The HyperX python package is a library, written in python, for python developers.</p>\n\n<p>Basic usage:</p>\n\n<pre><code>&gt;&gt;&gt; import hyperx\n&gt;&gt;&gt; database = hyperx.Open('mydatabase.hdb3')\n&gt;&gt;&gt; print(f'Active project = {database.ActiveProject}')\n</code></pre>\n\n<p>The HyperX installation folder is found automatically if the installer was run.\nOtherwise, the installation folder can be specified by setting the environment\nvariable <code>HyperXInstall</code></p>\n\n<pre><code>&gt;&gt;&gt; import os\n&gt;&gt;&gt; os.environ['HyperXInstall'] = 'C:/path/to/hyperx/installation'\n&gt;&gt;&gt; import hyperx\n</code></pre>\n"}, {"fullname": "hyperx.api", "modulename": "hyperx.api", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "hyperx.api.MakeCSharpIntList", "modulename": "hyperx.api", "qualname": "MakeCSharpIntList", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ints</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"n\">Collections</span><span class=\"o\">.</span><span class=\"n\">Generic</span><span class=\"o\">.</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Int32</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.AnalysisResultToReturn", "modulename": "hyperx.api", "qualname": "AnalysisResultToReturn", "kind": "class", "doc": "<p>Used to specify which analysis result to return.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.AnalysisResultToReturn.Limit", "modulename": "hyperx.api", "qualname": "AnalysisResultToReturn.Limit", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisResultToReturn.Limit: 1&gt;"}, {"fullname": "hyperx.api.AnalysisResultToReturn.Ultimate", "modulename": "hyperx.api", "qualname": "AnalysisResultToReturn.Ultimate", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisResultToReturn.Ultimate: 2&gt;"}, {"fullname": "hyperx.api.AnalysisResultToReturn.Minimum", "modulename": "hyperx.api", "qualname": "AnalysisResultToReturn.Minimum", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisResultToReturn.Minimum: 3&gt;"}, {"fullname": "hyperx.api.CollectionModificationStatus", "modulename": "hyperx.api", "qualname": "CollectionModificationStatus", "kind": "class", "doc": "<p>Indicates whether a collection was manipulated successfully.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.CollectionModificationStatus.Success", "modulename": "hyperx.api", "qualname": "CollectionModificationStatus.Success", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CollectionModificationStatus.Success: 1&gt;"}, {"fullname": "hyperx.api.CollectionModificationStatus.DuplicateIdFailure", "modulename": "hyperx.api", "qualname": "CollectionModificationStatus.DuplicateIdFailure", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CollectionModificationStatus.DuplicateIdFailure: 2&gt;"}, {"fullname": "hyperx.api.CollectionModificationStatus.EntityMissingAddFailure", "modulename": "hyperx.api", "qualname": "CollectionModificationStatus.EntityMissingAddFailure", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CollectionModificationStatus.EntityMissingAddFailure: 3&gt;"}, {"fullname": "hyperx.api.CollectionModificationStatus.EntityMissingRemovalFailure", "modulename": "hyperx.api", "qualname": "CollectionModificationStatus.EntityMissingRemovalFailure", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CollectionModificationStatus.EntityMissingRemovalFailure: 4&gt;"}, {"fullname": "hyperx.api.CollectionModificationStatus.FemConnectionFailure", "modulename": "hyperx.api", "qualname": "CollectionModificationStatus.FemConnectionFailure", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CollectionModificationStatus.FemConnectionFailure: 5&gt;"}, {"fullname": "hyperx.api.CollectionModificationStatus.RunSetUsageFailure", "modulename": "hyperx.api", "qualname": "CollectionModificationStatus.RunSetUsageFailure", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CollectionModificationStatus.RunSetUsageFailure: 6&gt;"}, {"fullname": "hyperx.api.CollectionModificationStatus.EntityRemovalDependencyFailure", "modulename": "hyperx.api", "qualname": "CollectionModificationStatus.EntityRemovalDependencyFailure", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CollectionModificationStatus.EntityRemovalDependencyFailure: 7&gt;"}, {"fullname": "hyperx.api.CreateDatabaseStatus", "modulename": "hyperx.api", "qualname": "CreateDatabaseStatus", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.CreateDatabaseStatus.Success", "modulename": "hyperx.api", "qualname": "CreateDatabaseStatus.Success", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CreateDatabaseStatus.Success: 1&gt;"}, {"fullname": "hyperx.api.CreateDatabaseStatus.TemplateNotFound", "modulename": "hyperx.api", "qualname": "CreateDatabaseStatus.TemplateNotFound", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CreateDatabaseStatus.TemplateNotFound: 2&gt;"}, {"fullname": "hyperx.api.CreateDatabaseStatus.ImproperExtension", "modulename": "hyperx.api", "qualname": "CreateDatabaseStatus.ImproperExtension", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CreateDatabaseStatus.ImproperExtension: 3&gt;"}, {"fullname": "hyperx.api.MaterialCreationStatus", "modulename": "hyperx.api", "qualname": "MaterialCreationStatus", "kind": "class", "doc": "<p>Indicates whether a material was created successfully. \n    If not, this indicates why the material was not created.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.MaterialCreationStatus.Success", "modulename": "hyperx.api", "qualname": "MaterialCreationStatus.Success", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MaterialCreationStatus.Success: 1&gt;"}, {"fullname": "hyperx.api.MaterialCreationStatus.DuplicateNameFailure", "modulename": "hyperx.api", "qualname": "MaterialCreationStatus.DuplicateNameFailure", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MaterialCreationStatus.DuplicateNameFailure: 2&gt;"}, {"fullname": "hyperx.api.MaterialCreationStatus.DuplicateFemIdFailure", "modulename": "hyperx.api", "qualname": "MaterialCreationStatus.DuplicateFemIdFailure", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MaterialCreationStatus.DuplicateFemIdFailure: 3&gt;"}, {"fullname": "hyperx.api.MaterialCreationStatus.MissingMaterialToCopy", "modulename": "hyperx.api", "qualname": "MaterialCreationStatus.MissingMaterialToCopy", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MaterialCreationStatus.MissingMaterialToCopy: 4&gt;"}, {"fullname": "hyperx.api.DbForceUnit", "modulename": "hyperx.api", "qualname": "DbForceUnit", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.DbForceUnit.Pounds", "modulename": "hyperx.api", "qualname": "DbForceUnit.Pounds", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DbForceUnit.Pounds: 1&gt;"}, {"fullname": "hyperx.api.DbForceUnit.Newtons", "modulename": "hyperx.api", "qualname": "DbForceUnit.Newtons", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DbForceUnit.Newtons: 2&gt;"}, {"fullname": "hyperx.api.DbForceUnit.Dekanewtons", "modulename": "hyperx.api", "qualname": "DbForceUnit.Dekanewtons", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DbForceUnit.Dekanewtons: 4&gt;"}, {"fullname": "hyperx.api.DbLengthUnit", "modulename": "hyperx.api", "qualname": "DbLengthUnit", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.DbLengthUnit.Inches", "modulename": "hyperx.api", "qualname": "DbLengthUnit.Inches", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DbLengthUnit.Inches: 1&gt;"}, {"fullname": "hyperx.api.DbLengthUnit.Feet", "modulename": "hyperx.api", "qualname": "DbLengthUnit.Feet", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DbLengthUnit.Feet: 2&gt;"}, {"fullname": "hyperx.api.DbLengthUnit.Meters", "modulename": "hyperx.api", "qualname": "DbLengthUnit.Meters", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DbLengthUnit.Meters: 3&gt;"}, {"fullname": "hyperx.api.DbLengthUnit.Centimeters", "modulename": "hyperx.api", "qualname": "DbLengthUnit.Centimeters", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DbLengthUnit.Centimeters: 4&gt;"}, {"fullname": "hyperx.api.DbLengthUnit.Millimeters", "modulename": "hyperx.api", "qualname": "DbLengthUnit.Millimeters", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DbLengthUnit.Millimeters: 5&gt;"}, {"fullname": "hyperx.api.DbMassUnit", "modulename": "hyperx.api", "qualname": "DbMassUnit", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.DbMassUnit.Pounds", "modulename": "hyperx.api", "qualname": "DbMassUnit.Pounds", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DbMassUnit.Pounds: 1&gt;"}, {"fullname": "hyperx.api.DbMassUnit.Kilograms", "modulename": "hyperx.api", "qualname": "DbMassUnit.Kilograms", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DbMassUnit.Kilograms: 2&gt;"}, {"fullname": "hyperx.api.DbMassUnit.Slinches", "modulename": "hyperx.api", "qualname": "DbMassUnit.Slinches", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DbMassUnit.Slinches: 4&gt;"}, {"fullname": "hyperx.api.DbMassUnit.Slugs", "modulename": "hyperx.api", "qualname": "DbMassUnit.Slugs", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DbMassUnit.Slugs: 5&gt;"}, {"fullname": "hyperx.api.DbMassUnit.Megagrams", "modulename": "hyperx.api", "qualname": "DbMassUnit.Megagrams", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DbMassUnit.Megagrams: 6&gt;"}, {"fullname": "hyperx.api.DbTemperatureUnit", "modulename": "hyperx.api", "qualname": "DbTemperatureUnit", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.DbTemperatureUnit.Fahrenheit", "modulename": "hyperx.api", "qualname": "DbTemperatureUnit.Fahrenheit", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DbTemperatureUnit.Fahrenheit: 1&gt;"}, {"fullname": "hyperx.api.DbTemperatureUnit.Rankine", "modulename": "hyperx.api", "qualname": "DbTemperatureUnit.Rankine", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DbTemperatureUnit.Rankine: 2&gt;"}, {"fullname": "hyperx.api.DbTemperatureUnit.Celsius", "modulename": "hyperx.api", "qualname": "DbTemperatureUnit.Celsius", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DbTemperatureUnit.Celsius: 3&gt;"}, {"fullname": "hyperx.api.DbTemperatureUnit.Kelvin", "modulename": "hyperx.api", "qualname": "DbTemperatureUnit.Kelvin", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DbTemperatureUnit.Kelvin: 4&gt;"}, {"fullname": "hyperx.api.ProjectCreationStatus", "modulename": "hyperx.api", "qualname": "ProjectCreationStatus", "kind": "class", "doc": "<p>Indicates whether a project was created successfully. \n    If not, this indicates why the project was not created.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.ProjectCreationStatus.Success", "modulename": "hyperx.api", "qualname": "ProjectCreationStatus.Success", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ProjectCreationStatus.Success: 1&gt;"}, {"fullname": "hyperx.api.ProjectCreationStatus.Failure", "modulename": "hyperx.api", "qualname": "ProjectCreationStatus.Failure", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ProjectCreationStatus.Failure: 2&gt;"}, {"fullname": "hyperx.api.ProjectCreationStatus.DuplicateNameFailure", "modulename": "hyperx.api", "qualname": "ProjectCreationStatus.DuplicateNameFailure", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ProjectCreationStatus.DuplicateNameFailure: 3&gt;"}, {"fullname": "hyperx.api.ProjectDeletionStatus", "modulename": "hyperx.api", "qualname": "ProjectDeletionStatus", "kind": "class", "doc": "<p>Indicates whether a project was deleted successfully. \n    If not, this indicates why the project was not deleted.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.ProjectDeletionStatus.Success", "modulename": "hyperx.api", "qualname": "ProjectDeletionStatus.Success", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ProjectDeletionStatus.Success: 1&gt;"}, {"fullname": "hyperx.api.ProjectDeletionStatus.Failure", "modulename": "hyperx.api", "qualname": "ProjectDeletionStatus.Failure", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ProjectDeletionStatus.Failure: 2&gt;"}, {"fullname": "hyperx.api.ProjectDeletionStatus.ProjectDoesNotExistFailure", "modulename": "hyperx.api", "qualname": "ProjectDeletionStatus.ProjectDoesNotExistFailure", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ProjectDeletionStatus.ProjectDoesNotExistFailure: 3&gt;"}, {"fullname": "hyperx.api.ProjectDeletionStatus.ActiveProjectFailure", "modulename": "hyperx.api", "qualname": "ProjectDeletionStatus.ActiveProjectFailure", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ProjectDeletionStatus.ActiveProjectFailure: 4&gt;"}, {"fullname": "hyperx.api.SetUnitsStatus", "modulename": "hyperx.api", "qualname": "SetUnitsStatus", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.SetUnitsStatus.Success", "modulename": "hyperx.api", "qualname": "SetUnitsStatus.Success", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;SetUnitsStatus.Success: 1&gt;"}, {"fullname": "hyperx.api.SetUnitsStatus.Error", "modulename": "hyperx.api", "qualname": "SetUnitsStatus.Error", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;SetUnitsStatus.Error: 2&gt;"}, {"fullname": "hyperx.api.SetUnitsStatus.MixedUnitSystemError", "modulename": "hyperx.api", "qualname": "SetUnitsStatus.MixedUnitSystemError", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;SetUnitsStatus.MixedUnitSystemError: 3&gt;"}, {"fullname": "hyperx.api.PropertyAssignmentStatus", "modulename": "hyperx.api", "qualname": "PropertyAssignmentStatus", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.PropertyAssignmentStatus.Success", "modulename": "hyperx.api", "qualname": "PropertyAssignmentStatus.Success", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PropertyAssignmentStatus.Success: 1&gt;"}, {"fullname": "hyperx.api.PropertyAssignmentStatus.Failure", "modulename": "hyperx.api", "qualname": "PropertyAssignmentStatus.Failure", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PropertyAssignmentStatus.Failure: 2&gt;"}, {"fullname": "hyperx.api.PropertyAssignmentStatus.FailureCollectionAssignment", "modulename": "hyperx.api", "qualname": "PropertyAssignmentStatus.FailureCollectionAssignment", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PropertyAssignmentStatus.FailureCollectionAssignment: 3&gt;"}, {"fullname": "hyperx.api.PropertyAssignmentStatus.PropertyIsNull", "modulename": "hyperx.api", "qualname": "PropertyAssignmentStatus.PropertyIsNull", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PropertyAssignmentStatus.PropertyIsNull: 4&gt;"}, {"fullname": "hyperx.api.PropertyAssignmentStatus.PropertyNotFoundInDb", "modulename": "hyperx.api", "qualname": "PropertyAssignmentStatus.PropertyNotFoundInDb", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PropertyAssignmentStatus.PropertyNotFoundInDb: 5&gt;"}, {"fullname": "hyperx.api.PropertyAssignmentStatus.EmptyCollection", "modulename": "hyperx.api", "qualname": "PropertyAssignmentStatus.EmptyCollection", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PropertyAssignmentStatus.EmptyCollection: 6&gt;"}, {"fullname": "hyperx.api.PropertyAssignmentStatus.IncompatiblePropertyAssignment", "modulename": "hyperx.api", "qualname": "PropertyAssignmentStatus.IncompatiblePropertyAssignment", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PropertyAssignmentStatus.IncompatiblePropertyAssignment: 7&gt;"}, {"fullname": "hyperx.api.PropertyAssignmentStatus.EntityDoesNotExist", "modulename": "hyperx.api", "qualname": "PropertyAssignmentStatus.EntityDoesNotExist", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PropertyAssignmentStatus.EntityDoesNotExist: 8&gt;"}, {"fullname": "hyperx.api.RundeckBulkUpdateStatus", "modulename": "hyperx.api", "qualname": "RundeckBulkUpdateStatus", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.RundeckBulkUpdateStatus.NoRundecksUpdated", "modulename": "hyperx.api", "qualname": "RundeckBulkUpdateStatus.NoRundecksUpdated", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;RundeckBulkUpdateStatus.NoRundecksUpdated: 0&gt;"}, {"fullname": "hyperx.api.RundeckBulkUpdateStatus.Success", "modulename": "hyperx.api", "qualname": "RundeckBulkUpdateStatus.Success", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;RundeckBulkUpdateStatus.Success: 1&gt;"}, {"fullname": "hyperx.api.RundeckBulkUpdateStatus.InputFilePathDoesNotExist", "modulename": "hyperx.api", "qualname": "RundeckBulkUpdateStatus.InputFilePathDoesNotExist", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;RundeckBulkUpdateStatus.InputFilePathDoesNotExist: 2&gt;"}, {"fullname": "hyperx.api.RundeckBulkUpdateStatus.ResultFilePathDoesNotExist", "modulename": "hyperx.api", "qualname": "RundeckBulkUpdateStatus.ResultFilePathDoesNotExist", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;RundeckBulkUpdateStatus.ResultFilePathDoesNotExist: 3&gt;"}, {"fullname": "hyperx.api.RundeckBulkUpdateStatus.InputFilePathAlreadyExists", "modulename": "hyperx.api", "qualname": "RundeckBulkUpdateStatus.InputFilePathAlreadyExists", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;RundeckBulkUpdateStatus.InputFilePathAlreadyExists: 4&gt;"}, {"fullname": "hyperx.api.RundeckBulkUpdateStatus.ResultFilePathAlreadyExists", "modulename": "hyperx.api", "qualname": "RundeckBulkUpdateStatus.ResultFilePathAlreadyExists", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;RundeckBulkUpdateStatus.ResultFilePathAlreadyExists: 5&gt;"}, {"fullname": "hyperx.api.RundeckBulkUpdateStatus.InvalidPathCount", "modulename": "hyperx.api", "qualname": "RundeckBulkUpdateStatus.InvalidPathCount", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;RundeckBulkUpdateStatus.InvalidPathCount: 6&gt;"}, {"fullname": "hyperx.api.RundeckBulkUpdateStatus.RundeckBulkUpdateFailure", "modulename": "hyperx.api", "qualname": "RundeckBulkUpdateStatus.RundeckBulkUpdateFailure", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;RundeckBulkUpdateStatus.RundeckBulkUpdateFailure: 7&gt;"}, {"fullname": "hyperx.api.RundeckBulkUpdateStatus.SuccessButIncompatibleFem", "modulename": "hyperx.api", "qualname": "RundeckBulkUpdateStatus.SuccessButIncompatibleFem", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;RundeckBulkUpdateStatus.SuccessButIncompatibleFem: 8&gt;"}, {"fullname": "hyperx.api.RundeckCreationStatus", "modulename": "hyperx.api", "qualname": "RundeckCreationStatus", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.RundeckCreationStatus.Success", "modulename": "hyperx.api", "qualname": "RundeckCreationStatus.Success", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;RundeckCreationStatus.Success: 1&gt;"}, {"fullname": "hyperx.api.RundeckCreationStatus.InputFilePathAlreadyExists", "modulename": "hyperx.api", "qualname": "RundeckCreationStatus.InputFilePathAlreadyExists", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;RundeckCreationStatus.InputFilePathAlreadyExists: 2&gt;"}, {"fullname": "hyperx.api.RundeckCreationStatus.ResultFilePathAlreadyExists", "modulename": "hyperx.api", "qualname": "RundeckCreationStatus.ResultFilePathAlreadyExists", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;RundeckCreationStatus.ResultFilePathAlreadyExists: 3&gt;"}, {"fullname": "hyperx.api.RundeckRemoveStatus", "modulename": "hyperx.api", "qualname": "RundeckRemoveStatus", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.RundeckRemoveStatus.Success", "modulename": "hyperx.api", "qualname": "RundeckRemoveStatus.Success", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;RundeckRemoveStatus.Success: 1&gt;"}, {"fullname": "hyperx.api.RundeckRemoveStatus.InvalidId", "modulename": "hyperx.api", "qualname": "RundeckRemoveStatus.InvalidId", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;RundeckRemoveStatus.InvalidId: 2&gt;"}, {"fullname": "hyperx.api.RundeckRemoveStatus.CannotRemoveLastRundeck", "modulename": "hyperx.api", "qualname": "RundeckRemoveStatus.CannotRemoveLastRundeck", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;RundeckRemoveStatus.CannotRemoveLastRundeck: 3&gt;"}, {"fullname": "hyperx.api.RundeckRemoveStatus.CannotDeletePrimaryRundeck", "modulename": "hyperx.api", "qualname": "RundeckRemoveStatus.CannotDeletePrimaryRundeck", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;RundeckRemoveStatus.CannotDeletePrimaryRundeck: 4&gt;"}, {"fullname": "hyperx.api.RundeckRemoveStatus.RundeckNotFound", "modulename": "hyperx.api", "qualname": "RundeckRemoveStatus.RundeckNotFound", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;RundeckRemoveStatus.RundeckNotFound: 5&gt;"}, {"fullname": "hyperx.api.RundeckRemoveStatus.RundeckRemoveFailure", "modulename": "hyperx.api", "qualname": "RundeckRemoveStatus.RundeckRemoveFailure", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;RundeckRemoveStatus.RundeckRemoveFailure: 6&gt;"}, {"fullname": "hyperx.api.RundeckRemoveStatus.SuccessButIncompatibleFem", "modulename": "hyperx.api", "qualname": "RundeckRemoveStatus.SuccessButIncompatibleFem", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;RundeckRemoveStatus.SuccessButIncompatibleFem: 7&gt;"}, {"fullname": "hyperx.api.RundeckUpdateStatus", "modulename": "hyperx.api", "qualname": "RundeckUpdateStatus", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.RundeckUpdateStatus.Success", "modulename": "hyperx.api", "qualname": "RundeckUpdateStatus.Success", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;RundeckUpdateStatus.Success: 1&gt;"}, {"fullname": "hyperx.api.RundeckUpdateStatus.InvalidId", "modulename": "hyperx.api", "qualname": "RundeckUpdateStatus.InvalidId", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;RundeckUpdateStatus.InvalidId: 2&gt;"}, {"fullname": "hyperx.api.RundeckUpdateStatus.IdDoesNotExist", "modulename": "hyperx.api", "qualname": "RundeckUpdateStatus.IdDoesNotExist", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;RundeckUpdateStatus.IdDoesNotExist: 3&gt;"}, {"fullname": "hyperx.api.RundeckUpdateStatus.RundeckAlreadyPrimary", "modulename": "hyperx.api", "qualname": "RundeckUpdateStatus.RundeckAlreadyPrimary", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;RundeckUpdateStatus.RundeckAlreadyPrimary: 4&gt;"}, {"fullname": "hyperx.api.RundeckUpdateStatus.InputPathInUse", "modulename": "hyperx.api", "qualname": "RundeckUpdateStatus.InputPathInUse", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;RundeckUpdateStatus.InputPathInUse: 5&gt;"}, {"fullname": "hyperx.api.RundeckUpdateStatus.ResultPathInUse", "modulename": "hyperx.api", "qualname": "RundeckUpdateStatus.ResultPathInUse", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;RundeckUpdateStatus.ResultPathInUse: 6&gt;"}, {"fullname": "hyperx.api.RundeckUpdateStatus.RundeckCommitFailure", "modulename": "hyperx.api", "qualname": "RundeckUpdateStatus.RundeckCommitFailure", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;RundeckUpdateStatus.RundeckCommitFailure: 7&gt;"}, {"fullname": "hyperx.api.RundeckUpdateStatus.InputPathDoesNotExist", "modulename": "hyperx.api", "qualname": "RundeckUpdateStatus.InputPathDoesNotExist", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;RundeckUpdateStatus.InputPathDoesNotExist: 8&gt;"}, {"fullname": "hyperx.api.RundeckUpdateStatus.ResultPathDoesNotExist", "modulename": "hyperx.api", "qualname": "RundeckUpdateStatus.ResultPathDoesNotExist", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;RundeckUpdateStatus.ResultPathDoesNotExist: 9&gt;"}, {"fullname": "hyperx.api.RundeckUpdateStatus.SuccessButIncompatibleFem", "modulename": "hyperx.api", "qualname": "RundeckUpdateStatus.SuccessButIncompatibleFem", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;RundeckUpdateStatus.SuccessButIncompatibleFem: 10&gt;"}, {"fullname": "hyperx.api.ZoneCreationStatus", "modulename": "hyperx.api", "qualname": "ZoneCreationStatus", "kind": "class", "doc": "<p>Indicates whether a zone was created successfully. \n    If not, this indicates why the zone was not created.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.ZoneCreationStatus.Success", "modulename": "hyperx.api", "qualname": "ZoneCreationStatus.Success", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ZoneCreationStatus.Success: 1&gt;"}, {"fullname": "hyperx.api.ZoneCreationStatus.DuplicateNameFailure", "modulename": "hyperx.api", "qualname": "ZoneCreationStatus.DuplicateNameFailure", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ZoneCreationStatus.DuplicateNameFailure: 2&gt;"}, {"fullname": "hyperx.api.ZoneCreationStatus.InvalidFamilyCategory", "modulename": "hyperx.api", "qualname": "ZoneCreationStatus.InvalidFamilyCategory", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ZoneCreationStatus.InvalidFamilyCategory: 3&gt;"}, {"fullname": "hyperx.api.ZoneIdUpdateStatus", "modulename": "hyperx.api", "qualname": "ZoneIdUpdateStatus", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.ZoneIdUpdateStatus.Success", "modulename": "hyperx.api", "qualname": "ZoneIdUpdateStatus.Success", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ZoneIdUpdateStatus.Success: 1&gt;"}, {"fullname": "hyperx.api.ZoneIdUpdateStatus.DuplicateIdFailure", "modulename": "hyperx.api", "qualname": "ZoneIdUpdateStatus.DuplicateIdFailure", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ZoneIdUpdateStatus.DuplicateIdFailure: 2&gt;"}, {"fullname": "hyperx.api.ZoneIdUpdateStatus.IdOutOfRangeError", "modulename": "hyperx.api", "qualname": "ZoneIdUpdateStatus.IdOutOfRangeError", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ZoneIdUpdateStatus.IdOutOfRangeError: 3&gt;"}, {"fullname": "hyperx.api.UnitSystem", "modulename": "hyperx.api", "qualname": "UnitSystem", "kind": "class", "doc": "<p>Unit system specified when starting a scripting Application.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.UnitSystem.English", "modulename": "hyperx.api", "qualname": "UnitSystem.English", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;UnitSystem.English: 1&gt;"}, {"fullname": "hyperx.api.UnitSystem.SI", "modulename": "hyperx.api", "qualname": "UnitSystem.SI", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;UnitSystem.SI: 2&gt;"}, {"fullname": "hyperx.api.IdEntity", "modulename": "hyperx.api", "qualname": "IdEntity", "kind": "class", "doc": "<p>Represents an entity with an ID.</p>\n", "bases": "abc.ABC"}, {"fullname": "hyperx.api.IdEntity.__init__", "modulename": "hyperx.api", "qualname": "IdEntity.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">idEntity</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">IdEntity</span></span>)</span>"}, {"fullname": "hyperx.api.IdEntity.Id", "modulename": "hyperx.api", "qualname": "IdEntity.Id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.IdNameEntity", "modulename": "hyperx.api", "qualname": "IdNameEntity", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "IdEntity"}, {"fullname": "hyperx.api.IdNameEntity.__init__", "modulename": "hyperx.api", "qualname": "IdNameEntity.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">idNameEntity</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">IdNameEntity</span></span>)</span>"}, {"fullname": "hyperx.api.IdNameEntity.Name", "modulename": "hyperx.api", "qualname": "IdNameEntity.Name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.AnalysisDefinition", "modulename": "hyperx.api", "qualname": "AnalysisDefinition", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "IdNameEntity"}, {"fullname": "hyperx.api.AnalysisDefinition.__init__", "modulename": "hyperx.api", "qualname": "AnalysisDefinition.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">analysisDefinition</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">AnalysisDefinition</span></span>)</span>"}, {"fullname": "hyperx.api.AnalysisDefinition.AnalysisId", "modulename": "hyperx.api", "qualname": "AnalysisDefinition.AnalysisId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.AnalysisDefinition.Description", "modulename": "hyperx.api", "qualname": "AnalysisDefinition.Description", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Margin", "modulename": "hyperx.api", "qualname": "Margin", "kind": "class", "doc": "<p>Represents a Margin result.</p>\n"}, {"fullname": "hyperx.api.Margin.__init__", "modulename": "hyperx.api", "qualname": "Margin.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">margin</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">Margin</span></span>)</span>"}, {"fullname": "hyperx.api.Margin.AdjustedMargin", "modulename": "hyperx.api", "qualname": "Margin.AdjustedMargin", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Margin.IsFailureCode", "modulename": "hyperx.api", "qualname": "Margin.IsFailureCode", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.Margin.IsInformationalCode", "modulename": "hyperx.api", "qualname": "Margin.IsInformationalCode", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.Margin.MarginCode", "modulename": "hyperx.api", "qualname": "Margin.MarginCode", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.MarginCode"}, {"fullname": "hyperx.api.AnalysisResult", "modulename": "hyperx.api", "qualname": "AnalysisResult", "kind": "class", "doc": "<p>Contains result information for an analysis</p>\n", "bases": "abc.ABC"}, {"fullname": "hyperx.api.AnalysisResult.__init__", "modulename": "hyperx.api", "qualname": "AnalysisResult.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">analysisResult</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">AnalysisResult</span></span>)</span>"}, {"fullname": "hyperx.api.AnalysisResult.LimitUltimate", "modulename": "hyperx.api", "qualname": "AnalysisResult.LimitUltimate", "kind": "variable", "doc": "<p>Limit vs Ultimate loads.</p>\n", "annotation": ": hyperx.api.types.LimitUltimate"}, {"fullname": "hyperx.api.AnalysisResult.LoadCaseId", "modulename": "hyperx.api", "qualname": "AnalysisResult.LoadCaseId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.AnalysisResult.Margin", "modulename": "hyperx.api", "qualname": "AnalysisResult.Margin", "kind": "variable", "doc": "<p>Represents a Margin result.</p>\n", "annotation": ": &lt;property object at 0x0000014E357F8D10&gt;"}, {"fullname": "hyperx.api.AnalysisResult.AnalysisDefinition", "modulename": "hyperx.api", "qualname": "AnalysisResult.AnalysisDefinition", "kind": "variable", "doc": "<p></p>\n", "annotation": ": &lt;property object at 0x0000014E357F8D60&gt;"}, {"fullname": "hyperx.api.JointAnalysisResult", "modulename": "hyperx.api", "qualname": "JointAnalysisResult", "kind": "class", "doc": "<p>Contains result information for an analysis</p>\n", "bases": "AnalysisResult"}, {"fullname": "hyperx.api.JointAnalysisResult.__init__", "modulename": "hyperx.api", "qualname": "JointAnalysisResult.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">jointAnalysisResult</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">JointAnalysisResult</span></span>)</span>"}, {"fullname": "hyperx.api.JointAnalysisResult.ObjectId", "modulename": "hyperx.api", "qualname": "JointAnalysisResult.ObjectId", "kind": "variable", "doc": "<p>Enum identifying the possible entities within a joint</p>\n", "annotation": ": hyperx.api.types.JointObject"}, {"fullname": "hyperx.api.ZoneAnalysisConceptResult", "modulename": "hyperx.api", "qualname": "ZoneAnalysisConceptResult", "kind": "class", "doc": "<p>Contains result information for an analysis</p>\n", "bases": "AnalysisResult"}, {"fullname": "hyperx.api.ZoneAnalysisConceptResult.__init__", "modulename": "hyperx.api", "qualname": "ZoneAnalysisConceptResult.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">zoneAnalysisConceptResult</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">ZoneAnalysisConceptResult</span></span>)</span>"}, {"fullname": "hyperx.api.ZoneAnalysisConceptResult.ConceptId", "modulename": "hyperx.api", "qualname": "ZoneAnalysisConceptResult.ConceptId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.FamilyConceptUID"}, {"fullname": "hyperx.api.ZoneAnalysisObjectResult", "modulename": "hyperx.api", "qualname": "ZoneAnalysisObjectResult", "kind": "class", "doc": "<p>Contains result information for an analysis</p>\n", "bases": "AnalysisResult"}, {"fullname": "hyperx.api.ZoneAnalysisObjectResult.__init__", "modulename": "hyperx.api", "qualname": "ZoneAnalysisObjectResult.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">zoneAnalysisObjectResult</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">ZoneAnalysisObjectResult</span></span>)</span>"}, {"fullname": "hyperx.api.ZoneAnalysisObjectResult.ObjectId", "modulename": "hyperx.api", "qualname": "ZoneAnalysisObjectResult.ObjectId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.FamilyObjectUID"}, {"fullname": "hyperx.api.AssignableProperty", "modulename": "hyperx.api", "qualname": "AssignableProperty", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "IdNameEntity"}, {"fullname": "hyperx.api.AssignableProperty.__init__", "modulename": "hyperx.api", "qualname": "AssignableProperty.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">assignableProperty</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">AssignableProperty</span></span>)</span>"}, {"fullname": "hyperx.api.AssignablePropertyWithFamilyCategory", "modulename": "hyperx.api", "qualname": "AssignablePropertyWithFamilyCategory", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "AssignableProperty"}, {"fullname": "hyperx.api.AssignablePropertyWithFamilyCategory.__init__", "modulename": "hyperx.api", "qualname": "AssignablePropertyWithFamilyCategory.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">assignablePropertyWithFamilyCategory</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">AssignablePropertyWithFamilyCategory</span></span>)</span>"}, {"fullname": "hyperx.api.AssignablePropertyWithFamilyCategory.FamilyCategory", "modulename": "hyperx.api", "qualname": "AssignablePropertyWithFamilyCategory.FamilyCategory", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.FamilyCategory"}, {"fullname": "hyperx.api.FailureObjectGroup", "modulename": "hyperx.api", "qualname": "FailureObjectGroup", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "IdNameEntity"}, {"fullname": "hyperx.api.FailureObjectGroup.__init__", "modulename": "hyperx.api", "qualname": "FailureObjectGroup.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">failureObjectGroup</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">FailureObjectGroup</span></span>)</span>"}, {"fullname": "hyperx.api.FailureObjectGroup.ObjectGroup", "modulename": "hyperx.api", "qualname": "FailureObjectGroup.ObjectGroup", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.ObjectGroup"}, {"fullname": "hyperx.api.FailureObjectGroup.IsEnabled", "modulename": "hyperx.api", "qualname": "FailureObjectGroup.IsEnabled", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.FailureObjectGroup.LimitUltimate", "modulename": "hyperx.api", "qualname": "FailureObjectGroup.LimitUltimate", "kind": "variable", "doc": "<p>Limit vs Ultimate loads.</p>\n", "annotation": ": hyperx.api.types.LimitUltimate"}, {"fullname": "hyperx.api.FailureObjectGroup.RequiredMargin", "modulename": "hyperx.api", "qualname": "FailureObjectGroup.RequiredMargin", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.FailureSetting", "modulename": "hyperx.api", "qualname": "FailureSetting", "kind": "class", "doc": "<p>Setting for a Failure Mode or a Failure Criteria.</p>\n", "bases": "IdNameEntity"}, {"fullname": "hyperx.api.FailureSetting.__init__", "modulename": "hyperx.api", "qualname": "FailureSetting.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">failureSetting</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">FailureSetting</span></span>)</span>"}, {"fullname": "hyperx.api.FailureSetting.CategoryId", "modulename": "hyperx.api", "qualname": "FailureSetting.CategoryId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.FailureSetting.DataType", "modulename": "hyperx.api", "qualname": "FailureSetting.DataType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.UserConstantDataType"}, {"fullname": "hyperx.api.FailureSetting.DefaultValue", "modulename": "hyperx.api", "qualname": "FailureSetting.DefaultValue", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.FailureSetting.Description", "modulename": "hyperx.api", "qualname": "FailureSetting.Description", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.FailureSetting.EnumValues", "modulename": "hyperx.api", "qualname": "FailureSetting.EnumValues", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict[int, str]"}, {"fullname": "hyperx.api.FailureSetting.PackageId", "modulename": "hyperx.api", "qualname": "FailureSetting.PackageId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.FailureSetting.PackageSettingId", "modulename": "hyperx.api", "qualname": "FailureSetting.PackageSettingId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.FailureSetting.UID", "modulename": "hyperx.api", "qualname": "FailureSetting.UID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": System.Guid"}, {"fullname": "hyperx.api.FailureSetting.Value", "modulename": "hyperx.api", "qualname": "FailureSetting.Value", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.FailureSetting.SetStringValue", "modulename": "hyperx.api", "qualname": "FailureSetting.SetStringValue", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.FailureSetting.SetIntValue", "modulename": "hyperx.api", "qualname": "FailureSetting.SetIntValue", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.FailureSetting.SetFloatValue", "modulename": "hyperx.api", "qualname": "FailureSetting.SetFloatValue", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.FailureSetting.SetBoolValue", "modulename": "hyperx.api", "qualname": "FailureSetting.SetBoolValue", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.FailureSetting.SetSelectionValue", "modulename": "hyperx.api", "qualname": "FailureSetting.SetSelectionValue", "kind": "function", "doc": "<p>Set enum value by index.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.IdEntityCol", "modulename": "hyperx.api", "qualname": "IdEntityCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "typing.Generic[~T], abc.ABC"}, {"fullname": "hyperx.api.IdEntityCol.__init__", "modulename": "hyperx.api", "qualname": "IdEntityCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">idEntityCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">IdEntityCol</span><span class=\"p\">[]</span></span>)</span>"}, {"fullname": "hyperx.api.IdEntityCol.IdEntityColList", "modulename": "hyperx.api", "qualname": "IdEntityCol.IdEntityColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.IdEntity]"}, {"fullname": "hyperx.api.IdEntityCol.Ids", "modulename": "hyperx.api", "qualname": "IdEntityCol.Ids", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[int]"}, {"fullname": "hyperx.api.IdEntityCol.Contains", "modulename": "hyperx.api", "qualname": "IdEntityCol.Contains", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.IdEntityCol.Count", "modulename": "hyperx.api", "qualname": "IdEntityCol.Count", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.IdEntityCol.Get", "modulename": "hyperx.api", "qualname": "IdEntityCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">T</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.IdNameEntityCol", "modulename": "hyperx.api", "qualname": "IdNameEntityCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "IdEntityCol, typing.Generic[~T]"}, {"fullname": "hyperx.api.IdNameEntityCol.IdNameEntityColList", "modulename": "hyperx.api", "qualname": "IdNameEntityCol.IdNameEntityColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[~T]"}, {"fullname": "hyperx.api.IdNameEntityCol.Names", "modulename": "hyperx.api", "qualname": "IdNameEntityCol.Names", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[str]"}, {"fullname": "hyperx.api.FailureObjectGroupCol", "modulename": "hyperx.api", "qualname": "FailureObjectGroupCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdNameEntityCol[hyperx.api.FailureObjectGroup]"}, {"fullname": "hyperx.api.FailureObjectGroupCol.__init__", "modulename": "hyperx.api", "qualname": "FailureObjectGroupCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">failureObjectGroupCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">FailureObjectGroupCol</span></span>)</span>"}, {"fullname": "hyperx.api.FailureObjectGroupCol.FailureObjectGroupColList", "modulename": "hyperx.api", "qualname": "FailureObjectGroupCol.FailureObjectGroupColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.FailureObjectGroup]"}, {"fullname": "hyperx.api.FailureObjectGroupCol.Get", "modulename": "hyperx.api", "qualname": "FailureObjectGroupCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">FailureObjectGroup</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.FailureSettingCol", "modulename": "hyperx.api", "qualname": "FailureSettingCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdNameEntityCol[hyperx.api.FailureSetting]"}, {"fullname": "hyperx.api.FailureSettingCol.__init__", "modulename": "hyperx.api", "qualname": "FailureSettingCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">failureSettingCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">FailureSettingCol</span></span>)</span>"}, {"fullname": "hyperx.api.FailureSettingCol.FailureSettingColList", "modulename": "hyperx.api", "qualname": "FailureSettingCol.FailureSettingColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.FailureSetting]"}, {"fullname": "hyperx.api.FailureSettingCol.Get", "modulename": "hyperx.api", "qualname": "FailureSettingCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">FailureSetting</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.FailureCriterion", "modulename": "hyperx.api", "qualname": "FailureCriterion", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "IdNameEntity"}, {"fullname": "hyperx.api.FailureCriterion.__init__", "modulename": "hyperx.api", "qualname": "FailureCriterion.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">failureCriterion</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">FailureCriterion</span></span>)</span>"}, {"fullname": "hyperx.api.FailureCriterion.Description", "modulename": "hyperx.api", "qualname": "FailureCriterion.Description", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.FailureCriterion.IsEnabled", "modulename": "hyperx.api", "qualname": "FailureCriterion.IsEnabled", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.FailureCriterion.LimitUltimate", "modulename": "hyperx.api", "qualname": "FailureCriterion.LimitUltimate", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.LimitUltimate"}, {"fullname": "hyperx.api.FailureCriterion.ObjectGroups", "modulename": "hyperx.api", "qualname": "FailureCriterion.ObjectGroups", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.FailureObjectGroupCol"}, {"fullname": "hyperx.api.FailureCriterion.RequiredMargin", "modulename": "hyperx.api", "qualname": "FailureCriterion.RequiredMargin", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.FailureCriterion.Settings", "modulename": "hyperx.api", "qualname": "FailureCriterion.Settings", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.FailureSettingCol"}, {"fullname": "hyperx.api.IdNameEntityRenameable", "modulename": "hyperx.api", "qualname": "IdNameEntityRenameable", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "IdNameEntity"}, {"fullname": "hyperx.api.IdNameEntityRenameable.__init__", "modulename": "hyperx.api", "qualname": "IdNameEntityRenameable.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">idNameEntityRenameable</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">IdNameEntityRenameable</span></span>)</span>"}, {"fullname": "hyperx.api.IdNameEntityRenameable.Rename", "modulename": "hyperx.api", "qualname": "IdNameEntityRenameable.Rename", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.FailureCriterionCol", "modulename": "hyperx.api", "qualname": "FailureCriterionCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdNameEntityCol[hyperx.api.FailureCriterion]"}, {"fullname": "hyperx.api.FailureCriterionCol.__init__", "modulename": "hyperx.api", "qualname": "FailureCriterionCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">failureCriterionCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">FailureCriterionCol</span></span>)</span>"}, {"fullname": "hyperx.api.FailureCriterionCol.FailureCriterionColList", "modulename": "hyperx.api", "qualname": "FailureCriterionCol.FailureCriterionColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.FailureCriterion]"}, {"fullname": "hyperx.api.FailureCriterionCol.Get", "modulename": "hyperx.api", "qualname": "FailureCriterionCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">FailureCriterion</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.FailureMode", "modulename": "hyperx.api", "qualname": "FailureMode", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "IdNameEntityRenameable"}, {"fullname": "hyperx.api.FailureMode.__init__", "modulename": "hyperx.api", "qualname": "FailureMode.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">failureMode</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">FailureMode</span></span>)</span>"}, {"fullname": "hyperx.api.FailureMode.AnalysisCategoryId", "modulename": "hyperx.api", "qualname": "FailureMode.AnalysisCategoryId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.FailureMode.AnalysisCategoryName", "modulename": "hyperx.api", "qualname": "FailureMode.AnalysisCategoryName", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.FailureMode.Criteria", "modulename": "hyperx.api", "qualname": "FailureMode.Criteria", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.FailureCriterionCol"}, {"fullname": "hyperx.api.FailureMode.Settings", "modulename": "hyperx.api", "qualname": "FailureMode.Settings", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.FailureSettingCol"}, {"fullname": "hyperx.api.FailureModeCol", "modulename": "hyperx.api", "qualname": "FailureModeCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdNameEntityCol[hyperx.api.FailureMode]"}, {"fullname": "hyperx.api.FailureModeCol.__init__", "modulename": "hyperx.api", "qualname": "FailureModeCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">failureModeCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">FailureModeCol</span></span>)</span>"}, {"fullname": "hyperx.api.FailureModeCol.FailureModeColList", "modulename": "hyperx.api", "qualname": "FailureModeCol.FailureModeColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.FailureMode]"}, {"fullname": "hyperx.api.FailureModeCol.CreateFailureMode", "modulename": "hyperx.api", "qualname": "FailureModeCol.CreateFailureMode", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">item2</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">FailureMode</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.FailureModeCol.Get", "modulename": "hyperx.api", "qualname": "FailureModeCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">FailureMode</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.AnalysisProperty", "modulename": "hyperx.api", "qualname": "AnalysisProperty", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "AssignablePropertyWithFamilyCategory"}, {"fullname": "hyperx.api.AnalysisProperty.__init__", "modulename": "hyperx.api", "qualname": "AnalysisProperty.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">analysisProperty</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">AnalysisProperty</span></span>)</span>"}, {"fullname": "hyperx.api.AnalysisProperty.FailureModes", "modulename": "hyperx.api", "qualname": "AnalysisProperty.FailureModes", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.FailureModeCol"}, {"fullname": "hyperx.api.AnalysisProperty.AddFailureMode", "modulename": "hyperx.api", "qualname": "AnalysisProperty.AddFailureMode", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.AnalysisProperty.RemoveFailureMode", "modulename": "hyperx.api", "qualname": "AnalysisProperty.RemoveFailureMode", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DesignProperty", "modulename": "hyperx.api", "qualname": "DesignProperty", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "AssignablePropertyWithFamilyCategory"}, {"fullname": "hyperx.api.DesignProperty.__init__", "modulename": "hyperx.api", "qualname": "DesignProperty.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">designProperty</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">DesignProperty</span></span>)</span>"}, {"fullname": "hyperx.api.DesignProperty.Copy", "modulename": "hyperx.api", "qualname": "DesignProperty.Copy", "kind": "function", "doc": "<p>Creates a copy of this DesignProperty.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">newName</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">DesignProperty</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadProperty", "modulename": "hyperx.api", "qualname": "LoadProperty", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "AssignableProperty"}, {"fullname": "hyperx.api.LoadProperty.__init__", "modulename": "hyperx.api", "qualname": "LoadProperty.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">loadProperty</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadProperty</span></span>)</span>"}, {"fullname": "hyperx.api.LoadProperty.Category", "modulename": "hyperx.api", "qualname": "LoadProperty.Category", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.FamilyCategory"}, {"fullname": "hyperx.api.LoadProperty.Type", "modulename": "hyperx.api", "qualname": "LoadProperty.Type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.LoadPropertyType"}, {"fullname": "hyperx.api.LoadProperty.IsZeroCurvature", "modulename": "hyperx.api", "qualname": "LoadProperty.IsZeroCurvature", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LoadProperty.ModificationDate", "modulename": "hyperx.api", "qualname": "LoadProperty.ModificationDate", "kind": "variable", "doc": "<p></p>\n", "annotation": ": System.DateTime"}, {"fullname": "hyperx.api.DesignLoadSubcase", "modulename": "hyperx.api", "qualname": "DesignLoadSubcase", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "IdNameEntity"}, {"fullname": "hyperx.api.DesignLoadSubcase.__init__", "modulename": "hyperx.api", "qualname": "DesignLoadSubcase.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">designLoadSubcase</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">DesignLoadSubcase</span></span>)</span>"}, {"fullname": "hyperx.api.DesignLoadSubcase.RunDeckId", "modulename": "hyperx.api", "qualname": "DesignLoadSubcase.RunDeckId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.DesignLoadSubcase.IsThermal", "modulename": "hyperx.api", "qualname": "DesignLoadSubcase.IsThermal", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.DesignLoadSubcase.IsEditable", "modulename": "hyperx.api", "qualname": "DesignLoadSubcase.IsEditable", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.DesignLoadSubcase.Description", "modulename": "hyperx.api", "qualname": "DesignLoadSubcase.Description", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.DesignLoadSubcase.ModificationDate", "modulename": "hyperx.api", "qualname": "DesignLoadSubcase.ModificationDate", "kind": "variable", "doc": "<p></p>\n", "annotation": ": System.DateTime"}, {"fullname": "hyperx.api.DesignLoadSubcase.NastranSubcaseId", "modulename": "hyperx.api", "qualname": "DesignLoadSubcase.NastranSubcaseId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.DesignLoadSubcase.NastranLoadId", "modulename": "hyperx.api", "qualname": "DesignLoadSubcase.NastranLoadId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.DesignLoadSubcase.NastranSpcId", "modulename": "hyperx.api", "qualname": "DesignLoadSubcase.NastranSpcId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.DesignLoadSubcase.AbaqusStepName", "modulename": "hyperx.api", "qualname": "DesignLoadSubcase.AbaqusStepName", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.DesignLoadSubcase.AbaqusLoadCaseName", "modulename": "hyperx.api", "qualname": "DesignLoadSubcase.AbaqusLoadCaseName", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.DesignLoadSubcase.AbaqusStepTime", "modulename": "hyperx.api", "qualname": "DesignLoadSubcase.AbaqusStepTime", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.DesignLoadSubcase.RunDeckOrder", "modulename": "hyperx.api", "qualname": "DesignLoadSubcase.RunDeckOrder", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.DesignLoadSubcase.SolutionType", "modulename": "hyperx.api", "qualname": "DesignLoadSubcase.SolutionType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.FeaSolutionType"}, {"fullname": "hyperx.api.DesignLoadSubcaseMultiplier", "modulename": "hyperx.api", "qualname": "DesignLoadSubcaseMultiplier", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "IdNameEntity"}, {"fullname": "hyperx.api.DesignLoadSubcaseMultiplier.__init__", "modulename": "hyperx.api", "qualname": "DesignLoadSubcaseMultiplier.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">designLoadSubcaseMultiplier</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">DesignLoadSubcaseMultiplier</span></span>)</span>"}, {"fullname": "hyperx.api.DesignLoadSubcaseMultiplier.LimitFactor", "modulename": "hyperx.api", "qualname": "DesignLoadSubcaseMultiplier.LimitFactor", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.DesignLoadSubcaseMultiplier.Subcase", "modulename": "hyperx.api", "qualname": "DesignLoadSubcaseMultiplier.Subcase", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.DesignLoadSubcase"}, {"fullname": "hyperx.api.DesignLoadSubcaseMultiplier.UltimateFactor", "modulename": "hyperx.api", "qualname": "DesignLoadSubcaseMultiplier.UltimateFactor", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.DesignLoadSubcaseMultiplier.Value", "modulename": "hyperx.api", "qualname": "DesignLoadSubcaseMultiplier.Value", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.DesignLoadSubcaseTemperature", "modulename": "hyperx.api", "qualname": "DesignLoadSubcaseTemperature", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "IdNameEntity"}, {"fullname": "hyperx.api.DesignLoadSubcaseTemperature.__init__", "modulename": "hyperx.api", "qualname": "DesignLoadSubcaseTemperature.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">designLoadSubcaseTemperature</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">DesignLoadSubcaseTemperature</span></span>)</span>"}, {"fullname": "hyperx.api.DesignLoadSubcaseTemperature.HasTemperatureSubcase", "modulename": "hyperx.api", "qualname": "DesignLoadSubcaseTemperature.HasTemperatureSubcase", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.DesignLoadSubcaseTemperature.Subcase", "modulename": "hyperx.api", "qualname": "DesignLoadSubcaseTemperature.Subcase", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.DesignLoadSubcase"}, {"fullname": "hyperx.api.DesignLoadSubcaseTemperature.TemperatureChoiceType", "modulename": "hyperx.api", "qualname": "DesignLoadSubcaseTemperature.TemperatureChoiceType", "kind": "variable", "doc": "<p>Load Case Setting selection for analysis and initial temperature.</p>\n", "annotation": ": hyperx.api.types.TemperatureChoiceType"}, {"fullname": "hyperx.api.DesignLoadSubcaseTemperature.Value", "modulename": "hyperx.api", "qualname": "DesignLoadSubcaseTemperature.Value", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.DesignLoadSubcaseMultiplierCol", "modulename": "hyperx.api", "qualname": "DesignLoadSubcaseMultiplierCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdNameEntityCol[hyperx.api.DesignLoadSubcaseMultiplier]"}, {"fullname": "hyperx.api.DesignLoadSubcaseMultiplierCol.__init__", "modulename": "hyperx.api", "qualname": "DesignLoadSubcaseMultiplierCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">designLoadSubcaseMultiplierCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">DesignLoadSubcaseMultiplierCol</span></span>)</span>"}, {"fullname": "hyperx.api.DesignLoadSubcaseMultiplierCol.DesignLoadSubcaseMultiplierColList", "modulename": "hyperx.api", "qualname": "DesignLoadSubcaseMultiplierCol.DesignLoadSubcaseMultiplierColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.DesignLoadSubcaseMultiplier]"}, {"fullname": "hyperx.api.DesignLoadSubcaseMultiplierCol.Get", "modulename": "hyperx.api", "qualname": "DesignLoadSubcaseMultiplierCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">DesignLoadSubcaseMultiplier</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DesignLoad", "modulename": "hyperx.api", "qualname": "DesignLoad", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "IdNameEntity"}, {"fullname": "hyperx.api.DesignLoad.__init__", "modulename": "hyperx.api", "qualname": "DesignLoad.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">designLoad</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">DesignLoad</span></span>)</span>"}, {"fullname": "hyperx.api.DesignLoad.AnalysisTemperature", "modulename": "hyperx.api", "qualname": "DesignLoad.AnalysisTemperature", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.DesignLoadSubcaseTemperature"}, {"fullname": "hyperx.api.DesignLoad.InitialTemperature", "modulename": "hyperx.api", "qualname": "DesignLoad.InitialTemperature", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.DesignLoadSubcaseTemperature"}, {"fullname": "hyperx.api.DesignLoad.Description", "modulename": "hyperx.api", "qualname": "DesignLoad.Description", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.DesignLoad.IsActive", "modulename": "hyperx.api", "qualname": "DesignLoad.IsActive", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.DesignLoad.IsEditable", "modulename": "hyperx.api", "qualname": "DesignLoad.IsEditable", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.DesignLoad.IsVirtual", "modulename": "hyperx.api", "qualname": "DesignLoad.IsVirtual", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.DesignLoad.ModificationDate", "modulename": "hyperx.api", "qualname": "DesignLoad.ModificationDate", "kind": "variable", "doc": "<p></p>\n", "annotation": ": System.DateTime"}, {"fullname": "hyperx.api.DesignLoad.SubcaseMultipliers", "modulename": "hyperx.api", "qualname": "DesignLoad.SubcaseMultipliers", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.DesignLoadSubcaseMultiplierCol"}, {"fullname": "hyperx.api.DesignLoad.Types", "modulename": "hyperx.api", "qualname": "DesignLoad.Types", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[hyperx.api.types.LoadCaseType]"}, {"fullname": "hyperx.api.DesignLoad.UID", "modulename": "hyperx.api", "qualname": "DesignLoad.UID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": System.Guid"}, {"fullname": "hyperx.api.JointDesignResult", "modulename": "hyperx.api", "qualname": "JointDesignResult", "kind": "class", "doc": "<p>Represents an entity with an ID.</p>\n", "bases": "IdEntity"}, {"fullname": "hyperx.api.JointDesignResult.__init__", "modulename": "hyperx.api", "qualname": "JointDesignResult.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">jointDesignResult</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">JointDesignResult</span></span>)</span>"}, {"fullname": "hyperx.api.ZoneDesignResult", "modulename": "hyperx.api", "qualname": "ZoneDesignResult", "kind": "class", "doc": "<p>Represents an entity with an ID.</p>\n", "bases": "IdEntity"}, {"fullname": "hyperx.api.ZoneDesignResult.__init__", "modulename": "hyperx.api", "qualname": "ZoneDesignResult.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">zoneDesignResult</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">ZoneDesignResult</span></span>)</span>"}, {"fullname": "hyperx.api.ZoneDesignResult.VariableParameter", "modulename": "hyperx.api", "qualname": "ZoneDesignResult.VariableParameter", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.VariableParameter"}, {"fullname": "hyperx.api.ZoneDesignResult.Value", "modulename": "hyperx.api", "qualname": "ZoneDesignResult.Value", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ZoneDesignResult.MaterialId", "modulename": "hyperx.api", "qualname": "ZoneDesignResult.MaterialId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.ZoneDesignResult.MaterialType", "modulename": "hyperx.api", "qualname": "ZoneDesignResult.MaterialType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.MaterialType"}, {"fullname": "hyperx.api.Vector3d", "modulename": "hyperx.api", "qualname": "Vector3d", "kind": "class", "doc": "<p>Represents a readonly 3D vector.</p>\n"}, {"fullname": "hyperx.api.Vector3d.__init__", "modulename": "hyperx.api", "qualname": "Vector3d.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">vector3d</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">Vector3d</span></span>)</span>"}, {"fullname": "hyperx.api.Vector3d.Create_Vector3d", "modulename": "hyperx.api", "qualname": "Vector3d.Create_Vector3d", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Vector3d.X", "modulename": "hyperx.api", "qualname": "Vector3d.X", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Vector3d.Y", "modulename": "hyperx.api", "qualname": "Vector3d.Y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Vector3d.Z", "modulename": "hyperx.api", "qualname": "Vector3d.Z", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Vector3d.Equals", "modulename": "hyperx.api", "qualname": "Vector3d.Equals", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Vector3d.GetHashCode", "modulename": "hyperx.api", "qualname": "Vector3d.GetHashCode", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DiscreteField", "modulename": "hyperx.api", "qualname": "DiscreteField", "kind": "class", "doc": "<p>Represents a table of discrete field data.</p>\n", "bases": "IdNameEntityRenameable"}, {"fullname": "hyperx.api.DiscreteField.__init__", "modulename": "hyperx.api", "qualname": "DiscreteField.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">discreteField</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">DiscreteField</span></span>)</span>"}, {"fullname": "hyperx.api.DiscreteField.Columns", "modulename": "hyperx.api", "qualname": "DiscreteField.Columns", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict[int, str]"}, {"fullname": "hyperx.api.DiscreteField.ColumnCount", "modulename": "hyperx.api", "qualname": "DiscreteField.ColumnCount", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.DiscreteField.DataType", "modulename": "hyperx.api", "qualname": "DiscreteField.DataType", "kind": "variable", "doc": "<p>Defines the type of data stored in a Discrete Field. Such as Vector, Scalar, String.</p>\n", "annotation": ": hyperx.api.types.DiscreteFieldDataType"}, {"fullname": "hyperx.api.DiscreteField.PhysicalEntityType", "modulename": "hyperx.api", "qualname": "DiscreteField.PhysicalEntityType", "kind": "variable", "doc": "<p>Defines the type of physical entity that a Discrete Field applies to, such as zone, element, joint, etc.</p>\n", "annotation": ": hyperx.api.types.DiscreteFieldPhysicalEntityType"}, {"fullname": "hyperx.api.DiscreteField.PointIds", "modulename": "hyperx.api", "qualname": "DiscreteField.PointIds", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[hyperx.api.Vector3d]"}, {"fullname": "hyperx.api.DiscreteField.RowCount", "modulename": "hyperx.api", "qualname": "DiscreteField.RowCount", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.DiscreteField.RowIds", "modulename": "hyperx.api", "qualname": "DiscreteField.RowIds", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[int]"}, {"fullname": "hyperx.api.DiscreteField.AddColumn", "modulename": "hyperx.api", "qualname": "DiscreteField.AddColumn", "kind": "function", "doc": "<p>Create a new column with the given name. Returns the Id of the newly created column</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DiscreteField.AddPointRow", "modulename": "hyperx.api", "qualname": "DiscreteField.AddPointRow", "kind": "function", "doc": "<p>Create an empty row in a point-based table.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pointId</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Vector3d</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DiscreteField.ReadNumericCell", "modulename": "hyperx.api", "qualname": "DiscreteField.ReadNumericCell", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">item2</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DiscreteField.ReadStringCell", "modulename": "hyperx.api", "qualname": "DiscreteField.ReadStringCell", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">item2</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DiscreteField.SetColumnName", "modulename": "hyperx.api", "qualname": "DiscreteField.SetColumnName", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">columnId</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DiscreteField.SetNumericValue", "modulename": "hyperx.api", "qualname": "DiscreteField.SetNumericValue", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">item2</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">item3</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DiscreteField.SetStringValue", "modulename": "hyperx.api", "qualname": "DiscreteField.SetStringValue", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">item2</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">item3</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DiscreteField.DeleteAllRows", "modulename": "hyperx.api", "qualname": "DiscreteField.DeleteAllRows", "kind": "function", "doc": "<p>Delete all rows for this discrete field.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DiscreteField.DeleteColumn", "modulename": "hyperx.api", "qualname": "DiscreteField.DeleteColumn", "kind": "function", "doc": "<p>Delete a specified column for this discrete field. Columns are 1-indexed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">columnId</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DiscreteField.DeletePointRow", "modulename": "hyperx.api", "qualname": "DiscreteField.DeletePointRow", "kind": "function", "doc": "<p>Delete a specific row for a point-based table.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pointId</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Vector3d</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DiscreteField.DeleteRow", "modulename": "hyperx.api", "qualname": "DiscreteField.DeleteRow", "kind": "function", "doc": "<p>Delete a specific row for a non-point-based table.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">entityId</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DiscreteField.DeleteRowsAndColumns", "modulename": "hyperx.api", "qualname": "DiscreteField.DeleteRowsAndColumns", "kind": "function", "doc": "<p>Delete all rows and columns for this discrete field.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Node", "modulename": "hyperx.api", "qualname": "Node", "kind": "class", "doc": "<p>Represents an entity with an ID.</p>\n", "bases": "IdEntity"}, {"fullname": "hyperx.api.Node.__init__", "modulename": "hyperx.api", "qualname": "Node.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">Node</span></span>)</span>"}, {"fullname": "hyperx.api.Node.X", "modulename": "hyperx.api", "qualname": "Node.X", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Node.Y", "modulename": "hyperx.api", "qualname": "Node.Y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Node.Z", "modulename": "hyperx.api", "qualname": "Node.Z", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Centroid", "modulename": "hyperx.api", "qualname": "Centroid", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "hyperx.api.Centroid.__init__", "modulename": "hyperx.api", "qualname": "Centroid.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">centroid</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">Centroid</span></span>)</span>"}, {"fullname": "hyperx.api.Centroid.X", "modulename": "hyperx.api", "qualname": "Centroid.X", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Centroid.Y", "modulename": "hyperx.api", "qualname": "Centroid.Y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Centroid.Z", "modulename": "hyperx.api", "qualname": "Centroid.Z", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Element", "modulename": "hyperx.api", "qualname": "Element", "kind": "class", "doc": "<p>Represents an entity with an ID.</p>\n", "bases": "IdEntity"}, {"fullname": "hyperx.api.Element.__init__", "modulename": "hyperx.api", "qualname": "Element.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">Element</span></span>)</span>"}, {"fullname": "hyperx.api.Element.MarginOfSafety", "modulename": "hyperx.api", "qualname": "Element.MarginOfSafety", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Element.Centroid", "modulename": "hyperx.api", "qualname": "Element.Centroid", "kind": "variable", "doc": "<p></p>\n", "annotation": ": &lt;property object at 0x0000014E357FB4C0&gt;"}, {"fullname": "hyperx.api.Element.Nodes", "modulename": "hyperx.api", "qualname": "Element.Nodes", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[hyperx.api.Node]"}, {"fullname": "hyperx.api.FailureModeCategory", "modulename": "hyperx.api", "qualname": "FailureModeCategory", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "IdNameEntity"}, {"fullname": "hyperx.api.FailureModeCategory.__init__", "modulename": "hyperx.api", "qualname": "FailureModeCategory.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">failureModeCategory</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">FailureModeCategory</span></span>)</span>"}, {"fullname": "hyperx.api.FailureModeCategory.PackageId", "modulename": "hyperx.api", "qualname": "FailureModeCategory.PackageId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.EntityWithAssignableProperties", "modulename": "hyperx.api", "qualname": "EntityWithAssignableProperties", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "IdNameEntityRenameable"}, {"fullname": "hyperx.api.EntityWithAssignableProperties.__init__", "modulename": "hyperx.api", "qualname": "EntityWithAssignableProperties.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">entityWithAssignableProperties</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">EntityWithAssignableProperties</span></span>)</span>"}, {"fullname": "hyperx.api.EntityWithAssignableProperties.AssignedAnalysisProperty", "modulename": "hyperx.api", "qualname": "EntityWithAssignableProperties.AssignedAnalysisProperty", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.AnalysisProperty"}, {"fullname": "hyperx.api.EntityWithAssignableProperties.AssignedDesignProperty", "modulename": "hyperx.api", "qualname": "EntityWithAssignableProperties.AssignedDesignProperty", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.DesignProperty"}, {"fullname": "hyperx.api.EntityWithAssignableProperties.AssignedLoadProperty", "modulename": "hyperx.api", "qualname": "EntityWithAssignableProperties.AssignedLoadProperty", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.LoadProperty"}, {"fullname": "hyperx.api.EntityWithAssignableProperties.AssignAnalysisProperty", "modulename": "hyperx.api", "qualname": "EntityWithAssignableProperties.AssignAnalysisProperty", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">PropertyAssignmentStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.EntityWithAssignableProperties.AssignDesignProperty", "modulename": "hyperx.api", "qualname": "EntityWithAssignableProperties.AssignDesignProperty", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">PropertyAssignmentStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.EntityWithAssignableProperties.AssignLoadProperty", "modulename": "hyperx.api", "qualname": "EntityWithAssignableProperties.AssignLoadProperty", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">PropertyAssignmentStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.EntityWithAssignableProperties.AssignProperty", "modulename": "hyperx.api", "qualname": "EntityWithAssignableProperties.AssignProperty", "kind": "function", "doc": "<p>Assign a Property to this entity.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">property</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">AssignableProperty</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">PropertyAssignmentStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.AnalysisResultCol", "modulename": "hyperx.api", "qualname": "AnalysisResultCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "typing.Generic[~T]"}, {"fullname": "hyperx.api.AnalysisResultCol.__init__", "modulename": "hyperx.api", "qualname": "AnalysisResultCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">analysisResultCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">AnalysisResultCol</span><span class=\"p\">[]</span></span>)</span>"}, {"fullname": "hyperx.api.AnalysisResultCol.AnalysisResultColList", "modulename": "hyperx.api", "qualname": "AnalysisResultCol.AnalysisResultColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.AnalysisResult]"}, {"fullname": "hyperx.api.AnalysisResultCol.Count", "modulename": "hyperx.api", "qualname": "AnalysisResultCol.Count", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ZoneJointEntity", "modulename": "hyperx.api", "qualname": "ZoneJointEntity", "kind": "class", "doc": "<p>Abstract base for a Zone or Joint.</p>\n", "bases": "EntityWithAssignableProperties"}, {"fullname": "hyperx.api.ZoneJointEntity.GetMinimumMargin", "modulename": "hyperx.api", "qualname": "ZoneJointEntity.GetMinimumMargin", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Margin</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ZoneJointEntity.GetControllingResult", "modulename": "hyperx.api", "qualname": "ZoneJointEntity.GetControllingResult", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">AnalysisResult</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ZoneJointEntity.GetAllResults", "modulename": "hyperx.api", "qualname": "ZoneJointEntity.GetAllResults", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">AnalysisResultCol</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.JointDesignResultCol", "modulename": "hyperx.api", "qualname": "JointDesignResultCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdEntityCol[hyperx.api.JointDesignResult]"}, {"fullname": "hyperx.api.JointDesignResultCol.__init__", "modulename": "hyperx.api", "qualname": "JointDesignResultCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">jointDesignResultCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">JointDesignResultCol</span></span>)</span>"}, {"fullname": "hyperx.api.JointDesignResultCol.JointDesignResultColList", "modulename": "hyperx.api", "qualname": "JointDesignResultCol.JointDesignResultColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.JointDesignResult]"}, {"fullname": "hyperx.api.JointDesignResultCol.Get", "modulename": "hyperx.api", "qualname": "JointDesignResultCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">JointDesignResult</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Joint", "modulename": "hyperx.api", "qualname": "Joint", "kind": "class", "doc": "<p>Abstract base for a Zone or Joint.</p>\n", "bases": "ZoneJointEntity"}, {"fullname": "hyperx.api.Joint.__init__", "modulename": "hyperx.api", "qualname": "Joint.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">joint</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">Joint</span></span>)</span>"}, {"fullname": "hyperx.api.Joint.JointRangeSizingResults", "modulename": "hyperx.api", "qualname": "Joint.JointRangeSizingResults", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.JointDesignResultCol"}, {"fullname": "hyperx.api.Joint.JointSelectionSizingResults", "modulename": "hyperx.api", "qualname": "Joint.JointSelectionSizingResults", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.JointDesignResultCol"}, {"fullname": "hyperx.api.Joint.GetAllResults", "modulename": "hyperx.api", "qualname": "Joint.GetAllResults", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">AnalysisResultCol</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Joint.GetControllingResult", "modulename": "hyperx.api", "qualname": "Joint.GetControllingResult", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">AnalysisResult</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Joint.GetMinimumMargin", "modulename": "hyperx.api", "qualname": "Joint.GetMinimumMargin", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Margin</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ZoneDesignResultCol", "modulename": "hyperx.api", "qualname": "ZoneDesignResultCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdEntityCol[hyperx.api.ZoneDesignResult]"}, {"fullname": "hyperx.api.ZoneDesignResultCol.__init__", "modulename": "hyperx.api", "qualname": "ZoneDesignResultCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">zoneDesignResultCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">ZoneDesignResultCol</span></span>)</span>"}, {"fullname": "hyperx.api.ZoneDesignResultCol.ZoneDesignResultColList", "modulename": "hyperx.api", "qualname": "ZoneDesignResultCol.ZoneDesignResultColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.ZoneDesignResult]"}, {"fullname": "hyperx.api.ZoneDesignResultCol.Get", "modulename": "hyperx.api", "qualname": "ZoneDesignResultCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">ZoneDesignResult</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ZoneBase", "modulename": "hyperx.api", "qualname": "ZoneBase", "kind": "class", "doc": "<p>Abstract for regular Zones and Panel Segments.</p>\n", "bases": "ZoneJointEntity"}, {"fullname": "hyperx.api.ZoneBase.__init__", "modulename": "hyperx.api", "qualname": "ZoneBase.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">zoneBase</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">ZoneBase</span></span>)</span>"}, {"fullname": "hyperx.api.ZoneBase.Centroid", "modulename": "hyperx.api", "qualname": "ZoneBase.Centroid", "kind": "variable", "doc": "<p></p>\n", "annotation": ": &lt;property object at 0x0000014E357FBB00&gt;"}, {"fullname": "hyperx.api.ZoneBase.Id", "modulename": "hyperx.api", "qualname": "ZoneBase.Id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.ZoneBase.Weight", "modulename": "hyperx.api", "qualname": "ZoneBase.Weight", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ZoneBase.NonOptimumFactor", "modulename": "hyperx.api", "qualname": "ZoneBase.NonOptimumFactor", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ZoneBase.AddedWeight", "modulename": "hyperx.api", "qualname": "ZoneBase.AddedWeight", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ZoneBase.SuperimposePanel", "modulename": "hyperx.api", "qualname": "ZoneBase.SuperimposePanel", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.ZoneBase.BucklingImperfection", "modulename": "hyperx.api", "qualname": "ZoneBase.BucklingImperfection", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ZoneBase.IsBeamColumn", "modulename": "hyperx.api", "qualname": "ZoneBase.IsBeamColumn", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.ZoneBase.SuperimposeBoundaryCondition", "modulename": "hyperx.api", "qualname": "ZoneBase.SuperimposeBoundaryCondition", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.ZoneBase.IsZeroOutFeaMoments", "modulename": "hyperx.api", "qualname": "ZoneBase.IsZeroOutFeaMoments", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.ZoneBase.IsZeroOutFeaTransverseShears", "modulename": "hyperx.api", "qualname": "ZoneBase.IsZeroOutFeaTransverseShears", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.ZoneBase.MechanicalLimit", "modulename": "hyperx.api", "qualname": "ZoneBase.MechanicalLimit", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ZoneBase.MechanicalUltimate", "modulename": "hyperx.api", "qualname": "ZoneBase.MechanicalUltimate", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ZoneBase.ThermalHelp", "modulename": "hyperx.api", "qualname": "ZoneBase.ThermalHelp", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ZoneBase.ThermalHurt", "modulename": "hyperx.api", "qualname": "ZoneBase.ThermalHurt", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ZoneBase.FatigueKTSkin", "modulename": "hyperx.api", "qualname": "ZoneBase.FatigueKTSkin", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ZoneBase.FatigueKTStiff", "modulename": "hyperx.api", "qualname": "ZoneBase.FatigueKTStiff", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ZoneBase.XSpan", "modulename": "hyperx.api", "qualname": "ZoneBase.XSpan", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ZoneBase.EARequired", "modulename": "hyperx.api", "qualname": "ZoneBase.EARequired", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ZoneBase.EI1Required", "modulename": "hyperx.api", "qualname": "ZoneBase.EI1Required", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ZoneBase.EI2Required", "modulename": "hyperx.api", "qualname": "ZoneBase.EI2Required", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ZoneBase.GJRequired", "modulename": "hyperx.api", "qualname": "ZoneBase.GJRequired", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ZoneBase.EAAuto", "modulename": "hyperx.api", "qualname": "ZoneBase.EAAuto", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ZoneBase.EI1Auto", "modulename": "hyperx.api", "qualname": "ZoneBase.EI1Auto", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ZoneBase.EI2Auto", "modulename": "hyperx.api", "qualname": "ZoneBase.EI2Auto", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ZoneBase.GJAuto", "modulename": "hyperx.api", "qualname": "ZoneBase.GJAuto", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ZoneBase.Ex", "modulename": "hyperx.api", "qualname": "ZoneBase.Ex", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ZoneBase.Dmid", "modulename": "hyperx.api", "qualname": "ZoneBase.Dmid", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ZoneBase.GetObjectName", "modulename": "hyperx.api", "qualname": "ZoneBase.GetObjectName", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">objectId</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">FamilyObjectUID</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ZoneBase.GetConceptName", "modulename": "hyperx.api", "qualname": "ZoneBase.GetConceptName", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ZoneBase.GetZoneDesignResults", "modulename": "hyperx.api", "qualname": "ZoneBase.GetZoneDesignResults", "kind": "function", "doc": "<p>Returns a collection of Zone Design Results for a Solution Id (default 1)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">solutionId</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">ZoneDesignResultCol</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ZoneBase.RenumberZone", "modulename": "hyperx.api", "qualname": "ZoneBase.RenumberZone", "kind": "function", "doc": "<p>Attempt to update a zone's ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">newId</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">ZoneIdUpdateStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ZoneBase.GetAllResults", "modulename": "hyperx.api", "qualname": "ZoneBase.GetAllResults", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">AnalysisResultCol</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ZoneBase.GetControllingResult", "modulename": "hyperx.api", "qualname": "ZoneBase.GetControllingResult", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">AnalysisResult</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ZoneBase.GetMinimumMargin", "modulename": "hyperx.api", "qualname": "ZoneBase.GetMinimumMargin", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Margin</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ElementCol", "modulename": "hyperx.api", "qualname": "ElementCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdEntityCol[hyperx.api.Element]"}, {"fullname": "hyperx.api.ElementCol.__init__", "modulename": "hyperx.api", "qualname": "ElementCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">elementCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">ElementCol</span></span>)</span>"}, {"fullname": "hyperx.api.ElementCol.ElementColList", "modulename": "hyperx.api", "qualname": "ElementCol.ElementColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.Element]"}, {"fullname": "hyperx.api.PanelSegment", "modulename": "hyperx.api", "qualname": "PanelSegment", "kind": "class", "doc": "<p>Abstract for regular Zones and Panel Segments.</p>\n", "bases": "ZoneBase"}, {"fullname": "hyperx.api.PanelSegment.__init__", "modulename": "hyperx.api", "qualname": "PanelSegment.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">panelSegment</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">PanelSegment</span></span>)</span>"}, {"fullname": "hyperx.api.PanelSegment.ElementsByObjectOrSkin", "modulename": "hyperx.api", "qualname": "PanelSegment.ElementsByObjectOrSkin", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict[hyperx.api.types.DiscreteDefinitionType, hyperx.api.ElementCol]"}, {"fullname": "hyperx.api.PanelSegment.Skins", "modulename": "hyperx.api", "qualname": "PanelSegment.Skins", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.types.DiscreteDefinitionType]"}, {"fullname": "hyperx.api.PanelSegment.Objects", "modulename": "hyperx.api", "qualname": "PanelSegment.Objects", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.types.DiscreteDefinitionType]"}, {"fullname": "hyperx.api.PanelSegment.DiscreteTechnique", "modulename": "hyperx.api", "qualname": "PanelSegment.DiscreteTechnique", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.DiscreteTechnique"}, {"fullname": "hyperx.api.PanelSegment.LeftSkinZoneId", "modulename": "hyperx.api", "qualname": "PanelSegment.LeftSkinZoneId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.PanelSegment.RightSkinZoneId", "modulename": "hyperx.api", "qualname": "PanelSegment.RightSkinZoneId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.PanelSegment.GetElements", "modulename": "hyperx.api", "qualname": "PanelSegment.GetElements", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">discreteDefinitionType</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">DiscreteDefinitionType</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">ElementCol</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.PanelSegment.SetObjectElements", "modulename": "hyperx.api", "qualname": "PanelSegment.SetObjectElements", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">discreteDefinitionType</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">DiscreteDefinitionType</span>,</span><span class=\"param\">\t<span class=\"n\">elementIds</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Zone", "modulename": "hyperx.api", "qualname": "Zone", "kind": "class", "doc": "<p>Abstract for regular Zones (not Panel Segments).</p>\n", "bases": "ZoneBase"}, {"fullname": "hyperx.api.Zone.__init__", "modulename": "hyperx.api", "qualname": "Zone.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">zone</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">Zone</span></span>)</span>"}, {"fullname": "hyperx.api.Zone.Elements", "modulename": "hyperx.api", "qualname": "Zone.Elements", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.ElementCol"}, {"fullname": "hyperx.api.Zone.AddElements", "modulename": "hyperx.api", "qualname": "Zone.AddElements", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">elementIds</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.EntityWithAssignablePropertiesCol", "modulename": "hyperx.api", "qualname": "EntityWithAssignablePropertiesCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "IdNameEntityCol, typing.Generic[~T]"}, {"fullname": "hyperx.api.EntityWithAssignablePropertiesCol.EntityWithAssignablePropertiesColList", "modulename": "hyperx.api", "qualname": "EntityWithAssignablePropertiesCol.EntityWithAssignablePropertiesColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[~T]"}, {"fullname": "hyperx.api.EntityWithAssignablePropertiesCol.AssignPropertyToAll", "modulename": "hyperx.api", "qualname": "EntityWithAssignablePropertiesCol.AssignPropertyToAll", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">property</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">AssignableProperty</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">PropertyAssignmentStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.JointCol", "modulename": "hyperx.api", "qualname": "JointCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.EntityWithAssignablePropertiesCol[hyperx.api.Joint]"}, {"fullname": "hyperx.api.JointCol.__init__", "modulename": "hyperx.api", "qualname": "JointCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">jointCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">JointCol</span></span>)</span>"}, {"fullname": "hyperx.api.JointCol.JointColList", "modulename": "hyperx.api", "qualname": "JointCol.JointColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.Joint]"}, {"fullname": "hyperx.api.JointCol.Get", "modulename": "hyperx.api", "qualname": "JointCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Joint</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.PanelSegmentCol", "modulename": "hyperx.api", "qualname": "PanelSegmentCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.EntityWithAssignablePropertiesCol[hyperx.api.PanelSegment]"}, {"fullname": "hyperx.api.PanelSegmentCol.__init__", "modulename": "hyperx.api", "qualname": "PanelSegmentCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">panelSegmentCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">PanelSegmentCol</span></span>)</span>"}, {"fullname": "hyperx.api.PanelSegmentCol.PanelSegmentColList", "modulename": "hyperx.api", "qualname": "PanelSegmentCol.PanelSegmentColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.PanelSegment]"}, {"fullname": "hyperx.api.PanelSegmentCol.Get", "modulename": "hyperx.api", "qualname": "PanelSegmentCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">PanelSegment</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ZoneCol", "modulename": "hyperx.api", "qualname": "ZoneCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.EntityWithAssignablePropertiesCol[hyperx.api.Zone]"}, {"fullname": "hyperx.api.ZoneCol.__init__", "modulename": "hyperx.api", "qualname": "ZoneCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">zoneCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">ZoneCol</span></span>)</span>"}, {"fullname": "hyperx.api.ZoneCol.ZoneColList", "modulename": "hyperx.api", "qualname": "ZoneCol.ZoneColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.Zone]"}, {"fullname": "hyperx.api.ZoneCol.Get", "modulename": "hyperx.api", "qualname": "ZoneCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Zone</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ZoneJointContainer", "modulename": "hyperx.api", "qualname": "ZoneJointContainer", "kind": "class", "doc": "<p>Represents an entity that contains a collection of Zones and Joints.</p>\n", "bases": "IdNameEntityRenameable"}, {"fullname": "hyperx.api.ZoneJointContainer.__init__", "modulename": "hyperx.api", "qualname": "ZoneJointContainer.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">zoneJointContainer</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">ZoneJointContainer</span></span>)</span>"}, {"fullname": "hyperx.api.ZoneJointContainer.Centroid", "modulename": "hyperx.api", "qualname": "ZoneJointContainer.Centroid", "kind": "variable", "doc": "<p></p>\n", "annotation": ": &lt;property object at 0x0000014E3580CA40&gt;"}, {"fullname": "hyperx.api.ZoneJointContainer.Joints", "modulename": "hyperx.api", "qualname": "ZoneJointContainer.Joints", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.JointCol"}, {"fullname": "hyperx.api.ZoneJointContainer.PanelSegments", "modulename": "hyperx.api", "qualname": "ZoneJointContainer.PanelSegments", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.PanelSegmentCol"}, {"fullname": "hyperx.api.ZoneJointContainer.TotalBeamLength", "modulename": "hyperx.api", "qualname": "ZoneJointContainer.TotalBeamLength", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ZoneJointContainer.TotalPanelArea", "modulename": "hyperx.api", "qualname": "ZoneJointContainer.TotalPanelArea", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ZoneJointContainer.TotalZoneWeight", "modulename": "hyperx.api", "qualname": "ZoneJointContainer.TotalZoneWeight", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ZoneJointContainer.Zones", "modulename": "hyperx.api", "qualname": "ZoneJointContainer.Zones", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.ZoneCol"}, {"fullname": "hyperx.api.ZoneJointContainer.AddJoint", "modulename": "hyperx.api", "qualname": "ZoneJointContainer.AddJoint", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ZoneJointContainer.RemoveJoint", "modulename": "hyperx.api", "qualname": "ZoneJointContainer.RemoveJoint", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ZoneJointContainer.RemoveJoints", "modulename": "hyperx.api", "qualname": "ZoneJointContainer.RemoveJoints", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ZoneJointContainer.AddZone", "modulename": "hyperx.api", "qualname": "ZoneJointContainer.AddZone", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ZoneJointContainer.AddZones", "modulename": "hyperx.api", "qualname": "ZoneJointContainer.AddZones", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ZoneJointContainer.RemoveZone", "modulename": "hyperx.api", "qualname": "ZoneJointContainer.RemoveZone", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ZoneJointContainer.RemoveZones", "modulename": "hyperx.api", "qualname": "ZoneJointContainer.RemoveZones", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ZoneJointContainer.AddPanelSegment", "modulename": "hyperx.api", "qualname": "ZoneJointContainer.AddPanelSegment", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ZoneJointContainer.RemovePanelSegment", "modulename": "hyperx.api", "qualname": "ZoneJointContainer.RemovePanelSegment", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ZoneJointContainer.RemovePanelSegments", "modulename": "hyperx.api", "qualname": "ZoneJointContainer.RemovePanelSegments", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.AutomatedConstraint", "modulename": "hyperx.api", "qualname": "AutomatedConstraint", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "IdNameEntityRenameable"}, {"fullname": "hyperx.api.AutomatedConstraint.__init__", "modulename": "hyperx.api", "qualname": "AutomatedConstraint.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">automatedConstraint</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">AutomatedConstraint</span></span>)</span>"}, {"fullname": "hyperx.api.AutomatedConstraint.ConstraintType", "modulename": "hyperx.api", "qualname": "AutomatedConstraint.ConstraintType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.StiffnessCriteriaType"}, {"fullname": "hyperx.api.AutomatedConstraint.Set", "modulename": "hyperx.api", "qualname": "AutomatedConstraint.Set", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.AutomatedConstraint.DesignLoadCases", "modulename": "hyperx.api", "qualname": "AutomatedConstraint.DesignLoadCases", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[str]"}, {"fullname": "hyperx.api.AutomatedConstraint.AddDesignLoadCases", "modulename": "hyperx.api", "qualname": "AutomatedConstraint.AddDesignLoadCases", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">designLoadCases</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.AutomatedConstraint.RemoveDesignLoadCases", "modulename": "hyperx.api", "qualname": "AutomatedConstraint.RemoveDesignLoadCases", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">designLoadCases</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ModalAutomatedConstraint", "modulename": "hyperx.api", "qualname": "ModalAutomatedConstraint", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "AutomatedConstraint"}, {"fullname": "hyperx.api.ModalAutomatedConstraint.__init__", "modulename": "hyperx.api", "qualname": "ModalAutomatedConstraint.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">modalAutomatedConstraint</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">ModalAutomatedConstraint</span></span>)</span>"}, {"fullname": "hyperx.api.ModalAutomatedConstraint.Eigenvalue", "modulename": "hyperx.api", "qualname": "ModalAutomatedConstraint.Eigenvalue", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.BucklingAutomatedConstraint", "modulename": "hyperx.api", "qualname": "BucklingAutomatedConstraint", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "ModalAutomatedConstraint"}, {"fullname": "hyperx.api.BucklingAutomatedConstraint.__init__", "modulename": "hyperx.api", "qualname": "BucklingAutomatedConstraint.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">bucklingAutomatedConstraint</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">BucklingAutomatedConstraint</span></span>)</span>"}, {"fullname": "hyperx.api.StaticAutomatedConstraint", "modulename": "hyperx.api", "qualname": "StaticAutomatedConstraint", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "AutomatedConstraint"}, {"fullname": "hyperx.api.StaticAutomatedConstraint.__init__", "modulename": "hyperx.api", "qualname": "StaticAutomatedConstraint.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">staticAutomatedConstraint</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">StaticAutomatedConstraint</span></span>)</span>"}, {"fullname": "hyperx.api.StaticAutomatedConstraint.VirtualDesignLoad", "modulename": "hyperx.api", "qualname": "StaticAutomatedConstraint.VirtualDesignLoad", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.StaticAutomatedConstraint.GridId", "modulename": "hyperx.api", "qualname": "StaticAutomatedConstraint.GridId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.StaticAutomatedConstraint.Orientation", "modulename": "hyperx.api", "qualname": "StaticAutomatedConstraint.Orientation", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.DisplacementShapeType"}, {"fullname": "hyperx.api.StaticAutomatedConstraint.HasVector", "modulename": "hyperx.api", "qualname": "StaticAutomatedConstraint.HasVector", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.StaticAutomatedConstraint.X", "modulename": "hyperx.api", "qualname": "StaticAutomatedConstraint.X", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.StaticAutomatedConstraint.Y", "modulename": "hyperx.api", "qualname": "StaticAutomatedConstraint.Y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.StaticAutomatedConstraint.Z", "modulename": "hyperx.api", "qualname": "StaticAutomatedConstraint.Z", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.DisplacementAutomatedConstraint", "modulename": "hyperx.api", "qualname": "DisplacementAutomatedConstraint", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "StaticAutomatedConstraint"}, {"fullname": "hyperx.api.DisplacementAutomatedConstraint.__init__", "modulename": "hyperx.api", "qualname": "DisplacementAutomatedConstraint.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">displacementAutomatedConstraint</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">DisplacementAutomatedConstraint</span></span>)</span>"}, {"fullname": "hyperx.api.DisplacementAutomatedConstraint.Limit", "modulename": "hyperx.api", "qualname": "DisplacementAutomatedConstraint.Limit", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.FrequencyAutomatedConstraint", "modulename": "hyperx.api", "qualname": "FrequencyAutomatedConstraint", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "ModalAutomatedConstraint"}, {"fullname": "hyperx.api.FrequencyAutomatedConstraint.__init__", "modulename": "hyperx.api", "qualname": "FrequencyAutomatedConstraint.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">frequencyAutomatedConstraint</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">FrequencyAutomatedConstraint</span></span>)</span>"}, {"fullname": "hyperx.api.RotationAutomatedConstraint", "modulename": "hyperx.api", "qualname": "RotationAutomatedConstraint", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "StaticAutomatedConstraint"}, {"fullname": "hyperx.api.RotationAutomatedConstraint.__init__", "modulename": "hyperx.api", "qualname": "RotationAutomatedConstraint.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">rotationAutomatedConstraint</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">RotationAutomatedConstraint</span></span>)</span>"}, {"fullname": "hyperx.api.RotationAutomatedConstraint.Limit", "modulename": "hyperx.api", "qualname": "RotationAutomatedConstraint.Limit", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ManualConstraint", "modulename": "hyperx.api", "qualname": "ManualConstraint", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "IdNameEntityRenameable"}, {"fullname": "hyperx.api.ManualConstraint.__init__", "modulename": "hyperx.api", "qualname": "ManualConstraint.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">manualConstraint</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">ManualConstraint</span></span>)</span>"}, {"fullname": "hyperx.api.ManualConstraint.ConstraintType", "modulename": "hyperx.api", "qualname": "ManualConstraint.ConstraintType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.ConstraintType"}, {"fullname": "hyperx.api.ManualConstraint.Set", "modulename": "hyperx.api", "qualname": "ManualConstraint.Set", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.ManualConstraint.Limit", "modulename": "hyperx.api", "qualname": "ManualConstraint.Limit", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ManualConstraint.A11", "modulename": "hyperx.api", "qualname": "ManualConstraint.A11", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.ManualConstraint.A22", "modulename": "hyperx.api", "qualname": "ManualConstraint.A22", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.ManualConstraint.A33", "modulename": "hyperx.api", "qualname": "ManualConstraint.A33", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.ManualConstraint.D11", "modulename": "hyperx.api", "qualname": "ManualConstraint.D11", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.ManualConstraint.D22", "modulename": "hyperx.api", "qualname": "ManualConstraint.D22", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.ManualConstraint.D33", "modulename": "hyperx.api", "qualname": "ManualConstraint.D33", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.ManualConstraint.EA", "modulename": "hyperx.api", "qualname": "ManualConstraint.EA", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.ManualConstraint.EI1", "modulename": "hyperx.api", "qualname": "ManualConstraint.EI1", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.ManualConstraint.EI2", "modulename": "hyperx.api", "qualname": "ManualConstraint.EI2", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.ManualConstraint.GJ", "modulename": "hyperx.api", "qualname": "ManualConstraint.GJ", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.ManualConstraint.IsActive", "modulename": "hyperx.api", "qualname": "ManualConstraint.IsActive", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.ManualConstraintWithDesignLoad", "modulename": "hyperx.api", "qualname": "ManualConstraintWithDesignLoad", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "ManualConstraint"}, {"fullname": "hyperx.api.ManualConstraintWithDesignLoad.__init__", "modulename": "hyperx.api", "qualname": "ManualConstraintWithDesignLoad.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">manualConstraintWithDesignLoad</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">ManualConstraintWithDesignLoad</span></span>)</span>"}, {"fullname": "hyperx.api.ManualConstraintWithDesignLoad.UseAllDesignLoads", "modulename": "hyperx.api", "qualname": "ManualConstraintWithDesignLoad.UseAllDesignLoads", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.ManualConstraintWithDesignLoad.DesignLoadCase", "modulename": "hyperx.api", "qualname": "ManualConstraintWithDesignLoad.DesignLoadCase", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.BucklingManualConstraint", "modulename": "hyperx.api", "qualname": "BucklingManualConstraint", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "ManualConstraintWithDesignLoad"}, {"fullname": "hyperx.api.BucklingManualConstraint.__init__", "modulename": "hyperx.api", "qualname": "BucklingManualConstraint.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">bucklingManualConstraint</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">BucklingManualConstraint</span></span>)</span>"}, {"fullname": "hyperx.api.DisplacementManualConstraint", "modulename": "hyperx.api", "qualname": "DisplacementManualConstraint", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "ManualConstraintWithDesignLoad"}, {"fullname": "hyperx.api.DisplacementManualConstraint.__init__", "modulename": "hyperx.api", "qualname": "DisplacementManualConstraint.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">displacementManualConstraint</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">DisplacementManualConstraint</span></span>)</span>"}, {"fullname": "hyperx.api.DisplacementManualConstraint.DOF", "modulename": "hyperx.api", "qualname": "DisplacementManualConstraint.DOF", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.DegreeOfFreedom"}, {"fullname": "hyperx.api.DisplacementManualConstraint.Nodes", "modulename": "hyperx.api", "qualname": "DisplacementManualConstraint.Nodes", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[int]"}, {"fullname": "hyperx.api.DisplacementManualConstraint.RefNodes", "modulename": "hyperx.api", "qualname": "DisplacementManualConstraint.RefNodes", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[int]"}, {"fullname": "hyperx.api.DisplacementManualConstraint.AddNodes", "modulename": "hyperx.api", "qualname": "DisplacementManualConstraint.AddNodes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DisplacementManualConstraint.RemoveNodes", "modulename": "hyperx.api", "qualname": "DisplacementManualConstraint.RemoveNodes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DisplacementManualConstraint.AddRefNodes", "modulename": "hyperx.api", "qualname": "DisplacementManualConstraint.AddRefNodes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DisplacementManualConstraint.RemoveRefNodes", "modulename": "hyperx.api", "qualname": "DisplacementManualConstraint.RemoveRefNodes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.FrequencyManualConstraint", "modulename": "hyperx.api", "qualname": "FrequencyManualConstraint", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "ManualConstraintWithDesignLoad"}, {"fullname": "hyperx.api.FrequencyManualConstraint.__init__", "modulename": "hyperx.api", "qualname": "FrequencyManualConstraint.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">frequencyManualConstraint</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">FrequencyManualConstraint</span></span>)</span>"}, {"fullname": "hyperx.api.StaticMomentManualConstraint", "modulename": "hyperx.api", "qualname": "StaticMomentManualConstraint", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "ManualConstraint"}, {"fullname": "hyperx.api.StaticMomentManualConstraint.__init__", "modulename": "hyperx.api", "qualname": "StaticMomentManualConstraint.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">staticMomentManualConstraint</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">StaticMomentManualConstraint</span></span>)</span>"}, {"fullname": "hyperx.api.AutomatedConstraintCol", "modulename": "hyperx.api", "qualname": "AutomatedConstraintCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdNameEntityCol[hyperx.api.AutomatedConstraint]"}, {"fullname": "hyperx.api.AutomatedConstraintCol.__init__", "modulename": "hyperx.api", "qualname": "AutomatedConstraintCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">automatedConstraintCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">AutomatedConstraintCol</span></span>)</span>"}, {"fullname": "hyperx.api.AutomatedConstraintCol.AutomatedConstraintColList", "modulename": "hyperx.api", "qualname": "AutomatedConstraintCol.AutomatedConstraintColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.AutomatedConstraint]"}, {"fullname": "hyperx.api.AutomatedConstraintCol.AddBucklingConstraint", "modulename": "hyperx.api", "qualname": "AutomatedConstraintCol.AddBucklingConstraint", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">designLoads</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">eigenvalue</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">BucklingAutomatedConstraint</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.AutomatedConstraintCol.AddFrequencyConstraint", "modulename": "hyperx.api", "qualname": "AutomatedConstraintCol.AddFrequencyConstraint", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">designLoads</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">eigenvalue</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">FrequencyAutomatedConstraint</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.AutomatedConstraintCol.AddDisplacementConstraint", "modulename": "hyperx.api", "qualname": "AutomatedConstraintCol.AddDisplacementConstraint", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">designLoads</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">gridId</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">DisplacementAutomatedConstraint</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.AutomatedConstraintCol.AddRotationConstraint", "modulename": "hyperx.api", "qualname": "AutomatedConstraintCol.AddRotationConstraint", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">designLoads</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">gridId</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">RotationAutomatedConstraint</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.AutomatedConstraintCol.Delete", "modulename": "hyperx.api", "qualname": "AutomatedConstraintCol.Delete", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.AutomatedConstraintCol.GetBuckling", "modulename": "hyperx.api", "qualname": "AutomatedConstraintCol.GetBuckling", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">BucklingAutomatedConstraint</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.AutomatedConstraintCol.GetFrequency", "modulename": "hyperx.api", "qualname": "AutomatedConstraintCol.GetFrequency", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">FrequencyAutomatedConstraint</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.AutomatedConstraintCol.GetRotation", "modulename": "hyperx.api", "qualname": "AutomatedConstraintCol.GetRotation", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">RotationAutomatedConstraint</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.AutomatedConstraintCol.GetDisplacement", "modulename": "hyperx.api", "qualname": "AutomatedConstraintCol.GetDisplacement", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">DisplacementAutomatedConstraint</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.AutomatedConstraintCol.Get", "modulename": "hyperx.api", "qualname": "AutomatedConstraintCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">AutomatedConstraint</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ManualConstraintCol", "modulename": "hyperx.api", "qualname": "ManualConstraintCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdNameEntityCol[hyperx.api.ManualConstraint]"}, {"fullname": "hyperx.api.ManualConstraintCol.__init__", "modulename": "hyperx.api", "qualname": "ManualConstraintCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">manualConstraintCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">ManualConstraintCol</span></span>)</span>"}, {"fullname": "hyperx.api.ManualConstraintCol.ManualConstraintColList", "modulename": "hyperx.api", "qualname": "ManualConstraintCol.ManualConstraintColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.ManualConstraint]"}, {"fullname": "hyperx.api.ManualConstraintCol.GetFrequency", "modulename": "hyperx.api", "qualname": "ManualConstraintCol.GetFrequency", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">FrequencyManualConstraint</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ManualConstraintCol.GetBuckling", "modulename": "hyperx.api", "qualname": "ManualConstraintCol.GetBuckling", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">BucklingManualConstraint</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ManualConstraintCol.GetDisplacement", "modulename": "hyperx.api", "qualname": "ManualConstraintCol.GetDisplacement", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">DisplacementManualConstraint</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ManualConstraintCol.GetStaticMoment", "modulename": "hyperx.api", "qualname": "ManualConstraintCol.GetStaticMoment", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">StaticMomentManualConstraint</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ManualConstraintCol.AddFrequencyConstraint", "modulename": "hyperx.api", "qualname": "ManualConstraintCol.AddFrequencyConstraint", "kind": "function", "doc": "<p>Add a Manual Constraint of type Frequency.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">setName</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">FrequencyManualConstraint</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ManualConstraintCol.AddBucklingConstraint", "modulename": "hyperx.api", "qualname": "ManualConstraintCol.AddBucklingConstraint", "kind": "function", "doc": "<p>Add a Manual Constraint of type Buckling.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">setName</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">BucklingManualConstraint</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ManualConstraintCol.AddStaticMomentManualConstraint", "modulename": "hyperx.api", "qualname": "ManualConstraintCol.AddStaticMomentManualConstraint", "kind": "function", "doc": "<p>Add a Manual Constraint of type Static Moment.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">setName</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">StaticMomentManualConstraint</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ManualConstraintCol.AddDisplacementConstraint", "modulename": "hyperx.api", "qualname": "ManualConstraintCol.AddDisplacementConstraint", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">setName</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">gridIds</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">DisplacementManualConstraint</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ManualConstraintCol.DeleteConstraint", "modulename": "hyperx.api", "qualname": "ManualConstraintCol.DeleteConstraint", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ManualConstraintCol.Get", "modulename": "hyperx.api", "qualname": "ManualConstraintCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">ManualConstraint</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.HyperFea", "modulename": "hyperx.api", "qualname": "HyperFea", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "hyperx.api.HyperFea.__init__", "modulename": "hyperx.api", "qualname": "HyperFea.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">hyperFea</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">HyperFea</span></span>)</span>"}, {"fullname": "hyperx.api.HyperFea.ManualConstraints", "modulename": "hyperx.api", "qualname": "HyperFea.ManualConstraints", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.ManualConstraintCol"}, {"fullname": "hyperx.api.HyperFea.AutomatedConstraints", "modulename": "hyperx.api", "qualname": "HyperFea.AutomatedConstraints", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.AutomatedConstraintCol"}, {"fullname": "hyperx.api.HyperFea.RunIterations", "modulename": "hyperx.api", "qualname": "HyperFea.RunIterations", "kind": "function", "doc": "<p>Run HyperFEA.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">numberOfIterations</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">startWithSizing</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.HyperFea.SetupSolver", "modulename": "hyperx.api", "qualname": "HyperFea.SetupSolver", "kind": "function", "doc": "<p>Setup FEA solver.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">solverPath</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">arguments</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">SimpleStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.HyperFea.TestSolver", "modulename": "hyperx.api", "qualname": "HyperFea.TestSolver", "kind": "function", "doc": "<p>Test FEA solver setup.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">SimpleStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.HyperFea.GetSolverSetup", "modulename": "hyperx.api", "qualname": "HyperFea.GetSolverSetup", "kind": "function", "doc": "<p>Get the current FEA solver setup.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">HyperFeaSolver</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.FoamTemperature", "modulename": "hyperx.api", "qualname": "FoamTemperature", "kind": "class", "doc": "<p>Foam material temperature dependent properties.</p>\n"}, {"fullname": "hyperx.api.FoamTemperature.__init__", "modulename": "hyperx.api", "qualname": "FoamTemperature.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">foamTemperature</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">FoamTemperature</span></span>)</span>"}, {"fullname": "hyperx.api.FoamTemperature.Temperature", "modulename": "hyperx.api", "qualname": "FoamTemperature.Temperature", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.FoamTemperature.Et", "modulename": "hyperx.api", "qualname": "FoamTemperature.Et", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.FoamTemperature.Ec", "modulename": "hyperx.api", "qualname": "FoamTemperature.Ec", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.FoamTemperature.G", "modulename": "hyperx.api", "qualname": "FoamTemperature.G", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.FoamTemperature.Ef", "modulename": "hyperx.api", "qualname": "FoamTemperature.Ef", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.FoamTemperature.Ftu", "modulename": "hyperx.api", "qualname": "FoamTemperature.Ftu", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.FoamTemperature.Fcu", "modulename": "hyperx.api", "qualname": "FoamTemperature.Fcu", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.FoamTemperature.Fsu", "modulename": "hyperx.api", "qualname": "FoamTemperature.Fsu", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.FoamTemperature.Ffu", "modulename": "hyperx.api", "qualname": "FoamTemperature.Ffu", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.FoamTemperature.K", "modulename": "hyperx.api", "qualname": "FoamTemperature.K", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.FoamTemperature.C", "modulename": "hyperx.api", "qualname": "FoamTemperature.C", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Foam", "modulename": "hyperx.api", "qualname": "Foam", "kind": "class", "doc": "<p>Foam material.</p>\n"}, {"fullname": "hyperx.api.Foam.__init__", "modulename": "hyperx.api", "qualname": "Foam.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">foam</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">Foam</span></span>)</span>"}, {"fullname": "hyperx.api.Foam.MaterialFamilyName", "modulename": "hyperx.api", "qualname": "Foam.MaterialFamilyName", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Foam.Id", "modulename": "hyperx.api", "qualname": "Foam.Id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.Foam.CreationDate", "modulename": "hyperx.api", "qualname": "Foam.CreationDate", "kind": "variable", "doc": "<p></p>\n", "annotation": ": System.DateTime"}, {"fullname": "hyperx.api.Foam.ModificationDate", "modulename": "hyperx.api", "qualname": "Foam.ModificationDate", "kind": "variable", "doc": "<p></p>\n", "annotation": ": System.DateTime"}, {"fullname": "hyperx.api.Foam.Name", "modulename": "hyperx.api", "qualname": "Foam.Name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Foam.Wet", "modulename": "hyperx.api", "qualname": "Foam.Wet", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.Foam.Density", "modulename": "hyperx.api", "qualname": "Foam.Density", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Foam.Form", "modulename": "hyperx.api", "qualname": "Foam.Form", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Foam.Specification", "modulename": "hyperx.api", "qualname": "Foam.Specification", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Foam.MaterialDescription", "modulename": "hyperx.api", "qualname": "Foam.MaterialDescription", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Foam.UserNote", "modulename": "hyperx.api", "qualname": "Foam.UserNote", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Foam.FemMaterialId", "modulename": "hyperx.api", "qualname": "Foam.FemMaterialId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.Foam.Cost", "modulename": "hyperx.api", "qualname": "Foam.Cost", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Foam.BucklingStiffnessKnockdown", "modulename": "hyperx.api", "qualname": "Foam.BucklingStiffnessKnockdown", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Foam.Absorption", "modulename": "hyperx.api", "qualname": "Foam.Absorption", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Foam.Manufacturer", "modulename": "hyperx.api", "qualname": "Foam.Manufacturer", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Foam.FoamTemperatureProperties", "modulename": "hyperx.api", "qualname": "Foam.FoamTemperatureProperties", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[hyperx.api.FoamTemperature]"}, {"fullname": "hyperx.api.Foam.AddTemperatureProperty", "modulename": "hyperx.api", "qualname": "Foam.AddTemperatureProperty", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">temperature</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">et</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">ec</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">g</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">ftu</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">fcu</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">fsu</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">ef</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ffu</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">c</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">FoamTemperature</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Foam.DeleteTemperatureProperty", "modulename": "hyperx.api", "qualname": "Foam.DeleteTemperatureProperty", "kind": "function", "doc": "<p>Deletes a temperature-dependent property for a material.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">temperature</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Foam.GetTemperature", "modulename": "hyperx.api", "qualname": "Foam.GetTemperature", "kind": "function", "doc": "<p>Retrieve a Temperature from this material's temperature-dependent properties. Allows a degree of tolerance to avoid issues with floating point numbers.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>LookupTemperature</strong>:  Temperature to search for.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">lookupTemperature</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">FoamTemperature</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Foam.Save", "modulename": "hyperx.api", "qualname": "Foam.Save", "kind": "function", "doc": "<p>Save any changes to this foam material to the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.HoneycombTemperature", "modulename": "hyperx.api", "qualname": "HoneycombTemperature", "kind": "class", "doc": "<p>Honeycomb material temperature dependent properties.</p>\n"}, {"fullname": "hyperx.api.HoneycombTemperature.__init__", "modulename": "hyperx.api", "qualname": "HoneycombTemperature.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">honeycombTemperature</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">HoneycombTemperature</span></span>)</span>"}, {"fullname": "hyperx.api.HoneycombTemperature.Temperature", "modulename": "hyperx.api", "qualname": "HoneycombTemperature.Temperature", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.HoneycombTemperature.Et", "modulename": "hyperx.api", "qualname": "HoneycombTemperature.Et", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.HoneycombTemperature.Ec", "modulename": "hyperx.api", "qualname": "HoneycombTemperature.Ec", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.HoneycombTemperature.Gw", "modulename": "hyperx.api", "qualname": "HoneycombTemperature.Gw", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.HoneycombTemperature.Gl", "modulename": "hyperx.api", "qualname": "HoneycombTemperature.Gl", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.HoneycombTemperature.Ftu", "modulename": "hyperx.api", "qualname": "HoneycombTemperature.Ftu", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.HoneycombTemperature.Fcus", "modulename": "hyperx.api", "qualname": "HoneycombTemperature.Fcus", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.HoneycombTemperature.Fcub", "modulename": "hyperx.api", "qualname": "HoneycombTemperature.Fcub", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.HoneycombTemperature.Fcuc", "modulename": "hyperx.api", "qualname": "HoneycombTemperature.Fcuc", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.HoneycombTemperature.Fsuw", "modulename": "hyperx.api", "qualname": "HoneycombTemperature.Fsuw", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.HoneycombTemperature.Fsul", "modulename": "hyperx.api", "qualname": "HoneycombTemperature.Fsul", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.HoneycombTemperature.SScfl", "modulename": "hyperx.api", "qualname": "HoneycombTemperature.SScfl", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.HoneycombTemperature.SScfh", "modulename": "hyperx.api", "qualname": "HoneycombTemperature.SScfh", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.HoneycombTemperature.Kl", "modulename": "hyperx.api", "qualname": "HoneycombTemperature.Kl", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.HoneycombTemperature.Kw", "modulename": "hyperx.api", "qualname": "HoneycombTemperature.Kw", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.HoneycombTemperature.Kt", "modulename": "hyperx.api", "qualname": "HoneycombTemperature.Kt", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.HoneycombTemperature.C", "modulename": "hyperx.api", "qualname": "HoneycombTemperature.C", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Honeycomb", "modulename": "hyperx.api", "qualname": "Honeycomb", "kind": "class", "doc": "<p>Honeycomb material.</p>\n"}, {"fullname": "hyperx.api.Honeycomb.__init__", "modulename": "hyperx.api", "qualname": "Honeycomb.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">honeycomb</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">Honeycomb</span></span>)</span>"}, {"fullname": "hyperx.api.Honeycomb.MaterialFamilyName", "modulename": "hyperx.api", "qualname": "Honeycomb.MaterialFamilyName", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Honeycomb.Id", "modulename": "hyperx.api", "qualname": "Honeycomb.Id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.Honeycomb.CreationDate", "modulename": "hyperx.api", "qualname": "Honeycomb.CreationDate", "kind": "variable", "doc": "<p></p>\n", "annotation": ": System.DateTime"}, {"fullname": "hyperx.api.Honeycomb.ModificationDate", "modulename": "hyperx.api", "qualname": "Honeycomb.ModificationDate", "kind": "variable", "doc": "<p></p>\n", "annotation": ": System.DateTime"}, {"fullname": "hyperx.api.Honeycomb.Name", "modulename": "hyperx.api", "qualname": "Honeycomb.Name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Honeycomb.Wet", "modulename": "hyperx.api", "qualname": "Honeycomb.Wet", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.Honeycomb.Density", "modulename": "hyperx.api", "qualname": "Honeycomb.Density", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Honeycomb.Form", "modulename": "hyperx.api", "qualname": "Honeycomb.Form", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Honeycomb.Specification", "modulename": "hyperx.api", "qualname": "Honeycomb.Specification", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Honeycomb.MaterialDescription", "modulename": "hyperx.api", "qualname": "Honeycomb.MaterialDescription", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Honeycomb.UserNote", "modulename": "hyperx.api", "qualname": "Honeycomb.UserNote", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Honeycomb.FemMaterialId", "modulename": "hyperx.api", "qualname": "Honeycomb.FemMaterialId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.Honeycomb.Cost", "modulename": "hyperx.api", "qualname": "Honeycomb.Cost", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Honeycomb.CellSize", "modulename": "hyperx.api", "qualname": "Honeycomb.CellSize", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Honeycomb.Manufacturer", "modulename": "hyperx.api", "qualname": "Honeycomb.Manufacturer", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Honeycomb.HoneycombTemperatureProperties", "modulename": "hyperx.api", "qualname": "Honeycomb.HoneycombTemperatureProperties", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[hyperx.api.HoneycombTemperature]"}, {"fullname": "hyperx.api.Honeycomb.AddTemperatureProperty", "modulename": "hyperx.api", "qualname": "Honeycomb.AddTemperatureProperty", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">temperature</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">et</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">ec</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">gw</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">gl</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">ftu</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">fcus</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">fcub</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">fcuc</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">fsuw</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">fsul</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">sScfl</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">sScfh</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">k1</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">k2</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">k3</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">c</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">HoneycombTemperature</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Honeycomb.DeleteTemperatureProperty", "modulename": "hyperx.api", "qualname": "Honeycomb.DeleteTemperatureProperty", "kind": "function", "doc": "<p>Deletes a temperature-dependent property for a material.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">temperature</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Honeycomb.GetTemperature", "modulename": "hyperx.api", "qualname": "Honeycomb.GetTemperature", "kind": "function", "doc": "<p>Retrieve a Temperature from this material's temperature-dependent properties. Allows a degree of tolerance to avoid issues with floating point numbers.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>LookupTemperature</strong>:  Temperature to search for.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">lookupTemperature</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">HoneycombTemperature</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Honeycomb.Save", "modulename": "hyperx.api", "qualname": "Honeycomb.Save", "kind": "function", "doc": "<p>Save any changes to this honeycomb material to the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.IsotropicTemperature", "modulename": "hyperx.api", "qualname": "IsotropicTemperature", "kind": "class", "doc": "<p>Isotropic material temperature dependent properties.</p>\n"}, {"fullname": "hyperx.api.IsotropicTemperature.__init__", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">isotropicTemperature</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">IsotropicTemperature</span></span>)</span>"}, {"fullname": "hyperx.api.IsotropicTemperature.Temperature", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.Temperature", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.Et", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.Et", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.Ec", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.Ec", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.G", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.G", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.n", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.n", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.F02", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.F02", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.FtuL", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.FtuL", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.FtyL", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.FtyL", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.FcyL", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.FcyL", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.FtuLT", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.FtuLT", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.FtyLT", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.FtyLT", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.FcyLT", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.FcyLT", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.Fsu", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.Fsu", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.Fbru15", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.Fbru15", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.Fbry15", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.Fbry15", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.Fbru20", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.Fbru20", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.Fbry20", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.Fbry20", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.alpha", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.alpha", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.K", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.K", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.C", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.C", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.etyL", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.etyL", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.ecyL", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.ecyL", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.etyLT", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.etyLT", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.ecyLT", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.ecyLT", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.esu", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.esu", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.Fpadh", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.Fpadh", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.Fsadh", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.Fsadh", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.esadh", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.esadh", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.cd", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.cd", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.Ffwt", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.Ffwt", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.Ffxz", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.Ffxz", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.Ffyz", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.Ffyz", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.FtFatigue", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.FtFatigue", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.IsotropicTemperature.FcFatigue", "modulename": "hyperx.api", "qualname": "IsotropicTemperature.FcFatigue", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Isotropic", "modulename": "hyperx.api", "qualname": "Isotropic", "kind": "class", "doc": "<p>Isotropic material.</p>\n"}, {"fullname": "hyperx.api.Isotropic.__init__", "modulename": "hyperx.api", "qualname": "Isotropic.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">isotropic</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">Isotropic</span></span>)</span>"}, {"fullname": "hyperx.api.Isotropic.MaterialFamilyName", "modulename": "hyperx.api", "qualname": "Isotropic.MaterialFamilyName", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Isotropic.Id", "modulename": "hyperx.api", "qualname": "Isotropic.Id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.Isotropic.CreationDate", "modulename": "hyperx.api", "qualname": "Isotropic.CreationDate", "kind": "variable", "doc": "<p></p>\n", "annotation": ": System.DateTime"}, {"fullname": "hyperx.api.Isotropic.ModificationDate", "modulename": "hyperx.api", "qualname": "Isotropic.ModificationDate", "kind": "variable", "doc": "<p></p>\n", "annotation": ": System.DateTime"}, {"fullname": "hyperx.api.Isotropic.Name", "modulename": "hyperx.api", "qualname": "Isotropic.Name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Isotropic.Form", "modulename": "hyperx.api", "qualname": "Isotropic.Form", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Isotropic.Specification", "modulename": "hyperx.api", "qualname": "Isotropic.Specification", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Isotropic.Temper", "modulename": "hyperx.api", "qualname": "Isotropic.Temper", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Isotropic.Basis", "modulename": "hyperx.api", "qualname": "Isotropic.Basis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Isotropic.Density", "modulename": "hyperx.api", "qualname": "Isotropic.Density", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Isotropic.MaterialDescription", "modulename": "hyperx.api", "qualname": "Isotropic.MaterialDescription", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Isotropic.UserNote", "modulename": "hyperx.api", "qualname": "Isotropic.UserNote", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Isotropic.FemMaterialId", "modulename": "hyperx.api", "qualname": "Isotropic.FemMaterialId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.Isotropic.Cost", "modulename": "hyperx.api", "qualname": "Isotropic.Cost", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Isotropic.BucklingStiffnessKnockdown", "modulename": "hyperx.api", "qualname": "Isotropic.BucklingStiffnessKnockdown", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Isotropic.IsotropicTemperatureProperties", "modulename": "hyperx.api", "qualname": "Isotropic.IsotropicTemperatureProperties", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[hyperx.api.IsotropicTemperature]"}, {"fullname": "hyperx.api.Isotropic.AddTemperatureProperty", "modulename": "hyperx.api", "qualname": "Isotropic.AddTemperatureProperty", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">temperature</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">et</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">ec</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">g</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">ftuL</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">ftyL</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">fcyL</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">ftuLT</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">ftyLT</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">fcyLT</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">fsu</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">alpha</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">n</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">f02</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">c</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fbru15</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fbry15</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fbru20</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fbry20</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">etyL</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ecyL</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">etyLT</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ecyLT</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">esu</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fpadh</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fsadh</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">esadh</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cd</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ffwt</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ffxz</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ffyz</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ftFatigue</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fcFatigue</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">IsotropicTemperature</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Isotropic.DeleteTemperatureProperty", "modulename": "hyperx.api", "qualname": "Isotropic.DeleteTemperatureProperty", "kind": "function", "doc": "<p>Deletes a temperature-dependent property for a material.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">temperature</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Isotropic.GetTemperature", "modulename": "hyperx.api", "qualname": "Isotropic.GetTemperature", "kind": "function", "doc": "<p>Retrieve a Temperature from this material's temperature-dependent properties. Allows a degree of tolerance to avoid issues with floating point numbers.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>LookupTemperature</strong>:  Temperature to search for.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">lookupTemperature</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">IsotropicTemperature</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Isotropic.Save", "modulename": "hyperx.api", "qualname": "Isotropic.Save", "kind": "function", "doc": "<p>Save any changes to this isotropic material to the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LaminateBase", "modulename": "hyperx.api", "qualname": "LaminateBase", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "abc.ABC"}, {"fullname": "hyperx.api.LaminateBase.Id", "modulename": "hyperx.api", "qualname": "LaminateBase.Id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.LaminateBase.Name", "modulename": "hyperx.api", "qualname": "LaminateBase.Name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.LaminateBase.IsEditable", "modulename": "hyperx.api", "qualname": "LaminateBase.IsEditable", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LaminateBase.MaterialFamilyName", "modulename": "hyperx.api", "qualname": "LaminateBase.MaterialFamilyName", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.LaminateBase.LayerCount", "modulename": "hyperx.api", "qualname": "LaminateBase.LayerCount", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.LaminateBase.Density", "modulename": "hyperx.api", "qualname": "LaminateBase.Density", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LaminateBase.Thickness", "modulename": "hyperx.api", "qualname": "LaminateBase.Thickness", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LaminateBase.LaminateFamilyId", "modulename": "hyperx.api", "qualname": "LaminateBase.LaminateFamilyId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.LaminateBase.LaminateFamilyOrder", "modulename": "hyperx.api", "qualname": "LaminateBase.LaminateFamilyOrder", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.LaminateBase.HyperLaminate", "modulename": "hyperx.api", "qualname": "LaminateBase.HyperLaminate", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LaminateBase.Save", "modulename": "hyperx.api", "qualname": "LaminateBase.Save", "kind": "function", "doc": "<p>Save the laminate.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LaminateFamily", "modulename": "hyperx.api", "qualname": "LaminateFamily", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "IdNameEntity"}, {"fullname": "hyperx.api.LaminateFamily.__init__", "modulename": "hyperx.api", "qualname": "LaminateFamily.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">laminateFamily</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LaminateFamily</span></span>)</span>"}, {"fullname": "hyperx.api.LaminateFamily.Laminates", "modulename": "hyperx.api", "qualname": "LaminateFamily.Laminates", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[hyperx.api.LaminateBase]"}, {"fullname": "hyperx.api.LaminateFamily.ModificationDate", "modulename": "hyperx.api", "qualname": "LaminateFamily.ModificationDate", "kind": "variable", "doc": "<p></p>\n", "annotation": ": System.DateTime"}, {"fullname": "hyperx.api.LaminateFamily.PlankSetting", "modulename": "hyperx.api", "qualname": "LaminateFamily.PlankSetting", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.LaminateFamilySettingType"}, {"fullname": "hyperx.api.LaminateFamily.PlankMinRatio", "modulename": "hyperx.api", "qualname": "LaminateFamily.PlankMinRatio", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LaminateFamily.PlankMaxRatio", "modulename": "hyperx.api", "qualname": "LaminateFamily.PlankMaxRatio", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LaminateFamily.FootChargeSetting", "modulename": "hyperx.api", "qualname": "LaminateFamily.FootChargeSetting", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.LaminateFamilySettingType"}, {"fullname": "hyperx.api.LaminateFamily.FootChargeMinRatio", "modulename": "hyperx.api", "qualname": "LaminateFamily.FootChargeMinRatio", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LaminateFamily.FootChargeMaxRatio", "modulename": "hyperx.api", "qualname": "LaminateFamily.FootChargeMaxRatio", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LaminateFamily.WebChargeSetting", "modulename": "hyperx.api", "qualname": "LaminateFamily.WebChargeSetting", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.LaminateFamilySettingType"}, {"fullname": "hyperx.api.LaminateFamily.WebChargeMinRatio", "modulename": "hyperx.api", "qualname": "LaminateFamily.WebChargeMinRatio", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LaminateFamily.WebChargeMaxRatio", "modulename": "hyperx.api", "qualname": "LaminateFamily.WebChargeMaxRatio", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LaminateFamily.CapChargeSetting", "modulename": "hyperx.api", "qualname": "LaminateFamily.CapChargeSetting", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.LaminateFamilySettingType"}, {"fullname": "hyperx.api.LaminateFamily.CapChargeMinRatio", "modulename": "hyperx.api", "qualname": "LaminateFamily.CapChargeMinRatio", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LaminateFamily.CapChargeMaxRatio", "modulename": "hyperx.api", "qualname": "LaminateFamily.CapChargeMaxRatio", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LaminateFamily.CapCoverSetting", "modulename": "hyperx.api", "qualname": "LaminateFamily.CapCoverSetting", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.LaminateFamilySettingType"}, {"fullname": "hyperx.api.LaminateFamily.CapCoverMinRatio", "modulename": "hyperx.api", "qualname": "LaminateFamily.CapCoverMinRatio", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LaminateFamily.CapCoverMaxRatio", "modulename": "hyperx.api", "qualname": "LaminateFamily.CapCoverMaxRatio", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LaminateFamily.DropPattern", "modulename": "hyperx.api", "qualname": "LaminateFamily.DropPattern", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.PlyDropPattern"}, {"fullname": "hyperx.api.LaminateFamily.LaminateStiffenerProfile", "modulename": "hyperx.api", "qualname": "LaminateFamily.LaminateStiffenerProfile", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.StiffenerProfile"}, {"fullname": "hyperx.api.LaminateLayerBase", "modulename": "hyperx.api", "qualname": "LaminateLayerBase", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "abc.ABC"}, {"fullname": "hyperx.api.LaminateLayerBase.LayerId", "modulename": "hyperx.api", "qualname": "LaminateLayerBase.LayerId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.LaminateLayerBase.LayerMaterial", "modulename": "hyperx.api", "qualname": "LaminateLayerBase.LayerMaterial", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.LaminateLayerBase.LayerMaterialType", "modulename": "hyperx.api", "qualname": "LaminateLayerBase.LayerMaterialType", "kind": "variable", "doc": "<p>Represents a material's type.</p>\n", "annotation": ": hyperx.api.types.MaterialType"}, {"fullname": "hyperx.api.LaminateLayerBase.Angle", "modulename": "hyperx.api", "qualname": "LaminateLayerBase.Angle", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LaminateLayerBase.Thickness", "modulename": "hyperx.api", "qualname": "LaminateLayerBase.Thickness", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LaminateLayerBase.IsFabric", "modulename": "hyperx.api", "qualname": "LaminateLayerBase.IsFabric", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LaminateLayerBase.SetThickness", "modulename": "hyperx.api", "qualname": "LaminateLayerBase.SetThickness", "kind": "function", "doc": "<p>Set the thickness of a layer.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">thickness</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LaminateLayerBase.SetMaterial", "modulename": "hyperx.api", "qualname": "LaminateLayerBase.SetMaterial", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LaminateLayer", "modulename": "hyperx.api", "qualname": "LaminateLayer", "kind": "class", "doc": "<p>Layer in a non-stiffener laminate.</p>\n", "bases": "LaminateLayerBase"}, {"fullname": "hyperx.api.LaminateLayer.__init__", "modulename": "hyperx.api", "qualname": "LaminateLayer.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">laminateLayer</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LaminateLayer</span></span>)</span>"}, {"fullname": "hyperx.api.LaminateLayer.LayerId", "modulename": "hyperx.api", "qualname": "LaminateLayer.LayerId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.LaminateLayer.LayerMaterialType", "modulename": "hyperx.api", "qualname": "LaminateLayer.LayerMaterialType", "kind": "variable", "doc": "<p>Represents a material's type.</p>\n", "annotation": ": hyperx.api.types.MaterialType"}, {"fullname": "hyperx.api.LaminateLayer.Angle", "modulename": "hyperx.api", "qualname": "LaminateLayer.Angle", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LaminateLayer.Thickness", "modulename": "hyperx.api", "qualname": "LaminateLayer.Thickness", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LaminateLayer.IsFabric", "modulename": "hyperx.api", "qualname": "LaminateLayer.IsFabric", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LaminateLayer.SetMaterial", "modulename": "hyperx.api", "qualname": "LaminateLayer.SetMaterial", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Laminate", "modulename": "hyperx.api", "qualname": "Laminate", "kind": "class", "doc": "<p>Laminate</p>\n", "bases": "LaminateBase"}, {"fullname": "hyperx.api.Laminate.__init__", "modulename": "hyperx.api", "qualname": "Laminate.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">laminate</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">Laminate</span></span>)</span>"}, {"fullname": "hyperx.api.Laminate.Layers", "modulename": "hyperx.api", "qualname": "Laminate.Layers", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[hyperx.api.LaminateLayer]"}, {"fullname": "hyperx.api.Laminate.AddLayer", "modulename": "hyperx.api", "qualname": "Laminate.AddLayer", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">materialName</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">angle</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">thickness</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">LaminateLayer</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Laminate.InsertLayer", "modulename": "hyperx.api", "qualname": "Laminate.InsertLayer", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">layerId</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">materialName</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">angle</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">thickness</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">LaminateLayer</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Laminate.RemoveLayer", "modulename": "hyperx.api", "qualname": "Laminate.RemoveLayer", "kind": "function", "doc": "<p>Removes a layer from the laminate.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">layerId</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Laminate.Save", "modulename": "hyperx.api", "qualname": "Laminate.Save", "kind": "function", "doc": "<p>Save any changes to this laminate material to the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.StiffenerLaminateLayer", "modulename": "hyperx.api", "qualname": "StiffenerLaminateLayer", "kind": "class", "doc": "<p>Stiffener Laminate Layer</p>\n", "bases": "LaminateLayerBase"}, {"fullname": "hyperx.api.StiffenerLaminateLayer.__init__", "modulename": "hyperx.api", "qualname": "StiffenerLaminateLayer.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">stiffenerLaminateLayer</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">StiffenerLaminateLayer</span></span>)</span>"}, {"fullname": "hyperx.api.StiffenerLaminateLayer.LayerLocations", "modulename": "hyperx.api", "qualname": "StiffenerLaminateLayer.LayerLocations", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[hyperx.api.types.StiffenerLaminateLayerLocation]"}, {"fullname": "hyperx.api.StiffenerLaminateLayer.LayerId", "modulename": "hyperx.api", "qualname": "StiffenerLaminateLayer.LayerId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.StiffenerLaminateLayer.LayerMaterialType", "modulename": "hyperx.api", "qualname": "StiffenerLaminateLayer.LayerMaterialType", "kind": "variable", "doc": "<p>Represents a material's type.</p>\n", "annotation": ": hyperx.api.types.MaterialType"}, {"fullname": "hyperx.api.StiffenerLaminateLayer.Angle", "modulename": "hyperx.api", "qualname": "StiffenerLaminateLayer.Angle", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.StiffenerLaminateLayer.Thickness", "modulename": "hyperx.api", "qualname": "StiffenerLaminateLayer.Thickness", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.StiffenerLaminateLayer.IsFabric", "modulename": "hyperx.api", "qualname": "StiffenerLaminateLayer.IsFabric", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.StiffenerLaminateLayer.AddLayerLocation", "modulename": "hyperx.api", "qualname": "StiffenerLaminateLayer.AddLayerLocation", "kind": "function", "doc": "<p>Add a layer location to this layer.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">location</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">StiffenerLaminateLayerLocation</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.StiffenerLaminateLayer.RemoveLayerLocation", "modulename": "hyperx.api", "qualname": "StiffenerLaminateLayer.RemoveLayerLocation", "kind": "function", "doc": "<p>Remove a layer location from LayerLocations.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">location</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">StiffenerLaminateLayerLocation</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.StiffenerLaminateLayer.SetMaterial", "modulename": "hyperx.api", "qualname": "StiffenerLaminateLayer.SetMaterial", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.StiffenerLaminate", "modulename": "hyperx.api", "qualname": "StiffenerLaminate", "kind": "class", "doc": "<p>Stiffener Laminate</p>\n", "bases": "LaminateBase"}, {"fullname": "hyperx.api.StiffenerLaminate.__init__", "modulename": "hyperx.api", "qualname": "StiffenerLaminate.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">stiffenerLaminate</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">StiffenerLaminate</span></span>)</span>"}, {"fullname": "hyperx.api.StiffenerLaminate.Layers", "modulename": "hyperx.api", "qualname": "StiffenerLaminate.Layers", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[hyperx.api.StiffenerLaminateLayer]"}, {"fullname": "hyperx.api.StiffenerLaminate.LaminateStiffenerProfile", "modulename": "hyperx.api", "qualname": "StiffenerLaminate.LaminateStiffenerProfile", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.StiffenerProfile"}, {"fullname": "hyperx.api.StiffenerLaminate.AddLayer", "modulename": "hyperx.api", "qualname": "StiffenerLaminate.AddLayer", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">item2</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">item3</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">item4</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">StiffenerLaminateLayer</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.StiffenerLaminate.InsertLayer", "modulename": "hyperx.api", "qualname": "StiffenerLaminate.InsertLayer", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">item2</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">item3</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">item4</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">item5</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">StiffenerLaminateLayer</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.StiffenerLaminate.RemoveLayer", "modulename": "hyperx.api", "qualname": "StiffenerLaminate.RemoveLayer", "kind": "function", "doc": "<p>Remove a layer by layerId.\nNote, layerId is 1 indexed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">layerId</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.StiffenerLaminate.Save", "modulename": "hyperx.api", "qualname": "StiffenerLaminate.Save", "kind": "function", "doc": "<p>Save laminate to database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.OrthotropicCorrectionFactorBase", "modulename": "hyperx.api", "qualname": "OrthotropicCorrectionFactorBase", "kind": "class", "doc": "<p>Orthotropic material correction factor.</p>\n", "bases": "abc.ABC"}, {"fullname": "hyperx.api.OrthotropicCorrectionFactorBase.__init__", "modulename": "hyperx.api", "qualname": "OrthotropicCorrectionFactorBase.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">orthotropicCorrectionFactorBase</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">OrthotropicCorrectionFactorBase</span></span>)</span>"}, {"fullname": "hyperx.api.OrthotropicCorrectionFactorBase.CorrectionId", "modulename": "hyperx.api", "qualname": "OrthotropicCorrectionFactorBase.CorrectionId", "kind": "variable", "doc": "<p>Correction ID for a correction factor. (Columns in HyperX)</p>\n", "annotation": ": hyperx.api.types.CorrectionId"}, {"fullname": "hyperx.api.OrthotropicCorrectionFactorBase.PropertyId", "modulename": "hyperx.api", "qualname": "OrthotropicCorrectionFactorBase.PropertyId", "kind": "variable", "doc": "<p>Property name for a correction factor. (Rows in HyperX)</p>\n", "annotation": ": hyperx.api.types.CorrectionProperty"}, {"fullname": "hyperx.api.OrthotropicCorrectionFactorPoint", "modulename": "hyperx.api", "qualname": "OrthotropicCorrectionFactorPoint", "kind": "class", "doc": "<p>Pointer to an Equation-based or Tabular Correction Factor.</p>\n"}, {"fullname": "hyperx.api.OrthotropicCorrectionFactorPoint.__init__", "modulename": "hyperx.api", "qualname": "OrthotropicCorrectionFactorPoint.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">orthotropicCorrectionFactorPoint</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">OrthotropicCorrectionFactorPoint</span></span>)</span>"}, {"fullname": "hyperx.api.OrthotropicCorrectionFactorPoint.Create_OrthotropicCorrectionFactorPoint", "modulename": "hyperx.api", "qualname": "OrthotropicCorrectionFactorPoint.Create_OrthotropicCorrectionFactorPoint", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">property</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">CorrectionProperty</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">CorrectionId</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.OrthotropicCorrectionFactorPoint.CorrectionProperty", "modulename": "hyperx.api", "qualname": "OrthotropicCorrectionFactorPoint.CorrectionProperty", "kind": "variable", "doc": "<p>Property name for a correction factor. (Rows in HyperX)</p>\n", "annotation": ": hyperx.api.types.CorrectionProperty"}, {"fullname": "hyperx.api.OrthotropicCorrectionFactorPoint.CorrectionId", "modulename": "hyperx.api", "qualname": "OrthotropicCorrectionFactorPoint.CorrectionId", "kind": "variable", "doc": "<p>Correction ID for a correction factor. (Columns in HyperX)</p>\n", "annotation": ": hyperx.api.types.CorrectionId"}, {"fullname": "hyperx.api.OrthotropicCorrectionFactorPoint.Equals", "modulename": "hyperx.api", "qualname": "OrthotropicCorrectionFactorPoint.Equals", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.OrthotropicCorrectionFactorPoint.GetHashCode", "modulename": "hyperx.api", "qualname": "OrthotropicCorrectionFactorPoint.GetHashCode", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.OrthotropicCorrectionFactorValue", "modulename": "hyperx.api", "qualname": "OrthotropicCorrectionFactorValue", "kind": "class", "doc": "<p>Orthotropic material equation-based correction factor value. (NOT TABULAR)</p>\n"}, {"fullname": "hyperx.api.OrthotropicCorrectionFactorValue.__init__", "modulename": "hyperx.api", "qualname": "OrthotropicCorrectionFactorValue.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">orthotropicCorrectionFactorValue</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">OrthotropicCorrectionFactorValue</span></span>)</span>"}, {"fullname": "hyperx.api.OrthotropicCorrectionFactorValue.Property", "modulename": "hyperx.api", "qualname": "OrthotropicCorrectionFactorValue.Property", "kind": "variable", "doc": "<p>Property name for a correction factor. (Rows in HyperX)</p>\n", "annotation": ": hyperx.api.types.CorrectionProperty"}, {"fullname": "hyperx.api.OrthotropicCorrectionFactorValue.Correction", "modulename": "hyperx.api", "qualname": "OrthotropicCorrectionFactorValue.Correction", "kind": "variable", "doc": "<p>Correction ID for a correction factor. (Columns in HyperX)</p>\n", "annotation": ": hyperx.api.types.CorrectionId"}, {"fullname": "hyperx.api.OrthotropicCorrectionFactorValue.Equation", "modulename": "hyperx.api", "qualname": "OrthotropicCorrectionFactorValue.Equation", "kind": "variable", "doc": "<p>Equation for a correction factor.</p>\n", "annotation": ": hyperx.api.types.CorrectionEquation"}, {"fullname": "hyperx.api.OrthotropicCorrectionFactorValue.EquationParameter", "modulename": "hyperx.api", "qualname": "OrthotropicCorrectionFactorValue.EquationParameter", "kind": "variable", "doc": "<p>Correction factor parameter names.</p>\n", "annotation": ": hyperx.api.types.EquationParameterId"}, {"fullname": "hyperx.api.OrthotropicCorrectionFactorValue.Value", "modulename": "hyperx.api", "qualname": "OrthotropicCorrectionFactorValue.Value", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicEquationCorrectionFactor", "modulename": "hyperx.api", "qualname": "OrthotropicEquationCorrectionFactor", "kind": "class", "doc": "<p>Represents an equation-based orthotropic material correction factor.</p>\n", "bases": "OrthotropicCorrectionFactorBase"}, {"fullname": "hyperx.api.OrthotropicEquationCorrectionFactor.__init__", "modulename": "hyperx.api", "qualname": "OrthotropicEquationCorrectionFactor.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">orthotropicEquationCorrectionFactor</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">OrthotropicEquationCorrectionFactor</span></span>)</span>"}, {"fullname": "hyperx.api.OrthotropicEquationCorrectionFactor.Equation", "modulename": "hyperx.api", "qualname": "OrthotropicEquationCorrectionFactor.Equation", "kind": "variable", "doc": "<p>Equation for a correction factor.</p>\n", "annotation": ": hyperx.api.types.CorrectionEquation"}, {"fullname": "hyperx.api.OrthotropicEquationCorrectionFactor.OrthotropicCorrectionValues", "modulename": "hyperx.api", "qualname": "OrthotropicEquationCorrectionFactor.OrthotropicCorrectionValues", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict[hyperx.api.types.EquationParameterId, hyperx.api.OrthotropicCorrectionFactorValue]"}, {"fullname": "hyperx.api.OrthotropicEquationCorrectionFactor.AddCorrectionFactorValue", "modulename": "hyperx.api", "qualname": "OrthotropicEquationCorrectionFactor.AddCorrectionFactorValue", "kind": "function", "doc": "<p>Add a correction factor value for a given correction factor.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>equationParameterName</strong>:  This represents the parameter of the equation that should be changed.</li>\n<li><strong>valueToAdd</strong>:  This is the value that will be assigned to the chosen parameter.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">equationParameterName</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">EquationParameterId</span>,</span><span class=\"param\">\t<span class=\"n\">valueToAdd</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">OrthotropicCorrectionFactorValue</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.TabularCorrectionFactorIndependentValue", "modulename": "hyperx.api", "qualname": "TabularCorrectionFactorIndependentValue", "kind": "class", "doc": "<p>Contains an independent value for a tabular correction factor row.</p>\n"}, {"fullname": "hyperx.api.TabularCorrectionFactorIndependentValue.__init__", "modulename": "hyperx.api", "qualname": "TabularCorrectionFactorIndependentValue.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">tabularCorrectionFactorIndependentValue</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">TabularCorrectionFactorIndependentValue</span></span>)</span>"}, {"fullname": "hyperx.api.TabularCorrectionFactorIndependentValue.BoolValue", "modulename": "hyperx.api", "qualname": "TabularCorrectionFactorIndependentValue.BoolValue", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.TabularCorrectionFactorIndependentValue.DoubleValue", "modulename": "hyperx.api", "qualname": "TabularCorrectionFactorIndependentValue.DoubleValue", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.TabularCorrectionFactorIndependentValue.IntValue", "modulename": "hyperx.api", "qualname": "TabularCorrectionFactorIndependentValue.IntValue", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.TabularCorrectionFactorIndependentValue.ValueType", "modulename": "hyperx.api", "qualname": "TabularCorrectionFactorIndependentValue.ValueType", "kind": "variable", "doc": "<p>Defines the type of the independent values on a tabular correction factor row.</p>\n", "annotation": ": hyperx.api.types.CorrectionValueType"}, {"fullname": "hyperx.api.TabularCorrectionFactorRow", "modulename": "hyperx.api", "qualname": "TabularCorrectionFactorRow", "kind": "class", "doc": "<p>Row data for a tabular correction factor.</p>\n"}, {"fullname": "hyperx.api.TabularCorrectionFactorRow.__init__", "modulename": "hyperx.api", "qualname": "TabularCorrectionFactorRow.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">tabularCorrectionFactorRow</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">TabularCorrectionFactorRow</span></span>)</span>"}, {"fullname": "hyperx.api.TabularCorrectionFactorRow.DependentValue", "modulename": "hyperx.api", "qualname": "TabularCorrectionFactorRow.DependentValue", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.TabularCorrectionFactorRow.IndependentValues", "modulename": "hyperx.api", "qualname": "TabularCorrectionFactorRow.IndependentValues", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict[hyperx.api.types.CorrectionIndependentDefinition, hyperx.api.TabularCorrectionFactorIndependentValue]"}, {"fullname": "hyperx.api.OrthotropicTabularCorrectionFactor", "modulename": "hyperx.api", "qualname": "OrthotropicTabularCorrectionFactor", "kind": "class", "doc": "<p>Tabular correction factor.</p>\n", "bases": "OrthotropicCorrectionFactorBase"}, {"fullname": "hyperx.api.OrthotropicTabularCorrectionFactor.__init__", "modulename": "hyperx.api", "qualname": "OrthotropicTabularCorrectionFactor.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">orthotropicTabularCorrectionFactor</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">OrthotropicTabularCorrectionFactor</span></span>)</span>"}, {"fullname": "hyperx.api.OrthotropicTabularCorrectionFactor.CorrectionFactorRows", "modulename": "hyperx.api", "qualname": "OrthotropicTabularCorrectionFactor.CorrectionFactorRows", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict[int, hyperx.api.TabularCorrectionFactorRow]"}, {"fullname": "hyperx.api.OrthotropicTabularCorrectionFactor.CorrectionIndependentDefinitions", "modulename": "hyperx.api", "qualname": "OrthotropicTabularCorrectionFactor.CorrectionIndependentDefinitions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": set[hyperx.api.types.CorrectionIndependentDefinition]"}, {"fullname": "hyperx.api.OrthotropicTabularCorrectionFactor.SetIndependentValue", "modulename": "hyperx.api", "qualname": "OrthotropicTabularCorrectionFactor.SetIndependentValue", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">item2</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">item3</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.OrthotropicTabularCorrectionFactor.SetKValue", "modulename": "hyperx.api", "qualname": "OrthotropicTabularCorrectionFactor.SetKValue", "kind": "function", "doc": "<p>Set the dependent value for a specified row.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">correctionPointId</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.OrthotropicAllowableCurvePoint", "modulename": "hyperx.api", "qualname": "OrthotropicAllowableCurvePoint", "kind": "class", "doc": "<p>Represents a point on a laminate allowable curve.</p>\n"}, {"fullname": "hyperx.api.OrthotropicAllowableCurvePoint.__init__", "modulename": "hyperx.api", "qualname": "OrthotropicAllowableCurvePoint.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">orthotropicAllowableCurvePoint</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">OrthotropicAllowableCurvePoint</span></span>)</span>"}, {"fullname": "hyperx.api.OrthotropicAllowableCurvePoint.Property_ID", "modulename": "hyperx.api", "qualname": "OrthotropicAllowableCurvePoint.Property_ID", "kind": "variable", "doc": "<p>Property name for a laminate allowable.</p>\n", "annotation": ": hyperx.api.types.AllowablePropertyName"}, {"fullname": "hyperx.api.OrthotropicAllowableCurvePoint.Temperature", "modulename": "hyperx.api", "qualname": "OrthotropicAllowableCurvePoint.Temperature", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicAllowableCurvePoint.X", "modulename": "hyperx.api", "qualname": "OrthotropicAllowableCurvePoint.X", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicAllowableCurvePoint.Y", "modulename": "hyperx.api", "qualname": "OrthotropicAllowableCurvePoint.Y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicEffectiveLaminate", "modulename": "hyperx.api", "qualname": "OrthotropicEffectiveLaminate", "kind": "class", "doc": "<p>Orthotropic material effective laminate properties. Read-only from the API.\n    Check if material is an effective laminate with orthotropic.IsEffectiveLaminate.</p>\n"}, {"fullname": "hyperx.api.OrthotropicEffectiveLaminate.__init__", "modulename": "hyperx.api", "qualname": "OrthotropicEffectiveLaminate.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">orthotropicEffectiveLaminate</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">OrthotropicEffectiveLaminate</span></span>)</span>"}, {"fullname": "hyperx.api.OrthotropicEffectiveLaminate.Percent_tape_0", "modulename": "hyperx.api", "qualname": "OrthotropicEffectiveLaminate.Percent_tape_0", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicEffectiveLaminate.Percent_tape_90", "modulename": "hyperx.api", "qualname": "OrthotropicEffectiveLaminate.Percent_tape_90", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicEffectiveLaminate.Percent_tape_45", "modulename": "hyperx.api", "qualname": "OrthotropicEffectiveLaminate.Percent_tape_45", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicEffectiveLaminate.Percent_fabric_0", "modulename": "hyperx.api", "qualname": "OrthotropicEffectiveLaminate.Percent_fabric_0", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicEffectiveLaminate.Percent_fabric_90", "modulename": "hyperx.api", "qualname": "OrthotropicEffectiveLaminate.Percent_fabric_90", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicEffectiveLaminate.Percent_fabric_45", "modulename": "hyperx.api", "qualname": "OrthotropicEffectiveLaminate.Percent_fabric_45", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicEffectiveLaminate.Tape_Orthotropic", "modulename": "hyperx.api", "qualname": "OrthotropicEffectiveLaminate.Tape_Orthotropic", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.OrthotropicEffectiveLaminate.Fabric_Orthotropic", "modulename": "hyperx.api", "qualname": "OrthotropicEffectiveLaminate.Fabric_Orthotropic", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.OrthotropicEffectiveLaminate.Valid", "modulename": "hyperx.api", "qualname": "OrthotropicEffectiveLaminate.Valid", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.OrthotropicEffectiveLaminate.Use_tape_allowables", "modulename": "hyperx.api", "qualname": "OrthotropicEffectiveLaminate.Use_tape_allowables", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.OrthotropicLaminateAllowable", "modulename": "hyperx.api", "qualname": "OrthotropicLaminateAllowable", "kind": "class", "doc": "<p>Orthotropic material laminate allowable properties.</p>\n"}, {"fullname": "hyperx.api.OrthotropicLaminateAllowable.__init__", "modulename": "hyperx.api", "qualname": "OrthotropicLaminateAllowable.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">orthotropicLaminateAllowable</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">OrthotropicLaminateAllowable</span></span>)</span>"}, {"fullname": "hyperx.api.OrthotropicLaminateAllowable.Property_ID", "modulename": "hyperx.api", "qualname": "OrthotropicLaminateAllowable.Property_ID", "kind": "variable", "doc": "<p>Property name for a laminate allowable.</p>\n", "annotation": ": hyperx.api.types.AllowablePropertyName"}, {"fullname": "hyperx.api.OrthotropicLaminateAllowable.Method_ID", "modulename": "hyperx.api", "qualname": "OrthotropicLaminateAllowable.Method_ID", "kind": "variable", "doc": "<p>Method name for a laminate allowable.</p>\n", "annotation": ": hyperx.api.types.AllowableMethodName"}, {"fullname": "hyperx.api.OrthotropicTemperature", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature", "kind": "class", "doc": "<p>Orthotropic material temperature dependent properties.</p>\n"}, {"fullname": "hyperx.api.OrthotropicTemperature.__init__", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">orthotropicTemperature</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">OrthotropicTemperature</span></span>)</span>"}, {"fullname": "hyperx.api.OrthotropicTemperature.Temperature", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.Temperature", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.Et1", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.Et1", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.Et2", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.Et2", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.vt12", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.vt12", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.Ec1", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.Ec1", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.Ec2", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.Ec2", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.vc12", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.vc12", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.G12", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.G12", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.G13", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.G13", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.G23", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.G23", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.Ftu1", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.Ftu1", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.Ftu2", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.Ftu2", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.Fcu1", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.Fcu1", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.Fcu2", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.Fcu2", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.Fsu12", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.Fsu12", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.Fsu13", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.Fsu13", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.Fsu23", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.Fsu23", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.GIc", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.GIc", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.alpha1", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.alpha1", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.alpha2", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.alpha2", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.K1", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.K1", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.K2", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.K2", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.C", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.C", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.etu1", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.etu1", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.etu2", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.etu2", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.ecu1", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.ecu1", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.ecu2", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.ecu2", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.ecuoh", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.ecuoh", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.ecuai", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.ecuai", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.esu12", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.esu12", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.Ftu3", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.Ftu3", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.GIIc", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.GIIc", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.d0Tension", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.d0Tension", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.cd", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.cd", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.d0Compression", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.d0Compression", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.TLt", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.TLt", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.TLc", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.TLc", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.TTt", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.TTt", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.TTc", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.TTc", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.OrthotropicTemperature.OrthotropicAllowableCurvePoints", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.OrthotropicAllowableCurvePoints", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[hyperx.api.OrthotropicAllowableCurvePoint]"}, {"fullname": "hyperx.api.OrthotropicTemperature.AddCurvePoint", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.AddCurvePoint", "kind": "function", "doc": "<p>Add a curve point to a laminate allowable curve.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x</strong>:  x represents an x-value (for a non-polynomial method) or an allowable polynomial coefficient (represented by an enum).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">property</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">AllowablePropertyName</span>,</span><span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">OrthotropicAllowableCurvePoint</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.OrthotropicTemperature.DeleteCurvePoint", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.DeleteCurvePoint", "kind": "function", "doc": "<p>Deletes a temperature-dependent property for a material.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x</strong>:  x represents an x-value (for a non-polynomial method) or an allowable polynomial coefficient (represented by an enum).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">property</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">AllowablePropertyName</span>, </span><span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.OrthotropicTemperature.GetCurvePoint", "modulename": "hyperx.api", "qualname": "OrthotropicTemperature.GetCurvePoint", "kind": "function", "doc": "<p>Retrieve an allowable curve point from this temperature's allowable curve points.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x</strong>:  x represents an x-value (for a non-polynomial method) or an allowable polynomial coefficient (represented by an enum).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">property</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">AllowablePropertyName</span>,</span><span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">OrthotropicAllowableCurvePoint</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Orthotropic", "modulename": "hyperx.api", "qualname": "Orthotropic", "kind": "class", "doc": "<p>Orthotropic material.</p>\n"}, {"fullname": "hyperx.api.Orthotropic.__init__", "modulename": "hyperx.api", "qualname": "Orthotropic.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">orthotropic</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">Orthotropic</span></span>)</span>"}, {"fullname": "hyperx.api.Orthotropic.MaterialFamilyName", "modulename": "hyperx.api", "qualname": "Orthotropic.MaterialFamilyName", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Orthotropic.Id", "modulename": "hyperx.api", "qualname": "Orthotropic.Id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.Orthotropic.CreationDate", "modulename": "hyperx.api", "qualname": "Orthotropic.CreationDate", "kind": "variable", "doc": "<p></p>\n", "annotation": ": System.DateTime"}, {"fullname": "hyperx.api.Orthotropic.ModificationDate", "modulename": "hyperx.api", "qualname": "Orthotropic.ModificationDate", "kind": "variable", "doc": "<p></p>\n", "annotation": ": System.DateTime"}, {"fullname": "hyperx.api.Orthotropic.Name", "modulename": "hyperx.api", "qualname": "Orthotropic.Name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Orthotropic.Form", "modulename": "hyperx.api", "qualname": "Orthotropic.Form", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Orthotropic.Specification", "modulename": "hyperx.api", "qualname": "Orthotropic.Specification", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Orthotropic.Basis", "modulename": "hyperx.api", "qualname": "Orthotropic.Basis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Orthotropic.Wet", "modulename": "hyperx.api", "qualname": "Orthotropic.Wet", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.Orthotropic.Thickness", "modulename": "hyperx.api", "qualname": "Orthotropic.Thickness", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Orthotropic.Density", "modulename": "hyperx.api", "qualname": "Orthotropic.Density", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Orthotropic.FiberVolume", "modulename": "hyperx.api", "qualname": "Orthotropic.FiberVolume", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Orthotropic.GlassTransition", "modulename": "hyperx.api", "qualname": "Orthotropic.GlassTransition", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Orthotropic.Manufacturer", "modulename": "hyperx.api", "qualname": "Orthotropic.Manufacturer", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Orthotropic.Processes", "modulename": "hyperx.api", "qualname": "Orthotropic.Processes", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Orthotropic.MaterialDescription", "modulename": "hyperx.api", "qualname": "Orthotropic.MaterialDescription", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Orthotropic.UserNote", "modulename": "hyperx.api", "qualname": "Orthotropic.UserNote", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Orthotropic.BendingCorrectionFactor", "modulename": "hyperx.api", "qualname": "Orthotropic.BendingCorrectionFactor", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Orthotropic.FemMaterialId", "modulename": "hyperx.api", "qualname": "Orthotropic.FemMaterialId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.Orthotropic.Cost", "modulename": "hyperx.api", "qualname": "Orthotropic.Cost", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Orthotropic.BucklingStiffnessKnockdown", "modulename": "hyperx.api", "qualname": "Orthotropic.BucklingStiffnessKnockdown", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Orthotropic.OrthotropicTemperatureProperties", "modulename": "hyperx.api", "qualname": "Orthotropic.OrthotropicTemperatureProperties", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[hyperx.api.OrthotropicTemperature]"}, {"fullname": "hyperx.api.Orthotropic.OrthotropicLaminateAllowables", "modulename": "hyperx.api", "qualname": "Orthotropic.OrthotropicLaminateAllowables", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[hyperx.api.OrthotropicLaminateAllowable]"}, {"fullname": "hyperx.api.Orthotropic.OrthotropicEffectiveLaminate", "modulename": "hyperx.api", "qualname": "Orthotropic.OrthotropicEffectiveLaminate", "kind": "variable", "doc": "<p>Orthotropic material effective laminate properties. Read-only from the API.\nCheck if material is an effective laminate with orthotropic.IsEffectiveLaminate.</p>\n", "annotation": ": &lt;property object at 0x0000014E356BA5C0&gt;"}, {"fullname": "hyperx.api.Orthotropic.OrthotropicEquationCorrectionFactors", "modulename": "hyperx.api", "qualname": "Orthotropic.OrthotropicEquationCorrectionFactors", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict[hyperx.api.OrthotropicCorrectionFactorPoint, hyperx.api.OrthotropicEquationCorrectionFactor]"}, {"fullname": "hyperx.api.Orthotropic.OrthotropicTabularCorrectionFactors", "modulename": "hyperx.api", "qualname": "Orthotropic.OrthotropicTabularCorrectionFactors", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict[hyperx.api.OrthotropicCorrectionFactorPoint, hyperx.api.OrthotropicTabularCorrectionFactor]"}, {"fullname": "hyperx.api.Orthotropic.AddTemperatureProperty", "modulename": "hyperx.api", "qualname": "Orthotropic.AddTemperatureProperty", "kind": "function", "doc": "<p>Adds a temperature-dependent property for a material.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">temperature</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">et1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">et2</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">vt12</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">ec1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">ec2</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">vc12</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">g12</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">ftu1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">ftu2</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">fcu1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">fcu2</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">fsu12</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">alpha1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">alpha2</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">etu1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">etu2</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">ecu1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">ecu2</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">esu12</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">OrthotropicTemperature</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Orthotropic.DeleteTemperatureProperty", "modulename": "hyperx.api", "qualname": "Orthotropic.DeleteTemperatureProperty", "kind": "function", "doc": "<p>Deletes a temperature-dependent property for a material.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">temperature</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Orthotropic.GetTemperature", "modulename": "hyperx.api", "qualname": "Orthotropic.GetTemperature", "kind": "function", "doc": "<p>Retrieve a Temperature from this material's temperature-dependent properties. Allows a degree of tolerance to avoid issues with floating point numbers.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>LookupTemperature</strong>:  Temperature to search for.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">lookupTemperature</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">OrthotropicTemperature</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Orthotropic.IsEffectiveLaminate", "modulename": "hyperx.api", "qualname": "Orthotropic.IsEffectiveLaminate", "kind": "function", "doc": "<p>Returns true if this material is an effective laminate.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Orthotropic.HasLaminateAllowable", "modulename": "hyperx.api", "qualname": "Orthotropic.HasLaminateAllowable", "kind": "function", "doc": "<p>Returns true if this material has a specified laminate allowable property.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">property</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">AllowablePropertyName</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Orthotropic.AddLaminateAllowable", "modulename": "hyperx.api", "qualname": "Orthotropic.AddLaminateAllowable", "kind": "function", "doc": "<p>Adds a laminate allowable to this material.\nAn orthotropic material can only have one laminate allowable of each property (as specified by the property argument).\n    :param property: The strain or stress property for a laminate allowable.\n    :param method: The method for a laminate allowable (AML, Percent 0/45, Polynomial).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">property</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">AllowablePropertyName</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">AllowableMethodName</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">OrthotropicLaminateAllowable</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Orthotropic.GetLaminateAllowable", "modulename": "hyperx.api", "qualname": "Orthotropic.GetLaminateAllowable", "kind": "function", "doc": "<p>Retrieve a Laminate allowable from this material's laminate allowables.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>LookupAllowableProperty</strong>:  Laminate allowable property to search for.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">lookupAllowableProperty</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">AllowablePropertyName</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">OrthotropicLaminateAllowable</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Orthotropic.AddEquationCorrectionFactor", "modulename": "hyperx.api", "qualname": "Orthotropic.AddEquationCorrectionFactor", "kind": "function", "doc": "<p>Adds an equation-based correction factor for this material.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>propertyId</strong>:  The ID of the property to be affected by the correction factor. Specified with a CorrectionPropertyName enum.</li>\n<li><strong>correctionId</strong>:  The ID for the type of correction factor to be applied. Specified with a CorrectionIDName enum.</li>\n<li><strong>equationId</strong>:  The ID for the type of correction factor equation to use. Specified with a CorrectionEquationName enum.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">propertyId</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">CorrectionProperty</span>,</span><span class=\"param\">\t<span class=\"n\">correctionId</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">CorrectionId</span>,</span><span class=\"param\">\t<span class=\"n\">equationId</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">CorrectionEquation</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">OrthotropicEquationCorrectionFactor</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Orthotropic.GetEquationCorrectionFactor", "modulename": "hyperx.api", "qualname": "Orthotropic.GetEquationCorrectionFactor", "kind": "function", "doc": "<p>Retrieve a Correction Factor from this material's correction factors.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>property</strong>:  CorrectionPropertyName to search for.</li>\n<li><strong>correction</strong>:  CorrectionIDName to search for.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">property</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">CorrectionProperty</span>,</span><span class=\"param\">\t<span class=\"n\">correction</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">CorrectionId</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">OrthotropicEquationCorrectionFactor</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Orthotropic.GetTabularCorrectionFactor", "modulename": "hyperx.api", "qualname": "Orthotropic.GetTabularCorrectionFactor", "kind": "function", "doc": "<p>Retrieve a Correction Factor from this material's correction factors.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>property</strong>:  CorrectionPropertyName to search for.</li>\n<li><strong>correction</strong>:  CorrectionIDName to search for.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">property</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">CorrectionProperty</span>,</span><span class=\"param\">\t<span class=\"n\">correction</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">CorrectionId</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">OrthotropicTabularCorrectionFactor</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Orthotropic.Save", "modulename": "hyperx.api", "qualname": "Orthotropic.Save", "kind": "function", "doc": "<p>Save any changes to this orthotropic material to the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Vector2d", "modulename": "hyperx.api", "qualname": "Vector2d", "kind": "class", "doc": "<p>Represents a readonly 2D vector.</p>\n"}, {"fullname": "hyperx.api.Vector2d.__init__", "modulename": "hyperx.api", "qualname": "Vector2d.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">vector2d</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">Vector2d</span></span>)</span>"}, {"fullname": "hyperx.api.Vector2d.Create_Vector2d", "modulename": "hyperx.api", "qualname": "Vector2d.Create_Vector2d", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Vector2d.X", "modulename": "hyperx.api", "qualname": "Vector2d.X", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Vector2d.Y", "modulename": "hyperx.api", "qualname": "Vector2d.Y", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Vector2d.Equals", "modulename": "hyperx.api", "qualname": "Vector2d.Equals", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Vector2d.GetHashCode", "modulename": "hyperx.api", "qualname": "Vector2d.GetHashCode", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ElementSet", "modulename": "hyperx.api", "qualname": "ElementSet", "kind": "class", "doc": "<p>A set of elements defined in the input file.</p>\n", "bases": "IdNameEntity"}, {"fullname": "hyperx.api.ElementSet.__init__", "modulename": "hyperx.api", "qualname": "ElementSet.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">elementSet</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">ElementSet</span></span>)</span>"}, {"fullname": "hyperx.api.ElementSet.Elements", "modulename": "hyperx.api", "qualname": "ElementSet.Elements", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.ElementCol"}, {"fullname": "hyperx.api.FemProperty", "modulename": "hyperx.api", "qualname": "FemProperty", "kind": "class", "doc": "<p>A property description.</p>\n", "bases": "IdNameEntity"}, {"fullname": "hyperx.api.FemProperty.__init__", "modulename": "hyperx.api", "qualname": "FemProperty.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">femProperty</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">FemProperty</span></span>)</span>"}, {"fullname": "hyperx.api.FemProperty.Elements", "modulename": "hyperx.api", "qualname": "FemProperty.Elements", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.ElementCol"}, {"fullname": "hyperx.api.FemProperty.FemType", "modulename": "hyperx.api", "qualname": "FemProperty.FemType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.FemType"}, {"fullname": "hyperx.api.ElementSetCol", "modulename": "hyperx.api", "qualname": "ElementSetCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdEntityCol[hyperx.api.ElementSet]"}, {"fullname": "hyperx.api.ElementSetCol.__init__", "modulename": "hyperx.api", "qualname": "ElementSetCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">elementSetCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">ElementSetCol</span></span>)</span>"}, {"fullname": "hyperx.api.ElementSetCol.ElementSetColList", "modulename": "hyperx.api", "qualname": "ElementSetCol.ElementSetColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.ElementSet]"}, {"fullname": "hyperx.api.FemPropertyCol", "modulename": "hyperx.api", "qualname": "FemPropertyCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdEntityCol[hyperx.api.FemProperty]"}, {"fullname": "hyperx.api.FemPropertyCol.__init__", "modulename": "hyperx.api", "qualname": "FemPropertyCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">femPropertyCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">FemPropertyCol</span></span>)</span>"}, {"fullname": "hyperx.api.FemPropertyCol.FemPropertyColList", "modulename": "hyperx.api", "qualname": "FemPropertyCol.FemPropertyColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.FemProperty]"}, {"fullname": "hyperx.api.FemDataSet", "modulename": "hyperx.api", "qualname": "FemDataSet", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "hyperx.api.FemDataSet.__init__", "modulename": "hyperx.api", "qualname": "FemDataSet.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">femDataSet</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">FemDataSet</span></span>)</span>"}, {"fullname": "hyperx.api.FemDataSet.FemProperties", "modulename": "hyperx.api", "qualname": "FemDataSet.FemProperties", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.FemPropertyCol"}, {"fullname": "hyperx.api.FemDataSet.ElementSets", "modulename": "hyperx.api", "qualname": "FemDataSet.ElementSets", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.ElementSetCol"}, {"fullname": "hyperx.api.PluginPackage", "modulename": "hyperx.api", "qualname": "PluginPackage", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "IdNameEntity"}, {"fullname": "hyperx.api.PluginPackage.__init__", "modulename": "hyperx.api", "qualname": "PluginPackage.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pluginPackage</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">PluginPackage</span></span>)</span>"}, {"fullname": "hyperx.api.PluginPackage.FilePath", "modulename": "hyperx.api", "qualname": "PluginPackage.FilePath", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.PluginPackage.Version", "modulename": "hyperx.api", "qualname": "PluginPackage.Version", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.PluginPackage.Description", "modulename": "hyperx.api", "qualname": "PluginPackage.Description", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.PluginPackage.ModificationDate", "modulename": "hyperx.api", "qualname": "PluginPackage.ModificationDate", "kind": "variable", "doc": "<p></p>\n", "annotation": ": System.DateTime"}, {"fullname": "hyperx.api.Ply", "modulename": "hyperx.api", "qualname": "Ply", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "IdNameEntity"}, {"fullname": "hyperx.api.Ply.__init__", "modulename": "hyperx.api", "qualname": "Ply.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ply</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">Ply</span></span>)</span>"}, {"fullname": "hyperx.api.Ply.InnerCurves", "modulename": "hyperx.api", "qualname": "Ply.InnerCurves", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[int]"}, {"fullname": "hyperx.api.Ply.OuterCurves", "modulename": "hyperx.api", "qualname": "Ply.OuterCurves", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[int]"}, {"fullname": "hyperx.api.Ply.FiberDirectionCurves", "modulename": "hyperx.api", "qualname": "Ply.FiberDirectionCurves", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[int]"}, {"fullname": "hyperx.api.Ply.Area", "modulename": "hyperx.api", "qualname": "Ply.Area", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Ply.Description", "modulename": "hyperx.api", "qualname": "Ply.Description", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Ply.Elements", "modulename": "hyperx.api", "qualname": "Ply.Elements", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.ElementCol"}, {"fullname": "hyperx.api.Ply.MaterialId", "modulename": "hyperx.api", "qualname": "Ply.MaterialId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.Ply.Orientation", "modulename": "hyperx.api", "qualname": "Ply.Orientation", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.Ply.Sequence", "modulename": "hyperx.api", "qualname": "Ply.Sequence", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.Ply.StructureId", "modulename": "hyperx.api", "qualname": "Ply.StructureId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.Ply.Thickness", "modulename": "hyperx.api", "qualname": "Ply.Thickness", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Rundeck", "modulename": "hyperx.api", "qualname": "Rundeck", "kind": "class", "doc": "<p>Represents an entity with an ID.</p>\n", "bases": "IdEntity"}, {"fullname": "hyperx.api.Rundeck.__init__", "modulename": "hyperx.api", "qualname": "Rundeck.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">rundeck</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">Rundeck</span></span>)</span>"}, {"fullname": "hyperx.api.Rundeck.InputFilePath", "modulename": "hyperx.api", "qualname": "Rundeck.InputFilePath", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Rundeck.IsPrimary", "modulename": "hyperx.api", "qualname": "Rundeck.IsPrimary", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.Rundeck.ResultFilePath", "modulename": "hyperx.api", "qualname": "Rundeck.ResultFilePath", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Rundeck.SetInputFilePath", "modulename": "hyperx.api", "qualname": "Rundeck.SetInputFilePath", "kind": "function", "doc": "<p>The rundeck's input file path will point to the provided file path</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>filepath</strong>:  The path to the rundeck</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">RundeckUpdateStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Rundeck.SetResultFilePath", "modulename": "hyperx.api", "qualname": "Rundeck.SetResultFilePath", "kind": "function", "doc": "<p>The rundeck's result file path will point to the provided file path</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>filepath</strong>:  The path to the result file</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">RundeckUpdateStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.RundeckPathPair", "modulename": "hyperx.api", "qualname": "RundeckPathPair", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "hyperx.api.RundeckPathPair.__init__", "modulename": "hyperx.api", "qualname": "RundeckPathPair.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">rundeckPathPair</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">RundeckPathPair</span></span>)</span>"}, {"fullname": "hyperx.api.RundeckPathPair.InputFilePath", "modulename": "hyperx.api", "qualname": "RundeckPathPair.InputFilePath", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.RundeckPathPair.ResultFilePath", "modulename": "hyperx.api", "qualname": "RundeckPathPair.ResultFilePath", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.BeamLoads", "modulename": "hyperx.api", "qualname": "BeamLoads", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "hyperx.api.BeamLoads.__init__", "modulename": "hyperx.api", "qualname": "BeamLoads.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">beamLoads</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">BeamLoads</span></span>)</span>"}, {"fullname": "hyperx.api.BeamLoads.AxialForce", "modulename": "hyperx.api", "qualname": "BeamLoads.AxialForce", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.BeamLoads.MomentX", "modulename": "hyperx.api", "qualname": "BeamLoads.MomentX", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.BeamLoads.MomentY", "modulename": "hyperx.api", "qualname": "BeamLoads.MomentY", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.BeamLoads.ShearX", "modulename": "hyperx.api", "qualname": "BeamLoads.ShearX", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.BeamLoads.ShearY", "modulename": "hyperx.api", "qualname": "BeamLoads.ShearY", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.BeamLoads.Torque", "modulename": "hyperx.api", "qualname": "BeamLoads.Torque", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.SectionCut", "modulename": "hyperx.api", "qualname": "SectionCut", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "IdNameEntity"}, {"fullname": "hyperx.api.SectionCut.__init__", "modulename": "hyperx.api", "qualname": "SectionCut.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">sectionCut</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">SectionCut</span></span>)</span>"}, {"fullname": "hyperx.api.SectionCut.ReferencePoint", "modulename": "hyperx.api", "qualname": "SectionCut.ReferencePoint", "kind": "variable", "doc": "<p>Centroid vs Origin</p>\n", "annotation": ": hyperx.api.types.SectionCutPropertyLocation"}, {"fullname": "hyperx.api.SectionCut.HorizontalVector", "modulename": "hyperx.api", "qualname": "SectionCut.HorizontalVector", "kind": "variable", "doc": "<p>Represents a readonly 3D vector.</p>\n", "annotation": ": hyperx.api.Vector3d"}, {"fullname": "hyperx.api.SectionCut.NormalVector", "modulename": "hyperx.api", "qualname": "SectionCut.NormalVector", "kind": "variable", "doc": "<p>Represents a readonly 3D vector.</p>\n", "annotation": ": hyperx.api.Vector3d"}, {"fullname": "hyperx.api.SectionCut.OriginVector", "modulename": "hyperx.api", "qualname": "SectionCut.OriginVector", "kind": "variable", "doc": "<p>Represents a readonly 3D vector.</p>\n", "annotation": ": hyperx.api.Vector3d"}, {"fullname": "hyperx.api.SectionCut.VerticalVector", "modulename": "hyperx.api", "qualname": "SectionCut.VerticalVector", "kind": "variable", "doc": "<p>Represents a readonly 3D vector.</p>\n", "annotation": ": hyperx.api.Vector3d"}, {"fullname": "hyperx.api.SectionCut.MaxAngleBound", "modulename": "hyperx.api", "qualname": "SectionCut.MaxAngleBound", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.SectionCut.MinAngleBound", "modulename": "hyperx.api", "qualname": "SectionCut.MinAngleBound", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.SectionCut.MinStiffnessEihh", "modulename": "hyperx.api", "qualname": "SectionCut.MinStiffnessEihh", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.SectionCut.MinStiffnessEivv", "modulename": "hyperx.api", "qualname": "SectionCut.MinStiffnessEivv", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.SectionCut.MinStiffnessGJ", "modulename": "hyperx.api", "qualname": "SectionCut.MinStiffnessGJ", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.SectionCut.ZoneStiffnessDistribution", "modulename": "hyperx.api", "qualname": "SectionCut.ZoneStiffnessDistribution", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.SectionCut.CN_hmax", "modulename": "hyperx.api", "qualname": "SectionCut.CN_hmax", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.SectionCut.CN_hmin", "modulename": "hyperx.api", "qualname": "SectionCut.CN_hmin", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.SectionCut.CN_vmax", "modulename": "hyperx.api", "qualname": "SectionCut.CN_vmax", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.SectionCut.CN_vmin", "modulename": "hyperx.api", "qualname": "SectionCut.CN_vmin", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.SectionCut.CQ_hmax", "modulename": "hyperx.api", "qualname": "SectionCut.CQ_hmax", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.SectionCut.CQ_hmin", "modulename": "hyperx.api", "qualname": "SectionCut.CQ_hmin", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.SectionCut.CQ_vmax", "modulename": "hyperx.api", "qualname": "SectionCut.CQ_vmax", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.SectionCut.CQ_vmin", "modulename": "hyperx.api", "qualname": "SectionCut.CQ_vmin", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.SectionCut.CG", "modulename": "hyperx.api", "qualname": "SectionCut.CG", "kind": "variable", "doc": "<p>Represents a readonly 2D vector.</p>\n", "annotation": ": hyperx.api.Vector2d"}, {"fullname": "hyperx.api.SectionCut.CN", "modulename": "hyperx.api", "qualname": "SectionCut.CN", "kind": "variable", "doc": "<p>Represents a readonly 2D vector.</p>\n", "annotation": ": hyperx.api.Vector2d"}, {"fullname": "hyperx.api.SectionCut.CQ", "modulename": "hyperx.api", "qualname": "SectionCut.CQ", "kind": "variable", "doc": "<p>Represents a readonly 2D vector.</p>\n", "annotation": ": hyperx.api.Vector2d"}, {"fullname": "hyperx.api.SectionCut.EnclosedArea", "modulename": "hyperx.api", "qualname": "SectionCut.EnclosedArea", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.SectionCut.NumberOfCells", "modulename": "hyperx.api", "qualname": "SectionCut.NumberOfCells", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.SectionCut.EIhh", "modulename": "hyperx.api", "qualname": "SectionCut.EIhh", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.SectionCut.EIhv", "modulename": "hyperx.api", "qualname": "SectionCut.EIhv", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.SectionCut.EIvv", "modulename": "hyperx.api", "qualname": "SectionCut.EIvv", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.SectionCut.GJ", "modulename": "hyperx.api", "qualname": "SectionCut.GJ", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.SectionCut.EA", "modulename": "hyperx.api", "qualname": "SectionCut.EA", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.SectionCut.EImax", "modulename": "hyperx.api", "qualname": "SectionCut.EImax", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.SectionCut.EImin", "modulename": "hyperx.api", "qualname": "SectionCut.EImin", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.SectionCut.PrincipalAngle", "modulename": "hyperx.api", "qualname": "SectionCut.PrincipalAngle", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.SectionCut.Elements", "modulename": "hyperx.api", "qualname": "SectionCut.Elements", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.ElementCol"}, {"fullname": "hyperx.api.SectionCut.PlateElements", "modulename": "hyperx.api", "qualname": "SectionCut.PlateElements", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.ElementCol"}, {"fullname": "hyperx.api.SectionCut.BeamElements", "modulename": "hyperx.api", "qualname": "SectionCut.BeamElements", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.ElementCol"}, {"fullname": "hyperx.api.SectionCut.AlignToHorizontalPrincipalAxes", "modulename": "hyperx.api", "qualname": "SectionCut.AlignToHorizontalPrincipalAxes", "kind": "function", "doc": "<p>Set this Section Cut's horizontal vector to be equal to its principal axis horizontal vector.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.SectionCut.AlignToVerticalPrincipalAxes", "modulename": "hyperx.api", "qualname": "SectionCut.AlignToVerticalPrincipalAxes", "kind": "function", "doc": "<p>Set this Section Cut's horizontal vector to be equal to its principal axis vertical vector.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.SectionCut.SetHorizontalVector", "modulename": "hyperx.api", "qualname": "SectionCut.SetHorizontalVector", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">vector</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Vector3d</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.SectionCut.SetNormalVector", "modulename": "hyperx.api", "qualname": "SectionCut.SetNormalVector", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">vector</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Vector3d</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.SectionCut.SetOrigin", "modulename": "hyperx.api", "qualname": "SectionCut.SetOrigin", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">vector</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Vector3d</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.SectionCut.GetBeamLoads", "modulename": "hyperx.api", "qualname": "SectionCut.GetBeamLoads", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">loadCaseId</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">factor</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">LoadSubCaseFactor</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">BeamLoads</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.SectionCut.InclinationAngle", "modulename": "hyperx.api", "qualname": "SectionCut.InclinationAngle", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">loadCaseId</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">factor</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">LoadSubCaseFactor</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.SectionCut.HorizontalIntercept", "modulename": "hyperx.api", "qualname": "SectionCut.HorizontalIntercept", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">loadCaseId</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">factor</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">LoadSubCaseFactor</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.SectionCut.VerticalIntercept", "modulename": "hyperx.api", "qualname": "SectionCut.VerticalIntercept", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">loadCaseId</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">factor</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">LoadSubCaseFactor</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.SectionCut.SetElements", "modulename": "hyperx.api", "qualname": "SectionCut.SetElements", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">elements</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.SectionCut.SetElementsByIntersection", "modulename": "hyperx.api", "qualname": "SectionCut.SetElementsByIntersection", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Set", "modulename": "hyperx.api", "qualname": "Set", "kind": "class", "doc": "<p>Represents an entity that contains a collection of Zones and Joints.</p>\n", "bases": "ZoneJointContainer"}, {"fullname": "hyperx.api.Set.__init__", "modulename": "hyperx.api", "qualname": "Set.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">set</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">Set</span></span>)</span>"}, {"fullname": "hyperx.api.Set.Joints", "modulename": "hyperx.api", "qualname": "Set.Joints", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.JointCol"}, {"fullname": "hyperx.api.Set.PanelSegments", "modulename": "hyperx.api", "qualname": "Set.PanelSegments", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.PanelSegmentCol"}, {"fullname": "hyperx.api.Set.Zones", "modulename": "hyperx.api", "qualname": "Set.Zones", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.ZoneCol"}, {"fullname": "hyperx.api.Set.AddJoint", "modulename": "hyperx.api", "qualname": "Set.AddJoint", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Set.AddPanelSegment", "modulename": "hyperx.api", "qualname": "Set.AddPanelSegment", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Set.AddZones", "modulename": "hyperx.api", "qualname": "Set.AddZones", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Set.RemoveJoints", "modulename": "hyperx.api", "qualname": "Set.RemoveJoints", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Set.RemovePanelSegments", "modulename": "hyperx.api", "qualname": "Set.RemovePanelSegments", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Set.RemoveZones", "modulename": "hyperx.api", "qualname": "Set.RemoveZones", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Set.RemoveJoint", "modulename": "hyperx.api", "qualname": "Set.RemoveJoint", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Set.AddZone", "modulename": "hyperx.api", "qualname": "Set.AddZone", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Set.RemoveZone", "modulename": "hyperx.api", "qualname": "Set.RemoveZone", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Set.RemovePanelSegment", "modulename": "hyperx.api", "qualname": "Set.RemovePanelSegment", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.PlyCol", "modulename": "hyperx.api", "qualname": "PlyCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdNameEntityCol[hyperx.api.Ply]"}, {"fullname": "hyperx.api.PlyCol.__init__", "modulename": "hyperx.api", "qualname": "PlyCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">plyCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">PlyCol</span></span>)</span>"}, {"fullname": "hyperx.api.PlyCol.PlyColList", "modulename": "hyperx.api", "qualname": "PlyCol.PlyColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.Ply]"}, {"fullname": "hyperx.api.PlyCol.Delete", "modulename": "hyperx.api", "qualname": "PlyCol.Delete", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.PlyCol.DeleteAll", "modulename": "hyperx.api", "qualname": "PlyCol.DeleteAll", "kind": "function", "doc": "<p>Delete all plies in the collection.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.PlyCol.ExportToCSV", "modulename": "hyperx.api", "qualname": "PlyCol.ExportToCSV", "kind": "function", "doc": "<p>This feature is in development and may not work as expected. Use at your own risk!</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.PlyCol.ImportCSV", "modulename": "hyperx.api", "qualname": "PlyCol.ImportCSV", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.PlyCol.Get", "modulename": "hyperx.api", "qualname": "PlyCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Ply</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Structure", "modulename": "hyperx.api", "qualname": "Structure", "kind": "class", "doc": "<p>Represents an entity that contains a collection of Zones and Joints.</p>\n", "bases": "ZoneJointContainer"}, {"fullname": "hyperx.api.Structure.__init__", "modulename": "hyperx.api", "qualname": "Structure.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">structure</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">Structure</span></span>)</span>"}, {"fullname": "hyperx.api.Structure.Plies", "modulename": "hyperx.api", "qualname": "Structure.Plies", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.PlyCol"}, {"fullname": "hyperx.api.Structure.Joints", "modulename": "hyperx.api", "qualname": "Structure.Joints", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.JointCol"}, {"fullname": "hyperx.api.Structure.PanelSegments", "modulename": "hyperx.api", "qualname": "Structure.PanelSegments", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.PanelSegmentCol"}, {"fullname": "hyperx.api.Structure.Zones", "modulename": "hyperx.api", "qualname": "Structure.Zones", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.ZoneCol"}, {"fullname": "hyperx.api.Structure.ExportVCP", "modulename": "hyperx.api", "qualname": "Structure.ExportVCP", "kind": "function", "doc": "<p>Export VCP with this structure's element centroids.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fileName</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Structure.AddElements", "modulename": "hyperx.api", "qualname": "Structure.AddElements", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">elementIds</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Structure.AddJoint", "modulename": "hyperx.api", "qualname": "Structure.AddJoint", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Structure.AddPanelSegment", "modulename": "hyperx.api", "qualname": "Structure.AddPanelSegment", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Structure.AddPfemProperties", "modulename": "hyperx.api", "qualname": "Structure.AddPfemProperties", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">pfemPropertyIds</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Structure.AddZones", "modulename": "hyperx.api", "qualname": "Structure.AddZones", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Structure.CreateZone", "modulename": "hyperx.api", "qualname": "Structure.CreateZone", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">elementIds</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Zone</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Structure.CreatePanelSegment", "modulename": "hyperx.api", "qualname": "Structure.CreatePanelSegment", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">discreteTechnique</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">DiscreteTechnique</span>,</span><span class=\"param\">\t<span class=\"n\">discreteElementLkp</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">DiscreteDefinitionType</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">PanelSegment</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Structure.Remove", "modulename": "hyperx.api", "qualname": "Structure.Remove", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">item2</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">item3</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Structure.RemoveJoints", "modulename": "hyperx.api", "qualname": "Structure.RemoveJoints", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Structure.RemovePanelSegments", "modulename": "hyperx.api", "qualname": "Structure.RemovePanelSegments", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Structure.RemoveZones", "modulename": "hyperx.api", "qualname": "Structure.RemoveZones", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Structure.RemoveJoint", "modulename": "hyperx.api", "qualname": "Structure.RemoveJoint", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Structure.AddZone", "modulename": "hyperx.api", "qualname": "Structure.AddZone", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Structure.RemoveZone", "modulename": "hyperx.api", "qualname": "Structure.RemoveZone", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Structure.RemovePanelSegment", "modulename": "hyperx.api", "qualname": "Structure.RemovePanelSegment", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.AnalysisPropertyCol", "modulename": "hyperx.api", "qualname": "AnalysisPropertyCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdNameEntityCol[hyperx.api.AnalysisProperty]"}, {"fullname": "hyperx.api.AnalysisPropertyCol.__init__", "modulename": "hyperx.api", "qualname": "AnalysisPropertyCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">analysisPropertyCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">AnalysisPropertyCol</span></span>)</span>"}, {"fullname": "hyperx.api.AnalysisPropertyCol.AnalysisPropertyColList", "modulename": "hyperx.api", "qualname": "AnalysisPropertyCol.AnalysisPropertyColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.AnalysisProperty]"}, {"fullname": "hyperx.api.AnalysisPropertyCol.CreateAnalysisProperty", "modulename": "hyperx.api", "qualname": "AnalysisPropertyCol.CreateAnalysisProperty", "kind": "function", "doc": "<p>Create an AnalysisProperty.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">FamilyCategory</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">AnalysisProperty</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.AnalysisPropertyCol.DeleteAnalysisProperty", "modulename": "hyperx.api", "qualname": "AnalysisPropertyCol.DeleteAnalysisProperty", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.AnalysisPropertyCol.Get", "modulename": "hyperx.api", "qualname": "AnalysisPropertyCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">AnalysisProperty</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DesignPropertyCol", "modulename": "hyperx.api", "qualname": "DesignPropertyCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdNameEntityCol[hyperx.api.DesignProperty]"}, {"fullname": "hyperx.api.DesignPropertyCol.__init__", "modulename": "hyperx.api", "qualname": "DesignPropertyCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">designPropertyCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">DesignPropertyCol</span></span>)</span>"}, {"fullname": "hyperx.api.DesignPropertyCol.DesignPropertyColList", "modulename": "hyperx.api", "qualname": "DesignPropertyCol.DesignPropertyColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.DesignProperty]"}, {"fullname": "hyperx.api.DesignPropertyCol.CreateDesignProperty", "modulename": "hyperx.api", "qualname": "DesignPropertyCol.CreateDesignProperty", "kind": "function", "doc": "<p>Create a DesignProperty.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">familyConcept</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">FamilyConceptUID</span>,</span><span class=\"param\">\t<span class=\"n\">materialMode</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">MaterialMode</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">MaterialMode</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">DesignProperty</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DesignPropertyCol.Get", "modulename": "hyperx.api", "qualname": "DesignPropertyCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">DesignProperty</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyCol", "modulename": "hyperx.api", "qualname": "LoadPropertyCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdNameEntityCol[hyperx.api.LoadProperty]"}, {"fullname": "hyperx.api.LoadPropertyCol.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">loadPropertyCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyCol</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyCol.LoadPropertyColList", "modulename": "hyperx.api", "qualname": "LoadPropertyCol.LoadPropertyColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.LoadProperty]"}, {"fullname": "hyperx.api.LoadPropertyCol.CreateLoadProperty", "modulename": "hyperx.api", "qualname": "LoadPropertyCol.CreateLoadProperty", "kind": "function", "doc": "<p>Create a new load property.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">loadPropertyType</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyType</span>,</span><span class=\"param\">\t<span class=\"n\">category</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">FamilyCategory</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">LoadProperty</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyCol.DeleteLoadProperty", "modulename": "hyperx.api", "qualname": "LoadPropertyCol.DeleteLoadProperty", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyCol.Get", "modulename": "hyperx.api", "qualname": "LoadPropertyCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">LoadProperty</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DesignLoadCol", "modulename": "hyperx.api", "qualname": "DesignLoadCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdNameEntityCol[hyperx.api.DesignLoad]"}, {"fullname": "hyperx.api.DesignLoadCol.__init__", "modulename": "hyperx.api", "qualname": "DesignLoadCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">designLoadCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">DesignLoadCol</span></span>)</span>"}, {"fullname": "hyperx.api.DesignLoadCol.DesignLoadColList", "modulename": "hyperx.api", "qualname": "DesignLoadCol.DesignLoadColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.DesignLoad]"}, {"fullname": "hyperx.api.DesignLoadCol.Get", "modulename": "hyperx.api", "qualname": "DesignLoadCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">DesignLoad</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DiscreteFieldCol", "modulename": "hyperx.api", "qualname": "DiscreteFieldCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdNameEntityCol[hyperx.api.DiscreteField]"}, {"fullname": "hyperx.api.DiscreteFieldCol.__init__", "modulename": "hyperx.api", "qualname": "DiscreteFieldCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">discreteFieldCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">DiscreteFieldCol</span></span>)</span>"}, {"fullname": "hyperx.api.DiscreteFieldCol.DiscreteFieldColList", "modulename": "hyperx.api", "qualname": "DiscreteFieldCol.DiscreteFieldColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.DiscreteField]"}, {"fullname": "hyperx.api.DiscreteFieldCol.Create", "modulename": "hyperx.api", "qualname": "DiscreteFieldCol.Create", "kind": "function", "doc": "<p>Create a new DiscreteField.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">entityType</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">DiscreteFieldPhysicalEntityType</span>,</span><span class=\"param\">\t<span class=\"n\">dataType</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">DiscreteFieldDataType</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">DiscreteField</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DiscreteFieldCol.CreateFromVCP", "modulename": "hyperx.api", "qualname": "DiscreteFieldCol.CreateFromVCP", "kind": "function", "doc": "<p>Create a list of DiscreteFields from VCP.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">DiscreteField</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DiscreteFieldCol.Delete", "modulename": "hyperx.api", "qualname": "DiscreteFieldCol.Delete", "kind": "function", "doc": "<p>In the event of getting a CollectionModificationStatus.EntityMissingRemovalFailure,\nnote that the discrete field is associated with a ply, and therefore cannot be deleted.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DiscreteFieldCol.CreateByPointMapToElements", "modulename": "hyperx.api", "qualname": "DiscreteFieldCol.CreateByPointMapToElements", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">elementIds</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">discreteFieldIds</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tolerance</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">DiscreteField</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DiscreteFieldCol.Get", "modulename": "hyperx.api", "qualname": "DiscreteFieldCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">DiscreteField</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ZoneJointContainerCol", "modulename": "hyperx.api", "qualname": "ZoneJointContainerCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "IdNameEntityCol, typing.Generic[~T]"}, {"fullname": "hyperx.api.ZoneJointContainerCol.ZoneJointContainerColList", "modulename": "hyperx.api", "qualname": "ZoneJointContainerCol.ZoneJointContainerColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[~T]"}, {"fullname": "hyperx.api.ZoneJointContainerCol.Create", "modulename": "hyperx.api", "qualname": "ZoneJointContainerCol.Create", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">T</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.RundeckCol", "modulename": "hyperx.api", "qualname": "RundeckCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdEntityCol[hyperx.api.Rundeck]"}, {"fullname": "hyperx.api.RundeckCol.__init__", "modulename": "hyperx.api", "qualname": "RundeckCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">rundeckCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">RundeckCol</span></span>)</span>"}, {"fullname": "hyperx.api.RundeckCol.RundeckColList", "modulename": "hyperx.api", "qualname": "RundeckCol.RundeckColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.Rundeck]"}, {"fullname": "hyperx.api.RundeckCol.AddRundeck", "modulename": "hyperx.api", "qualname": "RundeckCol.AddRundeck", "kind": "function", "doc": "<p>The specified rundeck at the given filepath will be added to the project's\ncollection of rundecks\n    :param inputPath: The path to the rundeck\n    :param resultPath: The path to the rundeck's corresponding result file</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">inputPath</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">resultPath</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Rundeck</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.RundeckCol.ReassignPrimary", "modulename": "hyperx.api", "qualname": "RundeckCol.ReassignPrimary", "kind": "function", "doc": "<p>The specified rundeck will be updated to become the new primary rundeck.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">RundeckUpdateStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.RundeckCol.RemoveRundeck", "modulename": "hyperx.api", "qualname": "RundeckCol.RemoveRundeck", "kind": "function", "doc": "<p>The specified rundeck at the given filepath will be removed from the project's\ncollection of rundecks\n    :param id: The id of the rundeck to remove</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">RundeckRemoveStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.RundeckCol.UpdateAllRundecks", "modulename": "hyperx.api", "qualname": "RundeckCol.UpdateAllRundecks", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">newPaths</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">RundeckPathPair</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">RundeckBulkUpdateStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.RundeckCol.GetRundeckPathSetters", "modulename": "hyperx.api", "qualname": "RundeckCol.GetRundeckPathSetters", "kind": "function", "doc": "<p>Get RundeckPathSetters to be edited and input to UpdateAllRundecks.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">RundeckPathPair</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.RundeckCol.ReplaceStringInAllPaths", "modulename": "hyperx.api", "qualname": "RundeckCol.ReplaceStringInAllPaths", "kind": "function", "doc": "<p>Replace a given string with a new string in every rundeck path. This is useful when pointing to rundecks of the same name in a new directory.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">stringToReplace</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">newString</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">RundeckBulkUpdateStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.SectionCutCol", "modulename": "hyperx.api", "qualname": "SectionCutCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdNameEntityCol[hyperx.api.SectionCut]"}, {"fullname": "hyperx.api.SectionCutCol.__init__", "modulename": "hyperx.api", "qualname": "SectionCutCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">sectionCutCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">SectionCutCol</span></span>)</span>"}, {"fullname": "hyperx.api.SectionCutCol.SectionCutColList", "modulename": "hyperx.api", "qualname": "SectionCutCol.SectionCutColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.SectionCut]"}, {"fullname": "hyperx.api.SectionCutCol.Create", "modulename": "hyperx.api", "qualname": "SectionCutCol.Create", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">origin</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Vector3d</span>,</span><span class=\"param\">\t<span class=\"n\">normal</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Vector3d</span>,</span><span class=\"param\">\t<span class=\"n\">horizontal</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Vector3d</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">SectionCut</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.SectionCutCol.Delete", "modulename": "hyperx.api", "qualname": "SectionCutCol.Delete", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">CollectionModificationStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.SectionCutCol.Get", "modulename": "hyperx.api", "qualname": "SectionCutCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">SectionCut</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.SetCol", "modulename": "hyperx.api", "qualname": "SetCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.ZoneJointContainerCol[hyperx.api.Set]"}, {"fullname": "hyperx.api.SetCol.__init__", "modulename": "hyperx.api", "qualname": "SetCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">setCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">SetCol</span></span>)</span>"}, {"fullname": "hyperx.api.SetCol.SetColList", "modulename": "hyperx.api", "qualname": "SetCol.SetColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.Set]"}, {"fullname": "hyperx.api.SetCol.Create", "modulename": "hyperx.api", "qualname": "SetCol.Create", "kind": "function", "doc": "<p>Attempt to create a new Set.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  The name of the set to be created.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Set</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.SetCol.Get", "modulename": "hyperx.api", "qualname": "SetCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Set</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.StructureCol", "modulename": "hyperx.api", "qualname": "StructureCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.ZoneJointContainerCol[hyperx.api.Structure]"}, {"fullname": "hyperx.api.StructureCol.__init__", "modulename": "hyperx.api", "qualname": "StructureCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">structureCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">StructureCol</span></span>)</span>"}, {"fullname": "hyperx.api.StructureCol.StructureColList", "modulename": "hyperx.api", "qualname": "StructureCol.StructureColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.Structure]"}, {"fullname": "hyperx.api.StructureCol.Create", "modulename": "hyperx.api", "qualname": "StructureCol.Create", "kind": "function", "doc": "<p>Attempt to create a new structure.\nIf the specified name is already used, it will be deconflicted.\n    :param name: The name of the structure to be created.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Structure</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.StructureCol.DeleteStructure", "modulename": "hyperx.api", "qualname": "StructureCol.DeleteStructure", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.StructureCol.Get", "modulename": "hyperx.api", "qualname": "StructureCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Structure</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Project", "modulename": "hyperx.api", "qualname": "Project", "kind": "class", "doc": "<p>Represents a HyperX project within a database.</p>\n"}, {"fullname": "hyperx.api.Project.__init__", "modulename": "hyperx.api", "qualname": "Project.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">Project</span></span>)</span>"}, {"fullname": "hyperx.api.Project.HyperFea", "modulename": "hyperx.api", "qualname": "Project.HyperFea", "kind": "variable", "doc": "<p></p>\n", "annotation": ": &lt;property object at 0x0000014E0FEFE930&gt;"}, {"fullname": "hyperx.api.Project.WorkingFolder", "modulename": "hyperx.api", "qualname": "Project.WorkingFolder", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Project.FemDataSet", "modulename": "hyperx.api", "qualname": "Project.FemDataSet", "kind": "variable", "doc": "<p></p>\n", "annotation": ": &lt;property object at 0x0000014E0FEFDB20&gt;"}, {"fullname": "hyperx.api.Project.Beams", "modulename": "hyperx.api", "qualname": "Project.Beams", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.ZoneCol"}, {"fullname": "hyperx.api.Project.Id", "modulename": "hyperx.api", "qualname": "Project.Id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.Project.Joints", "modulename": "hyperx.api", "qualname": "Project.Joints", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.JointCol"}, {"fullname": "hyperx.api.Project.Name", "modulename": "hyperx.api", "qualname": "Project.Name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Project.Panels", "modulename": "hyperx.api", "qualname": "Project.Panels", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.ZoneCol"}, {"fullname": "hyperx.api.Project.Rundecks", "modulename": "hyperx.api", "qualname": "Project.Rundecks", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.RundeckCol"}, {"fullname": "hyperx.api.Project.Sets", "modulename": "hyperx.api", "qualname": "Project.Sets", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.SetCol"}, {"fullname": "hyperx.api.Project.Structures", "modulename": "hyperx.api", "qualname": "Project.Structures", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.StructureCol"}, {"fullname": "hyperx.api.Project.Zones", "modulename": "hyperx.api", "qualname": "Project.Zones", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.ZoneCol"}, {"fullname": "hyperx.api.Project.PanelSegments", "modulename": "hyperx.api", "qualname": "Project.PanelSegments", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.PanelSegmentCol"}, {"fullname": "hyperx.api.Project.SectionCuts", "modulename": "hyperx.api", "qualname": "Project.SectionCuts", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.SectionCutCol"}, {"fullname": "hyperx.api.Project.DesignLoads", "modulename": "hyperx.api", "qualname": "Project.DesignLoads", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.DesignLoadCol"}, {"fullname": "hyperx.api.Project.DiscreteFieldTables", "modulename": "hyperx.api", "qualname": "Project.DiscreteFieldTables", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.DiscreteFieldCol"}, {"fullname": "hyperx.api.Project.AnalysisProperties", "modulename": "hyperx.api", "qualname": "Project.AnalysisProperties", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.AnalysisPropertyCol"}, {"fullname": "hyperx.api.Project.DesignProperties", "modulename": "hyperx.api", "qualname": "Project.DesignProperties", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.DesignPropertyCol"}, {"fullname": "hyperx.api.Project.LoadProperties", "modulename": "hyperx.api", "qualname": "Project.LoadProperties", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.LoadPropertyCol"}, {"fullname": "hyperx.api.Project.FemFormat", "modulename": "hyperx.api", "qualname": "Project.FemFormat", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.ProjectModelFormat"}, {"fullname": "hyperx.api.Project.Upload", "modulename": "hyperx.api", "qualname": "Project.Upload", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">uploadSetName</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">company</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">program</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">tags</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">notes</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">zoneIds</span><span class=\"p\">:</span> <span class=\"nb\">set</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">jointIds</span><span class=\"p\">:</span> <span class=\"nb\">set</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Project.GetDashboardCompanies", "modulename": "hyperx.api", "qualname": "Project.GetDashboardCompanies", "kind": "function", "doc": "<p>This method fetches an array of Dashboard company names that are available to the user who is currently logged in. The URL and authentication token are taken from the last\nDashboard login made through HyperX.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Project.GetDashboardPrograms", "modulename": "hyperx.api", "qualname": "Project.GetDashboardPrograms", "kind": "function", "doc": "<p>This method fetches an array of Dashboard program names that are available to the user who is currently logged in. The URL and authentication token are taken from the last\nDashboard login made through HyperX.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">companyName</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Project.GetDashboardTags", "modulename": "hyperx.api", "qualname": "Project.GetDashboardTags", "kind": "function", "doc": "<p>This method fetches an array of Dashboard tags that are available to the user who is currently logged in. The URL and authentication token are taken from the last\nDashboard login made through HyperX.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">companyName</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Project.Dispose", "modulename": "hyperx.api", "qualname": "Project.Dispose", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Project.ImportFem", "modulename": "hyperx.api", "qualname": "Project.ImportFem", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Project.ImportFeaResults", "modulename": "hyperx.api", "qualname": "Project.ImportFeaResults", "kind": "function", "doc": "<p>Manually import design loads.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>alwaysImport</strong>:  If true, loads are imported even if loads have already previously been imported.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">alwaysImport</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Project.SetFemFormat", "modulename": "hyperx.api", "qualname": "Project.SetFemFormat", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">femFormat</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">ProjectModelFormat</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Project.SetFemUnits", "modulename": "hyperx.api", "qualname": "Project.SetFemUnits", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">femForceId</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">DbForceUnit</span>,</span><span class=\"param\">\t<span class=\"n\">femLengthId</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">DbLengthUnit</span>,</span><span class=\"param\">\t<span class=\"n\">femMassId</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">DbMassUnit</span>,</span><span class=\"param\">\t<span class=\"n\">femTemperatureId</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">DbTemperatureUnit</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">SetUnitsStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Project.SizeJoints", "modulename": "hyperx.api", "qualname": "Project.SizeJoints", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">joints</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Joint</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">SimpleStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Project.GetJointsWithoutResults", "modulename": "hyperx.api", "qualname": "Project.GetJointsWithoutResults", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">joints</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Joint</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">set</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Project.AnalyzeZones", "modulename": "hyperx.api", "qualname": "Project.AnalyzeZones", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">SimpleStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Project.SizeZones", "modulename": "hyperx.api", "qualname": "Project.SizeZones", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">SimpleStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Project.CreateNonFeaZone", "modulename": "hyperx.api", "qualname": "Project.CreateNonFeaZone", "kind": "function", "doc": "<p>Create a non-FEA zone by name and category.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">category</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">FamilyCategory</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Zone</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Project.ReturnToUnusedFem", "modulename": "hyperx.api", "qualname": "Project.ReturnToUnusedFem", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">zoneNumbers</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">jointIds</span><span class=\"p\">:</span> <span class=\"nb\">set</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Project.UnimportFemAsync", "modulename": "hyperx.api", "qualname": "Project.UnimportFemAsync", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"n\">Threading</span><span class=\"o\">.</span><span class=\"n\">Tasks</span><span class=\"o\">.</span><span class=\"n\">Task</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Project.ExportFem", "modulename": "hyperx.api", "qualname": "Project.ExportFem", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">destinationFolder</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Project.ImportCad", "modulename": "hyperx.api", "qualname": "Project.ImportCad", "kind": "function", "doc": "<p>Import CAD from a file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filePath</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Project.ExportCad", "modulename": "hyperx.api", "qualname": "Project.ExportCad", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">item2</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Project.RegeneratePfem", "modulename": "hyperx.api", "qualname": "Project.RegeneratePfem", "kind": "function", "doc": "<p>Regenerates and displays the preview FEM. If running a script outside of the Script Runner,\ndo not call this method</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ProjectInfo", "modulename": "hyperx.api", "qualname": "ProjectInfo", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "IdNameEntityRenameable"}, {"fullname": "hyperx.api.ProjectInfo.__init__", "modulename": "hyperx.api", "qualname": "ProjectInfo.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">projectInfo</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">ProjectInfo</span></span>)</span>"}, {"fullname": "hyperx.api.FailureModeCategoryCol", "modulename": "hyperx.api", "qualname": "FailureModeCategoryCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdNameEntityCol[hyperx.api.FailureModeCategory]"}, {"fullname": "hyperx.api.FailureModeCategoryCol.__init__", "modulename": "hyperx.api", "qualname": "FailureModeCategoryCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">failureModeCategoryCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">FailureModeCategoryCol</span></span>)</span>"}, {"fullname": "hyperx.api.FailureModeCategoryCol.FailureModeCategoryColList", "modulename": "hyperx.api", "qualname": "FailureModeCategoryCol.FailureModeCategoryColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.FailureModeCategory]"}, {"fullname": "hyperx.api.FailureModeCategoryCol.Get", "modulename": "hyperx.api", "qualname": "FailureModeCategoryCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">FailureModeCategory</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.FoamCol", "modulename": "hyperx.api", "qualname": "FoamCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "typing.Generic[~T]"}, {"fullname": "hyperx.api.FoamCol.__init__", "modulename": "hyperx.api", "qualname": "FoamCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">foamCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">FoamCol</span></span>)</span>"}, {"fullname": "hyperx.api.FoamCol.FoamColList", "modulename": "hyperx.api", "qualname": "FoamCol.FoamColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.Foam]"}, {"fullname": "hyperx.api.FoamCol.Count", "modulename": "hyperx.api", "qualname": "FoamCol.Count", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.FoamCol.Get", "modulename": "hyperx.api", "qualname": "FoamCol.Get", "kind": "function", "doc": "<p>Look up an Foam material by its name.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">materialName</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Foam</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.FoamCol.Contains", "modulename": "hyperx.api", "qualname": "FoamCol.Contains", "kind": "function", "doc": "<p>Check if an foam material exists in this collection.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">materialName</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.FoamCol.Create", "modulename": "hyperx.api", "qualname": "FoamCol.Create", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">materialFamilyName</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">density</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">newMaterialName</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">femId</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Foam</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.FoamCol.Copy", "modulename": "hyperx.api", "qualname": "FoamCol.Copy", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">fmToCopyName</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">newMaterialName</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">femId</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Foam</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.FoamCol.Delete", "modulename": "hyperx.api", "qualname": "FoamCol.Delete", "kind": "function", "doc": "<p>Delete a foam material by name.\nReturns false if the method the material is not found.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">materialName</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.HoneycombCol", "modulename": "hyperx.api", "qualname": "HoneycombCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "typing.Generic[~T]"}, {"fullname": "hyperx.api.HoneycombCol.__init__", "modulename": "hyperx.api", "qualname": "HoneycombCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">honeycombCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">HoneycombCol</span></span>)</span>"}, {"fullname": "hyperx.api.HoneycombCol.HoneycombColList", "modulename": "hyperx.api", "qualname": "HoneycombCol.HoneycombColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.Honeycomb]"}, {"fullname": "hyperx.api.HoneycombCol.Count", "modulename": "hyperx.api", "qualname": "HoneycombCol.Count", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.HoneycombCol.Get", "modulename": "hyperx.api", "qualname": "HoneycombCol.Get", "kind": "function", "doc": "<p>Look up an Honeycomb material by its name.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">materialName</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Honeycomb</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.HoneycombCol.Contains", "modulename": "hyperx.api", "qualname": "HoneycombCol.Contains", "kind": "function", "doc": "<p>Check if an honeycomb material exists in this collection.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">materialName</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.HoneycombCol.Create", "modulename": "hyperx.api", "qualname": "HoneycombCol.Create", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">materialFamilyName</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">density</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">newMaterialName</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">femId</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Honeycomb</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.HoneycombCol.Copy", "modulename": "hyperx.api", "qualname": "HoneycombCol.Copy", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">honeyToCopyName</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">newMaterialName</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">femId</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Honeycomb</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.HoneycombCol.Delete", "modulename": "hyperx.api", "qualname": "HoneycombCol.Delete", "kind": "function", "doc": "<p>Delete a honeycomb material by name.\nReturns false if the method the material is not found.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">materialName</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.IsotropicCol", "modulename": "hyperx.api", "qualname": "IsotropicCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "typing.Generic[~T]"}, {"fullname": "hyperx.api.IsotropicCol.__init__", "modulename": "hyperx.api", "qualname": "IsotropicCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">isotropicCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">IsotropicCol</span></span>)</span>"}, {"fullname": "hyperx.api.IsotropicCol.IsotropicColList", "modulename": "hyperx.api", "qualname": "IsotropicCol.IsotropicColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.Isotropic]"}, {"fullname": "hyperx.api.IsotropicCol.Count", "modulename": "hyperx.api", "qualname": "IsotropicCol.Count", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.IsotropicCol.Get", "modulename": "hyperx.api", "qualname": "IsotropicCol.Get", "kind": "function", "doc": "<p>Look up an Isotropic material by its name.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">materialName</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Isotropic</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.IsotropicCol.Contains", "modulename": "hyperx.api", "qualname": "IsotropicCol.Contains", "kind": "function", "doc": "<p>Check if an isotropic material exists in this collection.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">materialName</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.IsotropicCol.Create", "modulename": "hyperx.api", "qualname": "IsotropicCol.Create", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">materialFamilyName</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">density</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">newMaterialName</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">femId</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Isotropic</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.IsotropicCol.Copy", "modulename": "hyperx.api", "qualname": "IsotropicCol.Copy", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">isoToCopyName</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">newMaterialName</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">femId</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Isotropic</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.IsotropicCol.Delete", "modulename": "hyperx.api", "qualname": "IsotropicCol.Delete", "kind": "function", "doc": "<p>Delete an isotropic material by name.\nReturns false if the method the material is not found.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">materialName</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LaminateFamilyCol", "modulename": "hyperx.api", "qualname": "LaminateFamilyCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdNameEntityCol[hyperx.api.LaminateFamily]"}, {"fullname": "hyperx.api.LaminateFamilyCol.__init__", "modulename": "hyperx.api", "qualname": "LaminateFamilyCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">laminateFamilyCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LaminateFamilyCol</span></span>)</span>"}, {"fullname": "hyperx.api.LaminateFamilyCol.LaminateFamilyColList", "modulename": "hyperx.api", "qualname": "LaminateFamilyCol.LaminateFamilyColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.LaminateFamily]"}, {"fullname": "hyperx.api.LaminateFamilyCol.Get", "modulename": "hyperx.api", "qualname": "LaminateFamilyCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">LaminateFamily</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LaminateCol", "modulename": "hyperx.api", "qualname": "LaminateCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "typing.Generic[~T]"}, {"fullname": "hyperx.api.LaminateCol.__init__", "modulename": "hyperx.api", "qualname": "LaminateCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">laminateCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LaminateCol</span></span>)</span>"}, {"fullname": "hyperx.api.LaminateCol.LaminateColList", "modulename": "hyperx.api", "qualname": "LaminateCol.LaminateColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.Laminate]"}, {"fullname": "hyperx.api.LaminateCol.Count", "modulename": "hyperx.api", "qualname": "LaminateCol.Count", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LaminateCol.Get", "modulename": "hyperx.api", "qualname": "LaminateCol.Get", "kind": "function", "doc": "<p>Look up a Laminate by its name.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">laminateName</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">LaminateBase</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LaminateCol.Contains", "modulename": "hyperx.api", "qualname": "LaminateCol.Contains", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">laminateName</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LaminateCol.CreateLaminate", "modulename": "hyperx.api", "qualname": "LaminateCol.CreateLaminate", "kind": "function", "doc": "<p>Create laminate.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">materialFamily</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">laminateName</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Laminate</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LaminateCol.CreateStiffenerLaminate", "modulename": "hyperx.api", "qualname": "LaminateCol.CreateStiffenerLaminate", "kind": "function", "doc": "<p>Create a stiffener laminate.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">materialFamily</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">stiffenerProfile</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">StiffenerProfile</span>,</span><span class=\"param\">\t<span class=\"n\">laminateName</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">StiffenerLaminate</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LaminateCol.Copy", "modulename": "hyperx.api", "qualname": "LaminateCol.Copy", "kind": "function", "doc": "<p>Copy a laminate material by name.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">laminateToCopyName</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">newLaminateName</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">LaminateBase</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LaminateCol.Delete", "modulename": "hyperx.api", "qualname": "LaminateCol.Delete", "kind": "function", "doc": "<p>Delete a laminate material by name.\nReturns false if the material is not found or removed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LaminateCol.GetLaminate", "modulename": "hyperx.api", "qualname": "LaminateCol.GetLaminate", "kind": "function", "doc": "<p>Get a laminate by name.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Laminate</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LaminateCol.GetStiffenerLaminate", "modulename": "hyperx.api", "qualname": "LaminateCol.GetStiffenerLaminate", "kind": "function", "doc": "<p>Get a stiffener laminate by name.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">StiffenerLaminate</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.OrthotropicCol", "modulename": "hyperx.api", "qualname": "OrthotropicCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "typing.Generic[~T]"}, {"fullname": "hyperx.api.OrthotropicCol.__init__", "modulename": "hyperx.api", "qualname": "OrthotropicCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">orthotropicCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">OrthotropicCol</span></span>)</span>"}, {"fullname": "hyperx.api.OrthotropicCol.OrthotropicColList", "modulename": "hyperx.api", "qualname": "OrthotropicCol.OrthotropicColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.Orthotropic]"}, {"fullname": "hyperx.api.OrthotropicCol.Count", "modulename": "hyperx.api", "qualname": "OrthotropicCol.Count", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.OrthotropicCol.Get", "modulename": "hyperx.api", "qualname": "OrthotropicCol.Get", "kind": "function", "doc": "<p>Look up an Orthotropic material by its name.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">materialName</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Orthotropic</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.OrthotropicCol.Contains", "modulename": "hyperx.api", "qualname": "OrthotropicCol.Contains", "kind": "function", "doc": "<p>Check if an orthotropic material exists in this collection.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">materialName</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.OrthotropicCol.Create", "modulename": "hyperx.api", "qualname": "OrthotropicCol.Create", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">materialFamilyName</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">thickness</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">density</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">newMaterialName</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">femId</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Orthotropic</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.OrthotropicCol.Copy", "modulename": "hyperx.api", "qualname": "OrthotropicCol.Copy", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">orthoToCopyName</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">newMaterialName</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">femId</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Orthotropic</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.OrthotropicCol.Delete", "modulename": "hyperx.api", "qualname": "OrthotropicCol.Delete", "kind": "function", "doc": "<p>Delete an orthotropic material by name.\nReturns false if the method the material is not found.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">materialName</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.PluginPackageCol", "modulename": "hyperx.api", "qualname": "PluginPackageCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdNameEntityCol[hyperx.api.PluginPackage]"}, {"fullname": "hyperx.api.PluginPackageCol.__init__", "modulename": "hyperx.api", "qualname": "PluginPackageCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pluginPackageCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">PluginPackageCol</span></span>)</span>"}, {"fullname": "hyperx.api.PluginPackageCol.PluginPackageColList", "modulename": "hyperx.api", "qualname": "PluginPackageCol.PluginPackageColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.PluginPackage]"}, {"fullname": "hyperx.api.PluginPackageCol.AddPluginPackage", "modulename": "hyperx.api", "qualname": "PluginPackageCol.AddPluginPackage", "kind": "function", "doc": "<p>Add a plugin package by path.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">PluginPackage</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.PluginPackageCol.RemovePluginPackage", "modulename": "hyperx.api", "qualname": "PluginPackageCol.RemovePluginPackage", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.PluginPackageCol.ClearAllPluginPackages", "modulename": "hyperx.api", "qualname": "PluginPackageCol.ClearAllPluginPackages", "kind": "function", "doc": "<p>Clears all packages out of the database</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.PluginPackageCol.GetPluginPackages", "modulename": "hyperx.api", "qualname": "PluginPackageCol.GetPluginPackages", "kind": "function", "doc": "<p>Gets a list of package info\nIncludes name, id, file path, version, description, and modification date</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">PluginPackage</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.PluginPackageCol.Get", "modulename": "hyperx.api", "qualname": "PluginPackageCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">PluginPackage</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ProjectInfoCol", "modulename": "hyperx.api", "qualname": "ProjectInfoCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdNameEntityCol[hyperx.api.ProjectInfo]"}, {"fullname": "hyperx.api.ProjectInfoCol.__init__", "modulename": "hyperx.api", "qualname": "ProjectInfoCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">projectInfoCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">ProjectInfoCol</span></span>)</span>"}, {"fullname": "hyperx.api.ProjectInfoCol.ProjectInfoColList", "modulename": "hyperx.api", "qualname": "ProjectInfoCol.ProjectInfoColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.ProjectInfo]"}, {"fullname": "hyperx.api.ProjectInfoCol.Get", "modulename": "hyperx.api", "qualname": "ProjectInfoCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">ProjectInfo</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Application", "modulename": "hyperx.api", "qualname": "Application", "kind": "class", "doc": "<p>HyperX scripting application.\n    This API is not guaranteed to be thread-safe.\n    Calls into a single application instance or its descendents are not safe to be called concurrently.</p>\n\n<pre><code>However, it is safe enough for integration testing to have multiple\napplication instances with a single process.\n</code></pre>\n"}, {"fullname": "hyperx.api.Application.__init__", "modulename": "hyperx.api", "qualname": "Application.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">application</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">Application</span></span>)</span>"}, {"fullname": "hyperx.api.Application.UnitSystem", "modulename": "hyperx.api", "qualname": "Application.UnitSystem", "kind": "variable", "doc": "<p>Unit system specified when starting a scripting Application.</p>\n", "annotation": ": &lt;property object at 0x0000014E0FEFF600&gt;"}, {"fullname": "hyperx.api.Application.CompilationDate", "modulename": "hyperx.api", "qualname": "Application.CompilationDate", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Application.DatabasePath", "modulename": "hyperx.api", "qualname": "Application.DatabasePath", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Application.ActiveProject", "modulename": "hyperx.api", "qualname": "Application.ActiveProject", "kind": "variable", "doc": "<p>Represents a HyperX project within a database.</p>\n", "annotation": ": hyperx.api.Project"}, {"fullname": "hyperx.api.Application.UiRunnerMode", "modulename": "hyperx.api", "qualname": "Application.UiRunnerMode", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.Application.Version", "modulename": "hyperx.api", "qualname": "Application.Version", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Application.FailureModeCategories", "modulename": "hyperx.api", "qualname": "Application.FailureModeCategories", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.FailureModeCategoryCol"}, {"fullname": "hyperx.api.Application.FailureModes", "modulename": "hyperx.api", "qualname": "Application.FailureModes", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.FailureModeCol"}, {"fullname": "hyperx.api.Application.Packages", "modulename": "hyperx.api", "qualname": "Application.Packages", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.PluginPackageCol"}, {"fullname": "hyperx.api.Application.Foams", "modulename": "hyperx.api", "qualname": "Application.Foams", "kind": "variable", "doc": "<p>Contains a set of all foam materials in a database.</p>\n", "annotation": ": hyperx.api.FoamCol"}, {"fullname": "hyperx.api.Application.Honeycombs", "modulename": "hyperx.api", "qualname": "Application.Honeycombs", "kind": "variable", "doc": "<p>Contains a set of all honeycomb materials in a database.</p>\n", "annotation": ": hyperx.api.HoneycombCol"}, {"fullname": "hyperx.api.Application.Isotropics", "modulename": "hyperx.api", "qualname": "Application.Isotropics", "kind": "variable", "doc": "<p>Contains a set of all isotropic materials in a database.</p>\n", "annotation": ": hyperx.api.IsotropicCol"}, {"fullname": "hyperx.api.Application.Laminates", "modulename": "hyperx.api", "qualname": "Application.Laminates", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.LaminateCol"}, {"fullname": "hyperx.api.Application.LaminateFamilies", "modulename": "hyperx.api", "qualname": "Application.LaminateFamilies", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.LaminateFamilyCol"}, {"fullname": "hyperx.api.Application.AnalysisProperties", "modulename": "hyperx.api", "qualname": "Application.AnalysisProperties", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.AnalysisPropertyCol"}, {"fullname": "hyperx.api.Application.DesignProperties", "modulename": "hyperx.api", "qualname": "Application.DesignProperties", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.DesignPropertyCol"}, {"fullname": "hyperx.api.Application.LoadProperties", "modulename": "hyperx.api", "qualname": "Application.LoadProperties", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.LoadPropertyCol"}, {"fullname": "hyperx.api.Application.Orthotropics", "modulename": "hyperx.api", "qualname": "Application.Orthotropics", "kind": "variable", "doc": "<p>Contains a set of all orthotropic materials in a database.</p>\n", "annotation": ": hyperx.api.OrthotropicCol"}, {"fullname": "hyperx.api.Application.ProjectInfos", "modulename": "hyperx.api", "qualname": "Application.ProjectInfos", "kind": "variable", "doc": "<p>Contains a set of all projects in a database.</p>\n", "annotation": ": hyperx.api.ProjectInfoCol"}, {"fullname": "hyperx.api.Application.UserName", "modulename": "hyperx.api", "qualname": "Application.UserName", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.Application.CloseDatabase", "modulename": "hyperx.api", "qualname": "Application.CloseDatabase", "kind": "function", "doc": "<p>Close the currently open database if one exists.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>delay</strong>:  Delay closing the connection for this many seconds.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">delay</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Application.CopyProject", "modulename": "hyperx.api", "qualname": "Application.CopyProject", "kind": "function", "doc": "<p>Copy a project</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>projectId</strong>:  Id of the project to copy</li>\n<li><strong>newName</strong>:  Name for the new project</li>\n<li><strong>copyDesignProperties</strong>:  Flag indicating whether design properties should be copied in the new project</li>\n<li><strong>copyAnalysisProperties</strong>:  Flag indicating whether analysis properties should be copied in the new project</li>\n<li><strong>copyLoadProperties</strong>:  Flag indicating whether load properties should be copied in the new project</li>\n<li><strong>copyWorkingFolder</strong>:  Flag indicating whether working folder should be copied</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">projectId</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">newName</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">copyDesignProperties</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">copyAnalysisProperties</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">copyLoadProperties</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">copyWorkingFolder</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">ProjectInfo</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Application.CreateDatabaseFromTemplate", "modulename": "hyperx.api", "qualname": "Application.CreateDatabaseFromTemplate", "kind": "function", "doc": "<p>Create a new database.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>templateName</strong>:  The name of the template to base this database on.</li>\n<li><strong>newPath</strong>:  The path to the new database.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">templateName</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">newPath</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Application.CreateProject", "modulename": "hyperx.api", "qualname": "Application.CreateProject", "kind": "function", "doc": "<p>Create a Project.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">projectName</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">ProjectInfo</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Application.DeleteProject", "modulename": "hyperx.api", "qualname": "Application.DeleteProject", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">projectName</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">ProjectDeletionStatus</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Application.Dispose", "modulename": "hyperx.api", "qualname": "Application.Dispose", "kind": "function", "doc": "<p>Dispose of the application. Should be explicitly called after the application\nis no longer needed unless the application is wrapped with a using clause.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Application.GetAnalyses", "modulename": "hyperx.api", "qualname": "Application.GetAnalyses", "kind": "function", "doc": "<p>Get all Analysis Definitions in the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">AnalysisDefinition</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Application.Login", "modulename": "hyperx.api", "qualname": "Application.Login", "kind": "function", "doc": "<p>Login to the Scripting API with a specified username and password.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>userName</strong>:  Username to login with.</li>\n<li><strong>password</strong>:  Password to log in with</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">userName</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">password</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Application.Migrate", "modulename": "hyperx.api", "qualname": "Application.Migrate", "kind": "function", "doc": "<p>Migrate the database to the latest version.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">databasePath</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Application.CheckDatabaseIsUpToDate", "modulename": "hyperx.api", "qualname": "Application.CheckDatabaseIsUpToDate", "kind": "function", "doc": "<p>Returns true if the database version matches the version of this scripting API.\nOtherwise returns false.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">databasePath</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Application.OpenDatabase", "modulename": "hyperx.api", "qualname": "Application.OpenDatabase", "kind": "function", "doc": "<p>Open a database to manipulate with the API.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>databasePath</strong>:  File path to the DB.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">databasePath</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Application.SelectProject", "modulename": "hyperx.api", "qualname": "Application.SelectProject", "kind": "function", "doc": "<p>Select the active project.\nActivating a project will deactivate the current project (if present).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">projectName</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Project</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.JointDesignProperty", "modulename": "hyperx.api", "qualname": "JointDesignProperty", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "DesignProperty"}, {"fullname": "hyperx.api.JointDesignProperty.__init__", "modulename": "hyperx.api", "qualname": "JointDesignProperty.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">jointDesignProperty</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">JointDesignProperty</span></span>)</span>"}, {"fullname": "hyperx.api.SizingMaterial", "modulename": "hyperx.api", "qualname": "SizingMaterial", "kind": "class", "doc": "<p>Represents an entity with an ID.</p>\n", "bases": "IdEntity"}, {"fullname": "hyperx.api.SizingMaterial.__init__", "modulename": "hyperx.api", "qualname": "SizingMaterial.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">sizingMaterial</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">SizingMaterial</span></span>)</span>"}, {"fullname": "hyperx.api.SizingMaterial.MaterialId", "modulename": "hyperx.api", "qualname": "SizingMaterial.MaterialId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.SizingMaterial.MaterialType", "modulename": "hyperx.api", "qualname": "SizingMaterial.MaterialType", "kind": "variable", "doc": "<p>Represents a material's type.</p>\n", "annotation": ": hyperx.api.types.MaterialType"}, {"fullname": "hyperx.api.SizingMaterialCol", "modulename": "hyperx.api", "qualname": "SizingMaterialCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdEntityCol[hyperx.api.SizingMaterial]"}, {"fullname": "hyperx.api.SizingMaterialCol.__init__", "modulename": "hyperx.api", "qualname": "SizingMaterialCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">sizingMaterialCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">SizingMaterialCol</span></span>)</span>"}, {"fullname": "hyperx.api.SizingMaterialCol.SizingMaterialColList", "modulename": "hyperx.api", "qualname": "SizingMaterialCol.SizingMaterialColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.SizingMaterial]"}, {"fullname": "hyperx.api.SizingMaterialCol.Get", "modulename": "hyperx.api", "qualname": "SizingMaterialCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">SizingMaterial</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.SizingMaterialCol.Contains", "modulename": "hyperx.api", "qualname": "SizingMaterialCol.Contains", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.SizingMaterialCol.AddSizingMaterial", "modulename": "hyperx.api", "qualname": "SizingMaterialCol.AddSizingMaterial", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.SizingMaterialCol.RemoveSizingMaterial", "modulename": "hyperx.api", "qualname": "SizingMaterialCol.RemoveSizingMaterial", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ZoneOverride", "modulename": "hyperx.api", "qualname": "ZoneOverride", "kind": "class", "doc": "<p>Represents an entity with an ID.</p>\n", "bases": "IdEntity"}, {"fullname": "hyperx.api.ZoneOverride.__init__", "modulename": "hyperx.api", "qualname": "ZoneOverride.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">zoneOverride</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">ZoneOverride</span></span>)</span>"}, {"fullname": "hyperx.api.ZoneOverride.AllowMaterials", "modulename": "hyperx.api", "qualname": "ZoneOverride.AllowMaterials", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.ZoneOverride.ProjectId", "modulename": "hyperx.api", "qualname": "ZoneOverride.ProjectId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.ZoneOverride.DesignId", "modulename": "hyperx.api", "qualname": "ZoneOverride.DesignId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.ZoneOverride.FamilyId", "modulename": "hyperx.api", "qualname": "ZoneOverride.FamilyId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BeamPanelFamily"}, {"fullname": "hyperx.api.ZoneOverride.ConceptId", "modulename": "hyperx.api", "qualname": "ZoneOverride.ConceptId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.ZoneOverride.VariableId", "modulename": "hyperx.api", "qualname": "ZoneOverride.VariableId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.ZoneOverride.MinBound", "modulename": "hyperx.api", "qualname": "ZoneOverride.MinBound", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ZoneOverride.MaxBound", "modulename": "hyperx.api", "qualname": "ZoneOverride.MaxBound", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ZoneOverride.StepSize", "modulename": "hyperx.api", "qualname": "ZoneOverride.StepSize", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ZoneOverride.MinPlies", "modulename": "hyperx.api", "qualname": "ZoneOverride.MinPlies", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.ZoneOverride.MaxPlies", "modulename": "hyperx.api", "qualname": "ZoneOverride.MaxPlies", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.ZoneOverride.PlyStepSize", "modulename": "hyperx.api", "qualname": "ZoneOverride.PlyStepSize", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.ZoneOverride.InputMode", "modulename": "hyperx.api", "qualname": "ZoneOverride.InputMode", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.VariableInputMode"}, {"fullname": "hyperx.api.ZoneOverride.SizingMaterials", "modulename": "hyperx.api", "qualname": "ZoneOverride.SizingMaterials", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.SizingMaterialCol"}, {"fullname": "hyperx.api.ZoneOverride.AnalysisValue", "modulename": "hyperx.api", "qualname": "ZoneOverride.AnalysisValue", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ZoneOverride.AnalysisMaterial", "modulename": "hyperx.api", "qualname": "ZoneOverride.AnalysisMaterial", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.ZoneOverride.AnalysisMaterialType", "modulename": "hyperx.api", "qualname": "ZoneOverride.AnalysisMaterialType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.MaterialType"}, {"fullname": "hyperx.api.ToolingConstraint", "modulename": "hyperx.api", "qualname": "ToolingConstraint", "kind": "class", "doc": "<p>Tooling constraints are a feature of Design Properties for Zones.</p>\n", "bases": "IdNameEntity"}, {"fullname": "hyperx.api.ToolingConstraint.__init__", "modulename": "hyperx.api", "qualname": "ToolingConstraint.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">toolingConstraint</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">ToolingConstraint</span></span>)</span>"}, {"fullname": "hyperx.api.ToolingConstraint.ConstraintMax", "modulename": "hyperx.api", "qualname": "ToolingConstraint.ConstraintMax", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ToolingConstraint.ConstraintMin", "modulename": "hyperx.api", "qualname": "ToolingConstraint.ConstraintMin", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ToolingConstraint.ConstraintValue", "modulename": "hyperx.api", "qualname": "ToolingConstraint.ConstraintValue", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.ToolingConstraint.ToolingSelectionType", "modulename": "hyperx.api", "qualname": "ToolingConstraint.ToolingSelectionType", "kind": "variable", "doc": "<p>Defines which selection a given tooling constraint is currently set to.</p>\n", "annotation": ": hyperx.api.types.ToolingSelectionType"}, {"fullname": "hyperx.api.ToolingConstraint.SetToAnyValue", "modulename": "hyperx.api", "qualname": "ToolingConstraint.SetToAnyValue", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ToolingConstraint.SetToInequality", "modulename": "hyperx.api", "qualname": "ToolingConstraint.SetToInequality", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ToolingConstraint.SetToRange", "modulename": "hyperx.api", "qualname": "ToolingConstraint.SetToRange", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">min</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"nb\">max</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ToolingConstraint.SetToValue", "modulename": "hyperx.api", "qualname": "ToolingConstraint.SetToValue", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ZoneOverrideCol", "modulename": "hyperx.api", "qualname": "ZoneOverrideCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdEntityCol[hyperx.api.ZoneOverride]"}, {"fullname": "hyperx.api.ZoneOverrideCol.__init__", "modulename": "hyperx.api", "qualname": "ZoneOverrideCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">zoneOverrideCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">ZoneOverrideCol</span></span>)</span>"}, {"fullname": "hyperx.api.ZoneOverrideCol.ZoneOverrideColList", "modulename": "hyperx.api", "qualname": "ZoneOverrideCol.ZoneOverrideColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.ZoneOverride]"}, {"fullname": "hyperx.api.ZoneOverrideCol.Get", "modulename": "hyperx.api", "qualname": "ZoneOverrideCol.Get", "kind": "function", "doc": "<p>Get override for a zone by the zone number</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">zoneNumber</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">ZoneOverride</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DesignVariable", "modulename": "hyperx.api", "qualname": "DesignVariable", "kind": "class", "doc": "<p>Holds design variable data.\n    Min, max, steps, materials.</p>\n", "bases": "IdEntity"}, {"fullname": "hyperx.api.DesignVariable.__init__", "modulename": "hyperx.api", "qualname": "DesignVariable.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">designVariable</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">DesignVariable</span></span>)</span>"}, {"fullname": "hyperx.api.DesignVariable.VariableParameter", "modulename": "hyperx.api", "qualname": "DesignVariable.VariableParameter", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.VariableParameter"}, {"fullname": "hyperx.api.DesignVariable.AllowMaterials", "modulename": "hyperx.api", "qualname": "DesignVariable.AllowMaterials", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.DesignVariable.Max", "modulename": "hyperx.api", "qualname": "DesignVariable.Max", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.DesignVariable.Min", "modulename": "hyperx.api", "qualname": "DesignVariable.Min", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.DesignVariable.Name", "modulename": "hyperx.api", "qualname": "DesignVariable.Name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.DesignVariable.StepSize", "modulename": "hyperx.api", "qualname": "DesignVariable.StepSize", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.DesignVariable.UseAnalysis", "modulename": "hyperx.api", "qualname": "DesignVariable.UseAnalysis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.DesignVariable.AnalysisMaterial", "modulename": "hyperx.api", "qualname": "DesignVariable.AnalysisMaterial", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.DesignVariable.AnalysisMaterialType", "modulename": "hyperx.api", "qualname": "DesignVariable.AnalysisMaterialType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.MaterialType"}, {"fullname": "hyperx.api.DesignVariable.SizingMaterialType", "modulename": "hyperx.api", "qualname": "DesignVariable.SizingMaterialType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.MaterialType"}, {"fullname": "hyperx.api.DesignVariable.AnalysisValue", "modulename": "hyperx.api", "qualname": "DesignVariable.AnalysisValue", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.DesignVariable.Overrides", "modulename": "hyperx.api", "qualname": "DesignVariable.Overrides", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.ZoneOverrideCol"}, {"fullname": "hyperx.api.DesignVariable.AddMaterials", "modulename": "hyperx.api", "qualname": "DesignVariable.AddMaterials", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DesignVariable.GetSizingMaterials", "modulename": "hyperx.api", "qualname": "DesignVariable.GetSizingMaterials", "kind": "function", "doc": "<p>Get a list of materials used for sizing, if they exist.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DesignVariable.RemoveSizingMaterials", "modulename": "hyperx.api", "qualname": "DesignVariable.RemoveSizingMaterials", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">materialIds</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DesignVariable.GetAnalysisMaterial", "modulename": "hyperx.api", "qualname": "DesignVariable.GetAnalysisMaterial", "kind": "function", "doc": "<p>Get the material used for analysis, if it exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DesignVariable.RemoveAnalysisMaterial", "modulename": "hyperx.api", "qualname": "DesignVariable.RemoveAnalysisMaterial", "kind": "function", "doc": "<p>Remove the analysis material assigned to this variable.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ToolingConstraintCol", "modulename": "hyperx.api", "qualname": "ToolingConstraintCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdNameEntityCol[hyperx.api.ToolingConstraint]"}, {"fullname": "hyperx.api.ToolingConstraintCol.__init__", "modulename": "hyperx.api", "qualname": "ToolingConstraintCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">toolingConstraintCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">ToolingConstraintCol</span></span>)</span>"}, {"fullname": "hyperx.api.ToolingConstraintCol.ToolingConstraintColList", "modulename": "hyperx.api", "qualname": "ToolingConstraintCol.ToolingConstraintColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.ToolingConstraint]"}, {"fullname": "hyperx.api.ToolingConstraintCol.Get", "modulename": "hyperx.api", "qualname": "ToolingConstraintCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">ToolingConstraint</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.DesignVariableCol", "modulename": "hyperx.api", "qualname": "DesignVariableCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdEntityCol[hyperx.api.DesignVariable]"}, {"fullname": "hyperx.api.DesignVariableCol.__init__", "modulename": "hyperx.api", "qualname": "DesignVariableCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">designVariableCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">DesignVariableCol</span></span>)</span>"}, {"fullname": "hyperx.api.DesignVariableCol.DesignVariableColList", "modulename": "hyperx.api", "qualname": "DesignVariableCol.DesignVariableColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.DesignVariable]"}, {"fullname": "hyperx.api.DesignVariableCol.Get", "modulename": "hyperx.api", "qualname": "DesignVariableCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">DesignVariable</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ZoneDesignProperty", "modulename": "hyperx.api", "qualname": "ZoneDesignProperty", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "DesignProperty"}, {"fullname": "hyperx.api.ZoneDesignProperty.__init__", "modulename": "hyperx.api", "qualname": "ZoneDesignProperty.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">zoneDesignProperty</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">ZoneDesignProperty</span></span>)</span>"}, {"fullname": "hyperx.api.ZoneDesignProperty.FamilyId", "modulename": "hyperx.api", "qualname": "ZoneDesignProperty.FamilyId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BeamPanelFamily"}, {"fullname": "hyperx.api.ZoneDesignProperty.ConceptId", "modulename": "hyperx.api", "qualname": "ZoneDesignProperty.ConceptId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.ZoneDesignProperty.FamilyConceptUID", "modulename": "hyperx.api", "qualname": "ZoneDesignProperty.FamilyConceptUID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.FamilyConceptUID"}, {"fullname": "hyperx.api.ZoneDesignProperty.ToolingConstraints", "modulename": "hyperx.api", "qualname": "ZoneDesignProperty.ToolingConstraints", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.ToolingConstraintCol"}, {"fullname": "hyperx.api.ZoneDesignProperty.DesignVariables", "modulename": "hyperx.api", "qualname": "ZoneDesignProperty.DesignVariables", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.DesignVariableCol"}, {"fullname": "hyperx.api.BulkUpdaterBase", "modulename": "hyperx.api", "qualname": "BulkUpdaterBase", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "abc.ABC"}, {"fullname": "hyperx.api.BulkUpdaterBase.__init__", "modulename": "hyperx.api", "qualname": "BulkUpdaterBase.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">bulkUpdaterBase</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">BulkUpdaterBase</span><span class=\"p\">[]</span></span>)</span>"}, {"fullname": "hyperx.api.BulkUpdaterBase.Update", "modulename": "hyperx.api", "qualname": "BulkUpdaterBase.Update", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">func</span><span class=\"p\">:</span> <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"n\">Action</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserRowBulkUpdater", "modulename": "hyperx.api", "qualname": "LoadPropertyUserRowBulkUpdater", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "BulkUpdaterBase"}, {"fullname": "hyperx.api.LoadPropertyUserRowBulkUpdater.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserRowBulkUpdater.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loadPropertyUserRowBulkUpdater</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserRowBulkUpdater</span><span class=\"p\">[]</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserRow", "modulename": "hyperx.api", "qualname": "LoadPropertyUserRow", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "IdNameEntity"}, {"fullname": "hyperx.api.LoadPropertyUserRow.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserRow.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">loadPropertyUserRow</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserRow</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserRow.LoadScenarioId", "modulename": "hyperx.api", "qualname": "LoadPropertyUserRow.LoadScenarioId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.LoadPropertyUserRow.LoadPropertyId", "modulename": "hyperx.api", "qualname": "LoadPropertyUserRow.LoadPropertyId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.LoadPropertyUserRow.Type", "modulename": "hyperx.api", "qualname": "LoadPropertyUserRow.Type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.LoadSetType"}, {"fullname": "hyperx.api.LoadPropertyUserRow.ReferenceTemperature", "modulename": "hyperx.api", "qualname": "LoadPropertyUserRow.ReferenceTemperature", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserRow.PressureOrTemperature", "modulename": "hyperx.api", "qualname": "LoadPropertyUserRow.PressureOrTemperature", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserRow.LimitFactor", "modulename": "hyperx.api", "qualname": "LoadPropertyUserRow.LimitFactor", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserRow.UltimateFactor", "modulename": "hyperx.api", "qualname": "LoadPropertyUserRow.UltimateFactor", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserBeamRow", "modulename": "hyperx.api", "qualname": "LoadPropertyUserBeamRow", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "LoadPropertyUserRow"}, {"fullname": "hyperx.api.LoadPropertyUserBeamRow.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserBeamRow.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">loadPropertyUserBeamRow</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserBeamRow</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserBeamRow.M1A", "modulename": "hyperx.api", "qualname": "LoadPropertyUserBeamRow.M1A", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserBeamRow.M2A", "modulename": "hyperx.api", "qualname": "LoadPropertyUserBeamRow.M2A", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserBeamRow.M1B", "modulename": "hyperx.api", "qualname": "LoadPropertyUserBeamRow.M1B", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserBeamRow.M2B", "modulename": "hyperx.api", "qualname": "LoadPropertyUserBeamRow.M2B", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserBeamRow.V1", "modulename": "hyperx.api", "qualname": "LoadPropertyUserBeamRow.V1", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserBeamRow.V2", "modulename": "hyperx.api", "qualname": "LoadPropertyUserBeamRow.V2", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserBeamRow.Axial", "modulename": "hyperx.api", "qualname": "LoadPropertyUserBeamRow.Axial", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserBeamRow.Torque", "modulename": "hyperx.api", "qualname": "LoadPropertyUserBeamRow.Torque", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserFeaBeamRow", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaBeamRow", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "LoadPropertyUserBeamRow"}, {"fullname": "hyperx.api.LoadPropertyUserFeaBeamRow.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaBeamRow.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loadPropertyUserFeaBeamRow</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserFeaBeamRow</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserFeaBeamRow.SetName", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaBeamRow.SetName", "kind": "function", "doc": "<p>Set the name for the scenario</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserFeaBeamRowBulkUpdater", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaBeamRowBulkUpdater", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "LoadPropertyUserRowBulkUpdater"}, {"fullname": "hyperx.api.LoadPropertyUserFeaBeamRowBulkUpdater.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaBeamRowBulkUpdater.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loadPropertyUserFeaBeamRowBulkUpdater</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserFeaBeamRowBulkUpdater</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserFeaBeamRowBulkUpdater.GetBulkUpdater", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaBeamRowBulkUpdater.GetBulkUpdater", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">application</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Application</span>,</span><span class=\"param\">\t<span class=\"n\">items</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserFeaBeamRow</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserFeaBeamRowBulkUpdater</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserPanelJointRow", "modulename": "hyperx.api", "qualname": "LoadPropertyUserPanelJointRow", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "LoadPropertyUserRow"}, {"fullname": "hyperx.api.LoadPropertyUserPanelJointRow.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserPanelJointRow.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loadPropertyUserPanelJointRow</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserPanelJointRow</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserPanelJointRow.Nx", "modulename": "hyperx.api", "qualname": "LoadPropertyUserPanelJointRow.Nx", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserPanelJointRow.Ny", "modulename": "hyperx.api", "qualname": "LoadPropertyUserPanelJointRow.Ny", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserPanelJointRow.Nxy", "modulename": "hyperx.api", "qualname": "LoadPropertyUserPanelJointRow.Nxy", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserPanelJointRow.Mx", "modulename": "hyperx.api", "qualname": "LoadPropertyUserPanelJointRow.Mx", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserPanelJointRow.My", "modulename": "hyperx.api", "qualname": "LoadPropertyUserPanelJointRow.My", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserPanelJointRow.Mxy", "modulename": "hyperx.api", "qualname": "LoadPropertyUserPanelJointRow.Mxy", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserPanelJointRow.Qx", "modulename": "hyperx.api", "qualname": "LoadPropertyUserPanelJointRow.Qx", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserPanelJointRow.Qy", "modulename": "hyperx.api", "qualname": "LoadPropertyUserPanelJointRow.Qy", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserFeaJointRow", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaJointRow", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "LoadPropertyUserPanelJointRow"}, {"fullname": "hyperx.api.LoadPropertyUserFeaJointRow.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaJointRow.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loadPropertyUserFeaJointRow</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserFeaJointRow</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserFeaJointRow.SetName", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaJointRow.SetName", "kind": "function", "doc": "<p>Set the name for the scenario</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserFeaJointRowBulkUpdater", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaJointRowBulkUpdater", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "LoadPropertyUserRowBulkUpdater"}, {"fullname": "hyperx.api.LoadPropertyUserFeaJointRowBulkUpdater.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaJointRowBulkUpdater.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loadPropertyUserFeaJointRowBulkUpdater</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserFeaJointRowBulkUpdater</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserFeaJointRowBulkUpdater.GetBulkUpdater", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaJointRowBulkUpdater.GetBulkUpdater", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">application</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Application</span>,</span><span class=\"param\">\t<span class=\"n\">items</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserFeaJointRow</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserFeaJointRowBulkUpdater</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserFeaPanelRow", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaPanelRow", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "LoadPropertyUserPanelJointRow"}, {"fullname": "hyperx.api.LoadPropertyUserFeaPanelRow.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaPanelRow.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loadPropertyUserFeaPanelRow</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserFeaPanelRow</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserFeaPanelRow.SetName", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaPanelRow.SetName", "kind": "function", "doc": "<p>Set the name for the scenario</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserFeaPanelRowBulkUpdater", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaPanelRowBulkUpdater", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "LoadPropertyUserRowBulkUpdater"}, {"fullname": "hyperx.api.LoadPropertyUserFeaPanelRowBulkUpdater.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaPanelRowBulkUpdater.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loadPropertyUserFeaPanelRowBulkUpdater</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserFeaPanelRowBulkUpdater</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserFeaPanelRowBulkUpdater.GetBulkUpdater", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaPanelRowBulkUpdater.GetBulkUpdater", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">application</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Application</span>,</span><span class=\"param\">\t<span class=\"n\">items</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserFeaPanelRow</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserFeaPanelRowBulkUpdater</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamRow", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamRow", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "LoadPropertyUserBeamRow"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamRow.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamRow.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loadPropertyUserGeneralBeamRow</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserGeneralBeamRow</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamRow.M1A", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamRow.M1A", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamRow.M2A", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamRow.M2A", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamRow.M1B", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamRow.M1B", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamRow.M2B", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamRow.M2B", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamRow.V1", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamRow.V1", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamRow.V2", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamRow.V2", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamRow.Axial", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamRow.Axial", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamRow.Torque", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamRow.Torque", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamRow.M1AType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamRow.M1AType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamRow.M2AType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamRow.M2AType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamRow.M1BType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamRow.M1BType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamRow.M2BType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamRow.M2BType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamRow.V1Type", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamRow.V1Type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamRow.V2Type", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamRow.V2Type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamRow.AxialType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamRow.AxialType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamRow.TorqueType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamRow.TorqueType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamRowBulkUpdater", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamRowBulkUpdater", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "LoadPropertyUserRowBulkUpdater"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamRowBulkUpdater.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamRowBulkUpdater.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loadPropertyUserGeneralBeamRowBulkUpdater</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserGeneralBeamRowBulkUpdater</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamRowBulkUpdater.GetBulkUpdater", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamRowBulkUpdater.GetBulkUpdater", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">application</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Application</span>,</span><span class=\"param\">\t<span class=\"n\">items</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserGeneralBeamRow</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserGeneralBeamRowBulkUpdater</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelRow", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelRow", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "LoadPropertyUserPanelJointRow"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelRow.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelRow.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loadPropertyUserGeneralPanelRow</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserGeneralPanelRow</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelRow.Nx", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelRow.Nx", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelRow.Ny", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelRow.Ny", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelRow.Nxy", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelRow.Nxy", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelRow.Mx", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelRow.Mx", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelRow.My", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelRow.My", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelRow.Mxy", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelRow.Mxy", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelRow.Qx", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelRow.Qx", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelRow.Qy", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelRow.Qy", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelRow.NxType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelRow.NxType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelRow.NyType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelRow.NyType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelRow.NxyType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelRow.NxyType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelRow.MxType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelRow.MxType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelRow.MyType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelRow.MyType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelRow.MxyType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelRow.MxyType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelRow.QxType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelRow.QxType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelRow.QyType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelRow.QyType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelRowBulkUpdater", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelRowBulkUpdater", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "LoadPropertyUserRowBulkUpdater"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelRowBulkUpdater.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelRowBulkUpdater.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loadPropertyUserGeneralPanelRowBulkUpdater</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserGeneralPanelRowBulkUpdater</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelRowBulkUpdater.GetBulkUpdater", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelRowBulkUpdater.GetBulkUpdater", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">application</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Application</span>,</span><span class=\"param\">\t<span class=\"n\">items</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserGeneralPanelRow</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserGeneralPanelRowBulkUpdater</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyFea", "modulename": "hyperx.api", "qualname": "LoadPropertyFea", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "LoadProperty"}, {"fullname": "hyperx.api.LoadPropertyFea.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyFea.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">loadPropertyFea</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyFea</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyFea.HasNx", "modulename": "hyperx.api", "qualname": "LoadPropertyFea.HasNx", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LoadPropertyFea.HasNy", "modulename": "hyperx.api", "qualname": "LoadPropertyFea.HasNy", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LoadPropertyFea.HasNxy", "modulename": "hyperx.api", "qualname": "LoadPropertyFea.HasNxy", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LoadPropertyFea.HasMx", "modulename": "hyperx.api", "qualname": "LoadPropertyFea.HasMx", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LoadPropertyFea.HasMy", "modulename": "hyperx.api", "qualname": "LoadPropertyFea.HasMy", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LoadPropertyFea.HasMxy", "modulename": "hyperx.api", "qualname": "LoadPropertyFea.HasMxy", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LoadPropertyFea.HasQx", "modulename": "hyperx.api", "qualname": "LoadPropertyFea.HasQx", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LoadPropertyFea.HasQy", "modulename": "hyperx.api", "qualname": "LoadPropertyFea.HasQy", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LoadPropertyFea.HasM1a", "modulename": "hyperx.api", "qualname": "LoadPropertyFea.HasM1a", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LoadPropertyFea.HasM1b", "modulename": "hyperx.api", "qualname": "LoadPropertyFea.HasM1b", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LoadPropertyFea.M2a", "modulename": "hyperx.api", "qualname": "LoadPropertyFea.M2a", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LoadPropertyFea.V1", "modulename": "hyperx.api", "qualname": "LoadPropertyFea.V1", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LoadPropertyFea.V2", "modulename": "hyperx.api", "qualname": "LoadPropertyFea.V2", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LoadPropertyFea.Axial", "modulename": "hyperx.api", "qualname": "LoadPropertyFea.Axial", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LoadPropertyFea.Torque", "modulename": "hyperx.api", "qualname": "LoadPropertyFea.Torque", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LoadPropertyFea.Tension", "modulename": "hyperx.api", "qualname": "LoadPropertyFea.Tension", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LoadPropertyFea.Shear", "modulename": "hyperx.api", "qualname": "LoadPropertyFea.Shear", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LoadPropertyFea.Moment", "modulename": "hyperx.api", "qualname": "LoadPropertyFea.Moment", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LoadPropertyAverage", "modulename": "hyperx.api", "qualname": "LoadPropertyAverage", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "LoadPropertyFea"}, {"fullname": "hyperx.api.LoadPropertyAverage.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyAverage.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">loadPropertyAverage</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyAverage</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyAverage.ElementType", "modulename": "hyperx.api", "qualname": "LoadPropertyAverage.ElementType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.LoadPropertyAverageElementType"}, {"fullname": "hyperx.api.LoadPropertyElementBased", "modulename": "hyperx.api", "qualname": "LoadPropertyElementBased", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "LoadPropertyFea"}, {"fullname": "hyperx.api.LoadPropertyElementBased.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyElementBased.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">loadPropertyElementBased</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyElementBased</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyNeighborAverage", "modulename": "hyperx.api", "qualname": "LoadPropertyNeighborAverage", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "LoadPropertyFea"}, {"fullname": "hyperx.api.LoadPropertyNeighborAverage.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyNeighborAverage.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loadPropertyNeighborAverage</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyNeighborAverage</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyNeighborAverage.NumberOfNeighborsPerSide", "modulename": "hyperx.api", "qualname": "LoadPropertyNeighborAverage.NumberOfNeighborsPerSide", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.LoadPropertyPeakLoad", "modulename": "hyperx.api", "qualname": "LoadPropertyPeakLoad", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "LoadPropertyFea"}, {"fullname": "hyperx.api.LoadPropertyPeakLoad.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyPeakLoad.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">loadPropertyPeakLoad</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyPeakLoad</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyPeakLoad.ElementScope", "modulename": "hyperx.api", "qualname": "LoadPropertyPeakLoad.ElementScope", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.LoadPropertyPeakElementScope"}, {"fullname": "hyperx.api.LoadPropertyStatistical", "modulename": "hyperx.api", "qualname": "LoadPropertyStatistical", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "LoadPropertyFea"}, {"fullname": "hyperx.api.LoadPropertyStatistical.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyStatistical.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">loadPropertyStatistical</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyStatistical</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyStatistical.NSigma", "modulename": "hyperx.api", "qualname": "LoadPropertyStatistical.NSigma", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.LoadPropertyUserFeaRowCol", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaRowCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "IdNameEntityCol, typing.Generic[~T]"}, {"fullname": "hyperx.api.LoadPropertyUserFeaRowCol.LoadPropertyUserFeaRowColList", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaRowCol.LoadPropertyUserFeaRowColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[~T]"}, {"fullname": "hyperx.api.LoadPropertyUserFeaRowCol.AddScenario", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaRowCol.AddScenario", "kind": "function", "doc": "<p>Adds a load scenario with default values.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">T</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserFeaRowCol.DeleteScenario", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaRowCol.DeleteScenario", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserFeaBeamRowCol", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaBeamRowCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.LoadPropertyUserFeaRowCol[hyperx.api.LoadPropertyUserFeaBeamRow]"}, {"fullname": "hyperx.api.LoadPropertyUserFeaBeamRowCol.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaBeamRowCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loadPropertyUserFeaBeamRowCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserFeaBeamRowCol</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserFeaBeamRowCol.LoadPropertyUserFeaBeamRowColList", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaBeamRowCol.LoadPropertyUserFeaBeamRowColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.LoadPropertyUserFeaBeamRow]"}, {"fullname": "hyperx.api.LoadPropertyUserFeaBeamRowCol.DeleteScenario", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaBeamRowCol.DeleteScenario", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserFeaBeamRowCol.Get", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaBeamRowCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserFeaBeamRow</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserFeaBeam", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaBeam", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "LoadProperty"}, {"fullname": "hyperx.api.LoadPropertyUserFeaBeam.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaBeam.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">loadPropertyUserFeaBeam</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserFeaBeam</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserFeaBeam.UserFeaRows", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaBeam.UserFeaRows", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.LoadPropertyUserFeaBeamRowCol"}, {"fullname": "hyperx.api.LoadPropertyUserFeaJointRowCol", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaJointRowCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.LoadPropertyUserFeaRowCol[hyperx.api.LoadPropertyUserFeaJointRow]"}, {"fullname": "hyperx.api.LoadPropertyUserFeaJointRowCol.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaJointRowCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loadPropertyUserFeaJointRowCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserFeaJointRowCol</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserFeaJointRowCol.LoadPropertyUserFeaJointRowColList", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaJointRowCol.LoadPropertyUserFeaJointRowColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.LoadPropertyUserFeaJointRow]"}, {"fullname": "hyperx.api.LoadPropertyUserFeaJointRowCol.DeleteScenario", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaJointRowCol.DeleteScenario", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserFeaJointRowCol.Get", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaJointRowCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserFeaJointRow</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserFeaJoint", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaJoint", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "LoadProperty"}, {"fullname": "hyperx.api.LoadPropertyUserFeaJoint.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaJoint.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">loadPropertyUserFeaJoint</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserFeaJoint</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserFeaJoint.UserFeaRows", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaJoint.UserFeaRows", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.LoadPropertyUserFeaJointRowCol"}, {"fullname": "hyperx.api.LoadPropertyUserFeaPanelRowCol", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaPanelRowCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.LoadPropertyUserFeaRowCol[hyperx.api.LoadPropertyUserFeaPanelRow]"}, {"fullname": "hyperx.api.LoadPropertyUserFeaPanelRowCol.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaPanelRowCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loadPropertyUserFeaPanelRowCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserFeaPanelRowCol</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserFeaPanelRowCol.LoadPropertyUserFeaPanelRowColList", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaPanelRowCol.LoadPropertyUserFeaPanelRowColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.LoadPropertyUserFeaPanelRow]"}, {"fullname": "hyperx.api.LoadPropertyUserFeaPanelRowCol.DeleteScenario", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaPanelRowCol.DeleteScenario", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserFeaPanelRowCol.Get", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaPanelRowCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserFeaPanelRow</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserFeaPanel", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaPanel", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "LoadProperty"}, {"fullname": "hyperx.api.LoadPropertyUserFeaPanel.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaPanel.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">loadPropertyUserFeaPanel</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserFeaPanel</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserFeaPanel.UserFeaRows", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaPanel.UserFeaRows", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.LoadPropertyUserFeaPanelRowCol"}, {"fullname": "hyperx.api.LoadPropertyUserFeaPanel.SetIsZeroCurvature", "modulename": "hyperx.api", "qualname": "LoadPropertyUserFeaPanel.SetIsZeroCurvature", "kind": "function", "doc": "<p>Is there an enum for this?</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">isZeroCurvature</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralDoubleRow", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralDoubleRow", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "IdNameEntity"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralDoubleRow.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralDoubleRow.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loadPropertyUserGeneralDoubleRow</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserGeneralDoubleRow</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralDoubleRow.MechanicalRow", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralDoubleRow.MechanicalRow", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.LoadPropertyUserRow"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralDoubleRow.ThermalRow", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralDoubleRow.ThermalRow", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.LoadPropertyUserRow"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralDoubleRow.SetName", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralDoubleRow.SetName", "kind": "function", "doc": "<p>Update name for the scenario</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamDoubleRow", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamDoubleRow", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "LoadPropertyUserGeneralDoubleRow"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamDoubleRow.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamDoubleRow.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loadPropertyUserGeneralBeamDoubleRow</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserGeneralBeamDoubleRow</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamDoubleRow.MechanicalRow", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamDoubleRow.MechanicalRow", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.LoadPropertyUserRow"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamDoubleRow.ThermalRow", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamDoubleRow.ThermalRow", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.LoadPropertyUserRow"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamDoubleRow.M1AType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamDoubleRow.M1AType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamDoubleRow.M2AType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamDoubleRow.M2AType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamDoubleRow.M1BType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamDoubleRow.M1BType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamDoubleRow.M2BType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamDoubleRow.M2BType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamDoubleRow.V1Type", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamDoubleRow.V1Type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamDoubleRow.V2Type", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamDoubleRow.V2Type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamDoubleRow.AxialType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamDoubleRow.AxialType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamDoubleRow.TorqueType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamDoubleRow.TorqueType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamDoubleRow.SetM1AType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamDoubleRow.SetM1AType", "kind": "function", "doc": "<p>Set M1A type for the scenario</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">BoundaryConditionType</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamDoubleRow.SetM2AType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamDoubleRow.SetM2AType", "kind": "function", "doc": "<p>Set M2A type for the scenario</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">BoundaryConditionType</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamDoubleRow.SetM1BType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamDoubleRow.SetM1BType", "kind": "function", "doc": "<p>Set M1B type for the scenario</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">BoundaryConditionType</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamDoubleRow.SetM2BType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamDoubleRow.SetM2BType", "kind": "function", "doc": "<p>Set M2B type for the scenario</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">BoundaryConditionType</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamDoubleRow.SetV1Type", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamDoubleRow.SetV1Type", "kind": "function", "doc": "<p>Set V1 type for the scenario</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">BoundaryConditionType</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamDoubleRow.SetV2Type", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamDoubleRow.SetV2Type", "kind": "function", "doc": "<p>Set V2 type for the scenario</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">BoundaryConditionType</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamDoubleRow.SetAxialType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamDoubleRow.SetAxialType", "kind": "function", "doc": "<p>Set Axial type for the scenario</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">BoundaryConditionType</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamDoubleRow.SetTorqueType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamDoubleRow.SetTorqueType", "kind": "function", "doc": "<p>Set torque type for the scenario</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">BoundaryConditionType</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralRowCol", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralRowCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "IdNameEntityCol, typing.Generic[~T]"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralRowCol.LoadPropertyUserGeneralRowColList", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralRowCol.LoadPropertyUserGeneralRowColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[~T]"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralRowCol.AddScenario", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralRowCol.AddScenario", "kind": "function", "doc": "<p>Add scenario.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">T</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralRowCol.DeleteScenario", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralRowCol.DeleteScenario", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamRowCol", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamRowCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.LoadPropertyUserGeneralRowCol[hyperx.api.LoadPropertyUserGeneralBeamDoubleRow]"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamRowCol.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamRowCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loadPropertyUserGeneralBeamRowCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserGeneralBeamRowCol</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamRowCol.LoadPropertyUserGeneralBeamRowColList", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamRowCol.LoadPropertyUserGeneralBeamRowColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.LoadPropertyUserGeneralBeamDoubleRow]"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamRowCol.DeleteScenario", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamRowCol.DeleteScenario", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeamRowCol.Get", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeamRowCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserGeneralBeamDoubleRow</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeam", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeam", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "LoadProperty"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeam.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeam.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loadPropertyUserGeneralBeam</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserGeneralBeam</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeam.UserGeneralRows", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeam.UserGeneralRows", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.LoadPropertyUserGeneralBeamRowCol"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBeam.IsIncludingThermal", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBeam.IsIncludingThermal", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBoltedRow", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBoltedRow", "kind": "class", "doc": "<p>Represents an entity with an ID.</p>\n", "bases": "IdEntity"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBoltedRow.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBoltedRow.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loadPropertyUserGeneralBoltedRow</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserGeneralBoltedRow</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBoltedRow.LoadPropertyId", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBoltedRow.LoadPropertyId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBoltedRow.LoadScenarioId", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBoltedRow.LoadScenarioId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBoltedRow.Fx", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBoltedRow.Fx", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBoltedRow.Fy", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBoltedRow.Fy", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBoltedRow.Fz", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBoltedRow.Fz", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBoltedRow.Mx", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBoltedRow.Mx", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBoltedRow.My", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBoltedRow.My", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBoltedRow.Mz", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBoltedRow.Mz", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBoltedRow.NxBypass", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBoltedRow.NxBypass", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBoltedRow.NyBypass", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBoltedRow.NyBypass", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBoltedRow.NxyBypass", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBoltedRow.NxyBypass", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBoltedRow.LimitFactor", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBoltedRow.LimitFactor", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBoltedRow.UltimateFactor", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBoltedRow.UltimateFactor", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBoltedRowCol", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBoltedRowCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdEntityCol[hyperx.api.LoadPropertyUserGeneralBoltedRow]"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBoltedRowCol.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBoltedRowCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loadPropertyUserGeneralBoltedRowCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserGeneralBoltedRowCol</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBoltedRowCol.LoadPropertyUserGeneralBoltedRowColList", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBoltedRowCol.LoadPropertyUserGeneralBoltedRowColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.LoadPropertyUserGeneralBoltedRow]"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBoltedRowCol.AddScenario", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBoltedRowCol.AddScenario", "kind": "function", "doc": "<p>Adds a load scenario with default values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBoltedRowCol.DeleteScenario", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBoltedRowCol.DeleteScenario", "kind": "function", "doc": "<p>Delete a load scenario by id</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">scenarioId</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBolted", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBolted", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "LoadProperty"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBolted.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBolted.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loadPropertyUserGeneralBolted</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserGeneralBolted</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBolted.UserGeneralBoltedRows", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBolted.UserGeneralBoltedRows", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.LoadPropertyUserGeneralBoltedRowCol"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBondedRow", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBondedRow", "kind": "class", "doc": "<p>Represents an entity with an ID.</p>\n", "bases": "IdEntity"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBondedRow.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBondedRow.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loadPropertyUserGeneralBondedRow</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserGeneralBondedRow</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBondedRow.LoadPropertyId", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBondedRow.LoadPropertyId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBondedRow.JointConceptId", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBondedRow.JointConceptId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.JointConceptId"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBondedRow.BondedBcId", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBondedRow.BondedBcId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBondedRow.AxialType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBondedRow.AxialType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBondedRow.MomentType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBondedRow.MomentType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBondedRow.TransverseType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBondedRow.TransverseType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBondedRow.ShearType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBondedRow.ShearType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBondedRow.Axial", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBondedRow.Axial", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBondedRow.Moment", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBondedRow.Moment", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBondedRow.Transverse", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBondedRow.Transverse", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBondedRow.Shear", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBondedRow.Shear", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBondedRow.UpdateRow", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBondedRow.UpdateRow", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBondedRowCol", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBondedRowCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.IdEntityCol[hyperx.api.LoadPropertyUserGeneralBondedRow]"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBondedRowCol.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBondedRowCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loadPropertyUserGeneralBondedRowCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserGeneralBondedRowCol</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBondedRowCol.LoadPropertyUserGeneralBondedRowColList", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBondedRowCol.LoadPropertyUserGeneralBondedRowColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.LoadPropertyUserGeneralBondedRow]"}, {"fullname": "hyperx.api.LoadPropertyJoint", "modulename": "hyperx.api", "qualname": "LoadPropertyJoint", "kind": "class", "doc": "<p>Represents an entity with an ID.</p>\n", "bases": "IdEntity"}, {"fullname": "hyperx.api.LoadPropertyJoint.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyJoint.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">loadPropertyJoint</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyJoint</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyJoint.UserGeneralBondedRows", "modulename": "hyperx.api", "qualname": "LoadPropertyJoint.UserGeneralBondedRows", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.LoadPropertyUserGeneralBondedRowCol"}, {"fullname": "hyperx.api.LoadPropertyJoint.LoadPropertyId", "modulename": "hyperx.api", "qualname": "LoadPropertyJoint.LoadPropertyId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.LoadPropertyJoint.JConceptId", "modulename": "hyperx.api", "qualname": "LoadPropertyJoint.JConceptId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.JointConceptId"}, {"fullname": "hyperx.api.LoadPropertyJoint.Ex", "modulename": "hyperx.api", "qualname": "LoadPropertyJoint.Ex", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyJoint.Kx", "modulename": "hyperx.api", "qualname": "LoadPropertyJoint.Kx", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyJoint.Kxy", "modulename": "hyperx.api", "qualname": "LoadPropertyJoint.Kxy", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyJoint.Temperature", "modulename": "hyperx.api", "qualname": "LoadPropertyJoint.Temperature", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBonded", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBonded", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "LoadProperty"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBonded.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBonded.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loadPropertyUserGeneralBonded</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserGeneralBonded</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralBonded.LoadPropertyJoint", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralBonded.LoadPropertyJoint", "kind": "variable", "doc": "<p></p>\n", "annotation": ": &lt;property object at 0x0000014E36F8B740&gt;"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelDoubleRow", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelDoubleRow", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "LoadPropertyUserGeneralDoubleRow"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelDoubleRow.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelDoubleRow.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loadPropertyUserGeneralPanelDoubleRow</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserGeneralPanelDoubleRow</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelDoubleRow.MechanicalRow", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelDoubleRow.MechanicalRow", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.LoadPropertyUserRow"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelDoubleRow.ThermalRow", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelDoubleRow.ThermalRow", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.LoadPropertyUserRow"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelDoubleRow.NxType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelDoubleRow.NxType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelDoubleRow.NyType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelDoubleRow.NyType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelDoubleRow.NxyType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelDoubleRow.NxyType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelDoubleRow.MxType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelDoubleRow.MxType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelDoubleRow.MyType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelDoubleRow.MyType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelDoubleRow.MxyType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelDoubleRow.MxyType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelDoubleRow.QxType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelDoubleRow.QxType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelDoubleRow.QyType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelDoubleRow.QyType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BoundaryConditionType"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelDoubleRow.SetNxType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelDoubleRow.SetNxType", "kind": "function", "doc": "<p>Set Nx type for the scenario</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">BoundaryConditionType</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelDoubleRow.SetNyType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelDoubleRow.SetNyType", "kind": "function", "doc": "<p>Set Ny type for the scenario</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">BoundaryConditionType</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelDoubleRow.SetNxyType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelDoubleRow.SetNxyType", "kind": "function", "doc": "<p>Set Nxy type for the scenario</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">BoundaryConditionType</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelDoubleRow.SetMxType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelDoubleRow.SetMxType", "kind": "function", "doc": "<p>Set Mx type for the scenario</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">BoundaryConditionType</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelDoubleRow.SetMyType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelDoubleRow.SetMyType", "kind": "function", "doc": "<p>Set My type for the scenario</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">BoundaryConditionType</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelDoubleRow.SetMxyType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelDoubleRow.SetMxyType", "kind": "function", "doc": "<p>Set Mxy type for the scenario</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">BoundaryConditionType</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelDoubleRow.SetQxType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelDoubleRow.SetQxType", "kind": "function", "doc": "<p>Set Qx type for the scenario</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">BoundaryConditionType</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelDoubleRow.SetQyType", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelDoubleRow.SetQyType", "kind": "function", "doc": "<p>Set Qy type for the scenario</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">BoundaryConditionType</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelRowCol", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelRowCol", "kind": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n", "bases": "hyperx.api.LoadPropertyUserGeneralRowCol[hyperx.api.LoadPropertyUserGeneralPanelDoubleRow]"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelRowCol.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelRowCol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loadPropertyUserGeneralPanelRowCol</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserGeneralPanelRowCol</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelRowCol.LoadPropertyUserGeneralPanelRowColList", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelRowCol.LoadPropertyUserGeneralPanelRowColList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[hyperx.api.LoadPropertyUserGeneralPanelDoubleRow]"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelRowCol.DeleteScenario", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelRowCol.DeleteScenario", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanelRowCol.Get", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanelRowCol.Get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserGeneralPanelDoubleRow</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanel", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanel", "kind": "class", "doc": "<p>Represents an entity with an ID and Name.</p>\n", "bases": "LoadProperty"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanel.__init__", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanel.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loadPropertyUserGeneralPanel</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LoadPropertyUserGeneralPanel</span></span>)</span>"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanel.UserGeneralRows", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanel.UserGeneralRows", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.LoadPropertyUserGeneralPanelRowCol"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanel.IsIncludingThermal", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanel.IsIncludingThermal", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LoadPropertyUserGeneralPanel.SetIsZeroCurvature", "modulename": "hyperx.api", "qualname": "LoadPropertyUserGeneralPanel.SetIsZeroCurvature", "kind": "function", "doc": "<p>Is there an enum for this?</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">isZeroCurvature</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.JointSelectionDesignResult", "modulename": "hyperx.api", "qualname": "JointSelectionDesignResult", "kind": "class", "doc": "<p>Represents an entity with an ID.</p>\n", "bases": "JointDesignResult"}, {"fullname": "hyperx.api.JointSelectionDesignResult.__init__", "modulename": "hyperx.api", "qualname": "JointSelectionDesignResult.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">jointSelectionDesignResult</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">JointSelectionDesignResult</span></span>)</span>"}, {"fullname": "hyperx.api.JointSelectionDesignResult.JointSelectionId", "modulename": "hyperx.api", "qualname": "JointSelectionDesignResult.JointSelectionId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.JointSelectionId"}, {"fullname": "hyperx.api.JointFastenerDesignResult", "modulename": "hyperx.api", "qualname": "JointFastenerDesignResult", "kind": "class", "doc": "<p>Represents an entity with an ID.</p>\n", "bases": "JointSelectionDesignResult"}, {"fullname": "hyperx.api.JointFastenerDesignResult.__init__", "modulename": "hyperx.api", "qualname": "JointFastenerDesignResult.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">jointFastenerDesignResult</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">JointFastenerDesignResult</span></span>)</span>"}, {"fullname": "hyperx.api.JointFastenerDesignResult.FastenerBoltId", "modulename": "hyperx.api", "qualname": "JointFastenerDesignResult.FastenerBoltId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.JointFastenerDesignResult.FastenerCodeId", "modulename": "hyperx.api", "qualname": "JointFastenerDesignResult.FastenerCodeId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.JointMaterialDesignResult", "modulename": "hyperx.api", "qualname": "JointMaterialDesignResult", "kind": "class", "doc": "<p>Represents an entity with an ID.</p>\n", "bases": "JointSelectionDesignResult"}, {"fullname": "hyperx.api.JointMaterialDesignResult.__init__", "modulename": "hyperx.api", "qualname": "JointMaterialDesignResult.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">jointMaterialDesignResult</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">JointMaterialDesignResult</span></span>)</span>"}, {"fullname": "hyperx.api.JointMaterialDesignResult.MaterialId", "modulename": "hyperx.api", "qualname": "JointMaterialDesignResult.MaterialId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.JointMaterialDesignResult.MaterialType", "modulename": "hyperx.api", "qualname": "JointMaterialDesignResult.MaterialType", "kind": "variable", "doc": "<p>Represents a material's type.</p>\n", "annotation": ": hyperx.api.types.MaterialType"}, {"fullname": "hyperx.api.JointRangeDesignResult", "modulename": "hyperx.api", "qualname": "JointRangeDesignResult", "kind": "class", "doc": "<p>Represents an entity with an ID.</p>\n", "bases": "JointDesignResult"}, {"fullname": "hyperx.api.JointRangeDesignResult.__init__", "modulename": "hyperx.api", "qualname": "JointRangeDesignResult.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">jointRangeDesignResult</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">JointRangeDesignResult</span></span>)</span>"}, {"fullname": "hyperx.api.JointRangeDesignResult.JointRangeId", "modulename": "hyperx.api", "qualname": "JointRangeDesignResult.JointRangeId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.JointRangeId"}, {"fullname": "hyperx.api.JointRangeDesignResult.Value", "modulename": "hyperx.api", "qualname": "JointRangeDesignResult.Value", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.JointRivetDesignResult", "modulename": "hyperx.api", "qualname": "JointRivetDesignResult", "kind": "class", "doc": "<p>Represents an entity with an ID.</p>\n", "bases": "JointSelectionDesignResult"}, {"fullname": "hyperx.api.JointRivetDesignResult.__init__", "modulename": "hyperx.api", "qualname": "JointRivetDesignResult.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">jointRivetDesignResult</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">JointRivetDesignResult</span></span>)</span>"}, {"fullname": "hyperx.api.JointRivetDesignResult.RivetId", "modulename": "hyperx.api", "qualname": "JointRivetDesignResult.RivetId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.JointRivetDesignResult.RivetDiameterId", "modulename": "hyperx.api", "qualname": "JointRivetDesignResult.RivetDiameterId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.Environment", "modulename": "hyperx.api", "qualname": "Environment", "kind": "class", "doc": "<p>Represents HyperX's execution environment (where HyperX is installed).</p>\n", "bases": "abc.ABC"}, {"fullname": "hyperx.api.Environment.__init__", "modulename": "hyperx.api", "qualname": "Environment.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">environment</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">Environment</span></span>)</span>"}, {"fullname": "hyperx.api.Environment.SetLocation", "modulename": "hyperx.api", "qualname": "Environment.SetLocation", "kind": "function", "doc": "<p>Set the directory location of the HyperX binaries.</p>\n\n<ul>\n<li>This method is <em>not</em> required for Python and IronPython client application.</li>\n<li>This method is required for C# and VB.NET clients as these applications\nneed HyperX.Scripting.dll alongside its binaries.\n  :param location: Path to the binaries.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">location</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Environment.Initialize", "modulename": "hyperx.api", "qualname": "Environment.Initialize", "kind": "function", "doc": "<p>Initialize the HyperX scripting environment.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.FailureCriterionSetting", "modulename": "hyperx.api", "qualname": "FailureCriterionSetting", "kind": "class", "doc": "<p>Setting for a Failure Criteria.</p>\n", "bases": "FailureSetting"}, {"fullname": "hyperx.api.FailureCriterionSetting.__init__", "modulename": "hyperx.api", "qualname": "FailureCriterionSetting.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">failureCriterionSetting</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">FailureCriterionSetting</span></span>)</span>"}, {"fullname": "hyperx.api.FailureModeSetting", "modulename": "hyperx.api", "qualname": "FailureModeSetting", "kind": "class", "doc": "<p>Setting for a Failure Mode.</p>\n", "bases": "FailureSetting"}, {"fullname": "hyperx.api.FailureModeSetting.__init__", "modulename": "hyperx.api", "qualname": "FailureModeSetting.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">failureModeSetting</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">FailureModeSetting</span></span>)</span>"}, {"fullname": "hyperx.api.HelperFunctions", "modulename": "hyperx.api", "qualname": "HelperFunctions", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "abc.ABC"}, {"fullname": "hyperx.api.HelperFunctions.__init__", "modulename": "hyperx.api", "qualname": "HelperFunctions.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">helperFunctions</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">HelperFunctions</span></span>)</span>"}, {"fullname": "hyperx.api.HelperFunctions.NullableSingle", "modulename": "hyperx.api", "qualname": "HelperFunctions.NullableSingle", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">input</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.IBulkUpdatableEntity", "modulename": "hyperx.api", "qualname": "IBulkUpdatableEntity", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "hyperx.api.IBulkUpdatableEntity.__init__", "modulename": "hyperx.api", "qualname": "IBulkUpdatableEntity.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">iBulkUpdatableEntity</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">IBulkUpdatableEntity</span></span>)</span>"}, {"fullname": "hyperx.api.LaminatePlyData", "modulename": "hyperx.api", "qualname": "LaminatePlyData", "kind": "class", "doc": "<p>Per ply data for Laminate materials</p>\n"}, {"fullname": "hyperx.api.LaminatePlyData.__init__", "modulename": "hyperx.api", "qualname": "LaminatePlyData.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">laminatePlyData</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">LaminatePlyData</span></span>)</span>"}, {"fullname": "hyperx.api.LaminatePlyData.MaterialId", "modulename": "hyperx.api", "qualname": "LaminatePlyData.MaterialId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.LaminatePlyData.PlyId", "modulename": "hyperx.api", "qualname": "LaminatePlyData.PlyId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.LaminatePlyData.PlyMaterialId", "modulename": "hyperx.api", "qualname": "LaminatePlyData.PlyMaterialId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.LaminatePlyData.PlyMaterialType", "modulename": "hyperx.api", "qualname": "LaminatePlyData.PlyMaterialType", "kind": "variable", "doc": "<p>Represents a material's type.</p>\n", "annotation": ": hyperx.api.types.MaterialType"}, {"fullname": "hyperx.api.LaminatePlyData.Angle", "modulename": "hyperx.api", "qualname": "LaminatePlyData.Angle", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LaminatePlyData.Thickness", "modulename": "hyperx.api", "qualname": "LaminatePlyData.Thickness", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.LaminatePlyData.IsFabric", "modulename": "hyperx.api", "qualname": "LaminatePlyData.IsFabric", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LaminatePlyData.FamilyPlyId", "modulename": "hyperx.api", "qualname": "LaminatePlyData.FamilyPlyId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.LaminatePlyData.OriginalPlyId", "modulename": "hyperx.api", "qualname": "LaminatePlyData.OriginalPlyId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.LaminatePlyData.OriginalFamilyPlyId", "modulename": "hyperx.api", "qualname": "LaminatePlyData.OriginalFamilyPlyId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.LaminatePlyData.DisplaySequenceId", "modulename": "hyperx.api", "qualname": "LaminatePlyData.DisplaySequenceId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.LaminatePlyData.PlyStiffenerSubType", "modulename": "hyperx.api", "qualname": "LaminatePlyData.PlyStiffenerSubType", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.PlyStiffenerSubType"}, {"fullname": "hyperx.api.LaminatePlyData.Object1", "modulename": "hyperx.api", "qualname": "LaminatePlyData.Object1", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LaminatePlyData.Object2", "modulename": "hyperx.api", "qualname": "LaminatePlyData.Object2", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LaminatePlyData.Object3", "modulename": "hyperx.api", "qualname": "LaminatePlyData.Object3", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LaminatePlyData.IsInverted", "modulename": "hyperx.api", "qualname": "LaminatePlyData.IsInverted", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LaminatePlyData.IsFullStructure", "modulename": "hyperx.api", "qualname": "LaminatePlyData.IsFullStructure", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LaminatePlyData.UseTrueFiberDirection", "modulename": "hyperx.api", "qualname": "LaminatePlyData.UseTrueFiberDirection", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LaminatePlyData.IsInFoot", "modulename": "hyperx.api", "qualname": "LaminatePlyData.IsInFoot", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LaminatePlyData.IsInWeb", "modulename": "hyperx.api", "qualname": "LaminatePlyData.IsInWeb", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LaminatePlyData.IsInCap", "modulename": "hyperx.api", "qualname": "LaminatePlyData.IsInCap", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.LaminatePlyData.SetMaterial", "modulename": "hyperx.api", "qualname": "LaminatePlyData.SetMaterial", "kind": "function", "doc": "<p>Sets the material of a ply to the matId. This includes: PlyMaterialId and PlyMaterialType, and updates Thickness and IsFabric</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">matId</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.LaminatePlyData.SetAngle", "modulename": "hyperx.api", "qualname": "LaminatePlyData.SetAngle", "kind": "function", "doc": "<p>Sets the angle of a ply</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">angle</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Beam", "modulename": "hyperx.api", "qualname": "Beam", "kind": "class", "doc": "<p>Abstract for regular Zones (not Panel Segments).</p>\n", "bases": "Zone"}, {"fullname": "hyperx.api.Beam.__init__", "modulename": "hyperx.api", "qualname": "Beam.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">beam</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">Beam</span></span>)</span>"}, {"fullname": "hyperx.api.Beam.Length", "modulename": "hyperx.api", "qualname": "Beam.Length", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Beam.Phi", "modulename": "hyperx.api", "qualname": "Beam.Phi", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Beam.K1", "modulename": "hyperx.api", "qualname": "Beam.K1", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Beam.K2", "modulename": "hyperx.api", "qualname": "Beam.K2", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Beam.ReferencePlane", "modulename": "hyperx.api", "qualname": "Beam.ReferencePlane", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.ReferencePlaneBeam"}, {"fullname": "hyperx.api.ZoneBulkUpdaterBase", "modulename": "hyperx.api", "qualname": "ZoneBulkUpdaterBase", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "BulkUpdaterBase"}, {"fullname": "hyperx.api.ZoneBulkUpdaterBase.__init__", "modulename": "hyperx.api", "qualname": "ZoneBulkUpdaterBase.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">zoneBulkUpdaterBase</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">ZoneBulkUpdaterBase</span><span class=\"p\">[]</span></span>)</span>"}, {"fullname": "hyperx.api.BeamBulkUpdater", "modulename": "hyperx.api", "qualname": "BeamBulkUpdater", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "ZoneBulkUpdaterBase"}, {"fullname": "hyperx.api.BeamBulkUpdater.__init__", "modulename": "hyperx.api", "qualname": "BeamBulkUpdater.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">beamBulkUpdater</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">BeamBulkUpdater</span></span>)</span>"}, {"fullname": "hyperx.api.BeamBulkUpdater.GetBulkUpdater", "modulename": "hyperx.api", "qualname": "BeamBulkUpdater.GetBulkUpdater", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">application</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Application</span>,</span><span class=\"param\">\t<span class=\"n\">items</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Beam</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">BeamBulkUpdater</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.Panel", "modulename": "hyperx.api", "qualname": "Panel", "kind": "class", "doc": "<p>Abstract for regular Zones (not Panel Segments).</p>\n", "bases": "Zone"}, {"fullname": "hyperx.api.Panel.__init__", "modulename": "hyperx.api", "qualname": "Panel.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">panel</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">Panel</span></span>)</span>"}, {"fullname": "hyperx.api.Panel.Area", "modulename": "hyperx.api", "qualname": "Panel.Area", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Panel.ReferencePlane", "modulename": "hyperx.api", "qualname": "Panel.ReferencePlane", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.ReferencePlanePanel"}, {"fullname": "hyperx.api.Panel.AddedOffset", "modulename": "hyperx.api", "qualname": "Panel.AddedOffset", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Panel.YSpan", "modulename": "hyperx.api", "qualname": "Panel.YSpan", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Panel.IsCurved", "modulename": "hyperx.api", "qualname": "Panel.IsCurved", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.Panel.Radius", "modulename": "hyperx.api", "qualname": "Panel.Radius", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Panel.IsFullCylinder", "modulename": "hyperx.api", "qualname": "Panel.IsFullCylinder", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.Panel.BucklingMode", "modulename": "hyperx.api", "qualname": "Panel.BucklingMode", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.ZoneBucklingMode"}, {"fullname": "hyperx.api.Panel.PerformLocalPostbuckling", "modulename": "hyperx.api", "qualname": "Panel.PerformLocalPostbuckling", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.Panel.A11Required", "modulename": "hyperx.api", "qualname": "Panel.A11Required", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Panel.A22Required", "modulename": "hyperx.api", "qualname": "Panel.A22Required", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Panel.A33Required", "modulename": "hyperx.api", "qualname": "Panel.A33Required", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Panel.D11Required", "modulename": "hyperx.api", "qualname": "Panel.D11Required", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Panel.D22Required", "modulename": "hyperx.api", "qualname": "Panel.D22Required", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Panel.D33Required", "modulename": "hyperx.api", "qualname": "Panel.D33Required", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Panel.A11Auto", "modulename": "hyperx.api", "qualname": "Panel.A11Auto", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Panel.A22Auto", "modulename": "hyperx.api", "qualname": "Panel.A22Auto", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Panel.A33Auto", "modulename": "hyperx.api", "qualname": "Panel.A33Auto", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Panel.D11Auto", "modulename": "hyperx.api", "qualname": "Panel.D11Auto", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Panel.D22Auto", "modulename": "hyperx.api", "qualname": "Panel.D22Auto", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Panel.D33Auto", "modulename": "hyperx.api", "qualname": "Panel.D33Auto", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Panel.Ey", "modulename": "hyperx.api", "qualname": "Panel.Ey", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Panel.Kx", "modulename": "hyperx.api", "qualname": "Panel.Kx", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Panel.Ky", "modulename": "hyperx.api", "qualname": "Panel.Ky", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.Panel.HoneycombCoreAngle", "modulename": "hyperx.api", "qualname": "Panel.HoneycombCoreAngle", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "hyperx.api.PanelBulkUpdater", "modulename": "hyperx.api", "qualname": "PanelBulkUpdater", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "ZoneBulkUpdaterBase"}, {"fullname": "hyperx.api.PanelBulkUpdater.__init__", "modulename": "hyperx.api", "qualname": "PanelBulkUpdater.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">panelBulkUpdater</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">PanelBulkUpdater</span></span>)</span>"}, {"fullname": "hyperx.api.PanelBulkUpdater.GetBulkUpdater", "modulename": "hyperx.api", "qualname": "PanelBulkUpdater.GetBulkUpdater", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">application</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Application</span>,</span><span class=\"param\">\t<span class=\"n\">items</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Panel</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">PanelBulkUpdater</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.PanelSegmentBulkUpdater", "modulename": "hyperx.api", "qualname": "PanelSegmentBulkUpdater", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "ZoneBulkUpdaterBase"}, {"fullname": "hyperx.api.PanelSegmentBulkUpdater.__init__", "modulename": "hyperx.api", "qualname": "PanelSegmentBulkUpdater.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">panelSegmentBulkUpdater</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">PanelSegmentBulkUpdater</span></span>)</span>"}, {"fullname": "hyperx.api.PanelSegmentBulkUpdater.GetBulkUpdater", "modulename": "hyperx.api", "qualname": "PanelSegmentBulkUpdater.GetBulkUpdater", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">application</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Application</span>,</span><span class=\"param\">\t<span class=\"n\">items</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">PanelSegment</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">PanelSegmentBulkUpdater</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.ZoneBulkUpdater", "modulename": "hyperx.api", "qualname": "ZoneBulkUpdater", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "ZoneBulkUpdaterBase"}, {"fullname": "hyperx.api.ZoneBulkUpdater.__init__", "modulename": "hyperx.api", "qualname": "ZoneBulkUpdater.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">zoneBulkUpdater</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Scripting</span><span class=\"o\">.</span><span class=\"n\">ZoneBulkUpdater</span></span>)</span>"}, {"fullname": "hyperx.api.ZoneBulkUpdater.GetBulkUpdater", "modulename": "hyperx.api", "qualname": "ZoneBulkUpdater.GetBulkUpdater", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">application</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Application</span>,</span><span class=\"param\">\t<span class=\"n\">items</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Zone</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">ZoneBulkUpdater</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.types", "modulename": "hyperx.api.types", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "hyperx.api.types.AnalysisId", "modulename": "hyperx.api.types", "qualname": "AnalysisId", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.AnalysisId.UNKNOWN", "modulename": "hyperx.api.types", "qualname": "AnalysisId.UNKNOWN", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.UNKNOWN: 0&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.PanelBucklingFlatSimpleBCSymmetricUniaxialorBiaxial", "modulename": "hyperx.api.types", "qualname": "AnalysisId.PanelBucklingFlatSimpleBCSymmetricUniaxialorBiaxial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.PanelBucklingFlatSimpleBCSymmetricUniaxialorBiaxial: 1&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.PanelBucklingFlatSimpleBCUniaxialorBiaxial", "modulename": "hyperx.api.types", "qualname": "AnalysisId.PanelBucklingFlatSimpleBCUniaxialorBiaxial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.PanelBucklingFlatSimpleBCUniaxialorBiaxial: 2&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.PanelBucklingFlatSimpleBCShear", "modulename": "hyperx.api.types", "qualname": "AnalysisId.PanelBucklingFlatSimpleBCShear", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.PanelBucklingFlatSimpleBCShear: 3&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.PanelBucklingFlatSimpleBCSymmUniaxialorBiaxialwShearInteraction", "modulename": "hyperx.api.types", "qualname": "AnalysisId.PanelBucklingFlatSimpleBCSymmUniaxialorBiaxialwShearInteraction", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.PanelBucklingFlatSimpleBCSymmUniaxialorBiaxialwShearInteraction: 4&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.PanelBucklingFlatSimpleBCUniaxialorBiaxialwShearInteraction", "modulename": "hyperx.api.types", "qualname": "AnalysisId.PanelBucklingFlatSimpleBCUniaxialorBiaxialwShearInteraction", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.PanelBucklingFlatSimpleBCUniaxialorBiaxialwShearInteraction: 5&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.PanelBucklingFlatSimpleBCSymmUniaxialorBiaxialwTSFtransverseshearflexibility", "modulename": "hyperx.api.types", "qualname": "AnalysisId.PanelBucklingFlatSimpleBCSymmUniaxialorBiaxialwTSFtransverseshearflexibility", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.PanelBucklingFlatSimpleBCSymmUniaxialorBiaxialwTSFtransverseshearflexibility: 6&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.PanelBucklingFlatSimpleBCUniaxialorBiaxialwTSF", "modulename": "hyperx.api.types", "qualname": "AnalysisId.PanelBucklingFlatSimpleBCUniaxialorBiaxialwTSF", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.PanelBucklingFlatSimpleBCUniaxialorBiaxialwTSF: 7&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.PanelBucklingFlatSimpleBCShearwTSFTransverseShearFlexibility", "modulename": "hyperx.api.types", "qualname": "AnalysisId.PanelBucklingFlatSimpleBCShearwTSFTransverseShearFlexibility", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.PanelBucklingFlatSimpleBCShearwTSFTransverseShearFlexibility: 8&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.PanelBucklingFlatSimpleBCUniaxialorBiaxialwTSFShearInteraction", "modulename": "hyperx.api.types", "qualname": "AnalysisId.PanelBucklingFlatSimpleBCUniaxialorBiaxialwTSFShearInteraction", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.PanelBucklingFlatSimpleBCUniaxialorBiaxialwTSFShearInteraction: 9&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.PanelBucklingSandwichwTSF", "modulename": "hyperx.api.types", "qualname": "AnalysisId.PanelBucklingSandwichwTSF", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.PanelBucklingSandwichwTSF: 10&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.PanelBucklingCurvedorFlatAllBC", "modulename": "hyperx.api.types", "qualname": "AnalysisId.PanelBucklingCurvedorFlatAllBC", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.PanelBucklingCurvedorFlatAllBC: 11&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.PanelBucklingCurvedorFlatAllBCwTSFTransverseShearFlexibility", "modulename": "hyperx.api.types", "qualname": "AnalysisId.PanelBucklingCurvedorFlatAllBCwTSFTransverseShearFlexibility", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.PanelBucklingCurvedorFlatAllBCwTSFTransverseShearFlexibility: 12&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.PanelBucklingFlatSimpleBCLColumnwTransverseShearFlexibility", "modulename": "hyperx.api.types", "qualname": "AnalysisId.PanelBucklingFlatSimpleBCLColumnwTransverseShearFlexibility", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.PanelBucklingFlatSimpleBCLColumnwTransverseShearFlexibility: 13&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.PanelBucklingFlatSimpleBCTColumnonTranslationalSprings", "modulename": "hyperx.api.types", "qualname": "AnalysisId.PanelBucklingFlatSimpleBCTColumnonTranslationalSprings", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.PanelBucklingFlatSimpleBCTColumnonTranslationalSprings: 14&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.StiffenerBucklingHatScissor", "modulename": "hyperx.api.types", "qualname": "AnalysisId.StiffenerBucklingHatScissor", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.StiffenerBucklingHatScissor: 15&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.StiffenerBucklingFlexuralTorsionalArgyris", "modulename": "hyperx.api.types", "qualname": "AnalysisId.StiffenerBucklingFlexuralTorsionalArgyris", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.StiffenerBucklingFlexuralTorsionalArgyris: 16&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.StiffenerBucklingFlexuralTorsionalLevy", "modulename": "hyperx.api.types", "qualname": "AnalysisId.StiffenerBucklingFlexuralTorsionalLevy", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.StiffenerBucklingFlexuralTorsionalLevy: 17&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.PanelBucklingCurvedorFlatNASASP8007Method", "modulename": "hyperx.api.types", "qualname": "AnalysisId.PanelBucklingCurvedorFlatNASASP8007Method", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.PanelBucklingCurvedorFlatNASASP8007Method: 18&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.PanelBucklingUserDefined1", "modulename": "hyperx.api.types", "qualname": "AnalysisId.PanelBucklingUserDefined1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.PanelBucklingUserDefined1: 23&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.PanelBucklingUserDefined2", "modulename": "hyperx.api.types", "qualname": "AnalysisId.PanelBucklingUserDefined2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.PanelBucklingUserDefined2: 24&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.BeamBucklingColumnPlane1I1", "modulename": "hyperx.api.types", "qualname": "AnalysisId.BeamBucklingColumnPlane1I1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.BeamBucklingColumnPlane1I1: 25&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.BeamBucklingColumnPlane1wTSFI1", "modulename": "hyperx.api.types", "qualname": "AnalysisId.BeamBucklingColumnPlane1wTSFI1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.BeamBucklingColumnPlane1wTSFI1: 26&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.BeamBucklingColumnPlane2I2", "modulename": "hyperx.api.types", "qualname": "AnalysisId.BeamBucklingColumnPlane2I2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.BeamBucklingColumnPlane2I2: 27&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.BeamBucklingColumnPlaneMinImin", "modulename": "hyperx.api.types", "qualname": "AnalysisId.BeamBucklingColumnPlaneMinImin", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.BeamBucklingColumnPlaneMinImin: 28&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.BeamBucklingLateral", "modulename": "hyperx.api.types", "qualname": "AnalysisId.BeamBucklingLateral", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.BeamBucklingLateral: 30&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.BeamBucklingLateralTorsional", "modulename": "hyperx.api.types", "qualname": "AnalysisId.BeamBucklingLateralTorsional", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.BeamBucklingLateralTorsional: 31&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.BeamBucklingCylindricalAxialandBendingRayleighRitz", "modulename": "hyperx.api.types", "qualname": "AnalysisId.BeamBucklingCylindricalAxialandBendingRayleighRitz", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.BeamBucklingCylindricalAxialandBendingRayleighRitz: 33&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.BeamBucklingCylindricalAxialandBendingNASASP8007", "modulename": "hyperx.api.types", "qualname": "AnalysisId.BeamBucklingCylindricalAxialandBendingNASASP8007", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.BeamBucklingCylindricalAxialandBendingNASASP8007: 34&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.BeamBucklingUserDefined1", "modulename": "hyperx.api.types", "qualname": "AnalysisId.BeamBucklingUserDefined1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.BeamBucklingUserDefined1: 38&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.BeamBucklingUserDefined2", "modulename": "hyperx.api.types", "qualname": "AnalysisId.BeamBucklingUserDefined2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.BeamBucklingUserDefined2: 39&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.LocalBucklingLongitudinalDirection", "modulename": "hyperx.api.types", "qualname": "AnalysisId.LocalBucklingLongitudinalDirection", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.LocalBucklingLongitudinalDirection: 40&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.LocalBucklingShearDirection", "modulename": "hyperx.api.types", "qualname": "AnalysisId.LocalBucklingShearDirection", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.LocalBucklingShearDirection: 42&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.LocalBucklingInteraction", "modulename": "hyperx.api.types", "qualname": "AnalysisId.LocalBucklingInteraction", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.LocalBucklingInteraction: 43&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.LocalBucklingInterrivet", "modulename": "hyperx.api.types", "qualname": "AnalysisId.LocalBucklingInterrivet", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.LocalBucklingInterrivet: 44&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.LocalBucklingCripplingInteraction", "modulename": "hyperx.api.types", "qualname": "AnalysisId.LocalBucklingCripplingInteraction", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.LocalBucklingCripplingInteraction: 45&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.LocalBucklingSpacingSpanSkinBiaxialwInteraction", "modulename": "hyperx.api.types", "qualname": "AnalysisId.LocalBucklingSpacingSpanSkinBiaxialwInteraction", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.LocalBucklingSpacingSpanSkinBiaxialwInteraction: 46&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.LocalBucklingShearPermanentDeformation", "modulename": "hyperx.api.types", "qualname": "AnalysisId.LocalBucklingShearPermanentDeformation", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.LocalBucklingShearPermanentDeformation: 47&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CripplingIsotropicmethodNiuformedandextrudedsections", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CripplingIsotropicmethodNiuformedandextrudedsections", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CripplingIsotropicmethodNiuformedandextrudedsections: 50&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CripplingIsotropicmethodLTVformedandextrudedsections", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CripplingIsotropicmethodLTVformedandextrudedsections", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CripplingIsotropicmethodLTVformedandextrudedsections: 51&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CripplingCompositemethodMilHdbk173EincludingDij", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CripplingCompositemethodMilHdbk173EincludingDij", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CripplingCompositemethodMilHdbk173EincludingDij: 52&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CripplingBucklinginteractionJohnsonEuler", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CripplingBucklinginteractionJohnsonEuler", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CripplingBucklinginteractionJohnsonEuler: 53&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CripplingForcedDiagonalTension", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CripplingForcedDiagonalTension", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CripplingForcedDiagonalTension: 54&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CripplingForcedCompressionCripplingInteraction", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CripplingForcedCompressionCripplingInteraction", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CripplingForcedCompressionCripplingInteraction: 55&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CripplingUserDefined1", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CripplingUserDefined1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CripplingUserDefined1: 58&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CripplingUserDefined2", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CripplingUserDefined2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CripplingUserDefined2: 59&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.StrainLimit", "modulename": "hyperx.api.types", "qualname": "AnalysisId.StrainLimit", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.StrainLimit: 60&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CurvatureLimit", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CurvatureLimit", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CurvatureLimit: 61&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CenterDeflectionLimit", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CenterDeflectionLimit", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CenterDeflectionLimit: 62&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.StiffnessRequirementMembrane", "modulename": "hyperx.api.types", "qualname": "AnalysisId.StiffnessRequirementMembrane", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.StiffnessRequirementMembrane: 63&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.StiffnessRequirementBending", "modulename": "hyperx.api.types", "qualname": "AnalysisId.StiffnessRequirementBending", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.StiffnessRequirementBending: 64&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.FrequencyLimitPanelorBeam", "modulename": "hyperx.api.types", "qualname": "AnalysisId.FrequencyLimitPanelorBeam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.FrequencyLimitPanelorBeam: 65&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.FrequencyLimitObjectlocal", "modulename": "hyperx.api.types", "qualname": "AnalysisId.FrequencyLimitObjectlocal", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.FrequencyLimitObjectlocal: 66&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.GeometryRule1StiffenerFlangeWidthtoFlangeThicknessRatioMin", "modulename": "hyperx.api.types", "qualname": "AnalysisId.GeometryRule1StiffenerFlangeWidthtoFlangeThicknessRatioMin", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.GeometryRule1StiffenerFlangeWidthtoFlangeThicknessRatioMin: 67&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.GeometryRule2StiffenerFlangeWidthtoStiffenerHeightRatioMin", "modulename": "hyperx.api.types", "qualname": "AnalysisId.GeometryRule2StiffenerFlangeWidthtoStiffenerHeightRatioMin", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.GeometryRule2StiffenerFlangeWidthtoStiffenerHeightRatioMin: 68&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.GeometryRule3StiffenerWebThicknesstoFlangeThicknessRatioMin", "modulename": "hyperx.api.types", "qualname": "AnalysisId.GeometryRule3StiffenerWebThicknesstoFlangeThicknessRatioMin", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.GeometryRule3StiffenerWebThicknesstoFlangeThicknessRatioMin: 69&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.GeometryRule4StiffenerWebHeighttoWebThicknessRatioMax", "modulename": "hyperx.api.types", "qualname": "AnalysisId.GeometryRule4StiffenerWebHeighttoWebThicknessRatioMax", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.GeometryRule4StiffenerWebHeighttoWebThicknessRatioMax: 70&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.GeometryRule5PanelHeightMax", "modulename": "hyperx.api.types", "qualname": "AnalysisId.GeometryRule5PanelHeightMax", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.GeometryRule5PanelHeightMax: 71&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.GeometryRule40PanelWidthtoStiffenerSpacingMinofstiffeners", "modulename": "hyperx.api.types", "qualname": "AnalysisId.GeometryRule40PanelWidthtoStiffenerSpacingMinofstiffeners", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.GeometryRule40PanelWidthtoStiffenerSpacingMinofstiffeners: 72&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.GeometryRule41StiffenertoSkinAreaRatioMinMax", "modulename": "hyperx.api.types", "qualname": "AnalysisId.GeometryRule41StiffenertoSkinAreaRatioMinMax", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.GeometryRule41StiffenertoSkinAreaRatioMinMax: 73&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.GeometryRule42StiffenerEISlendernessRatioMin", "modulename": "hyperx.api.types", "qualname": "AnalysisId.GeometryRule42StiffenerEISlendernessRatioMin", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.GeometryRule42StiffenerEISlendernessRatioMin: 74&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.ThermalProtectionSystemStructureTemperatureLimit", "modulename": "hyperx.api.types", "qualname": "AnalysisId.ThermalProtectionSystemStructureTemperatureLimit", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.ThermalProtectionSystemStructureTemperatureLimit: 75&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.ThermalProtectionSystemMaterialSingleUseTemperatureLimit", "modulename": "hyperx.api.types", "qualname": "AnalysisId.ThermalProtectionSystemMaterialSingleUseTemperatureLimit", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.ThermalProtectionSystemMaterialSingleUseTemperatureLimit: 76&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.ThermalProtectionSystemMaterialMultipleUseTemperatureLimit", "modulename": "hyperx.api.types", "qualname": "AnalysisId.ThermalProtectionSystemMaterialMultipleUseTemperatureLimit", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.ThermalProtectionSystemMaterialMultipleUseTemperatureLimit: 77&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.ThermalProtectionSystemCryogenicLowerTemperatureLimit", "modulename": "hyperx.api.types", "qualname": "AnalysisId.ThermalProtectionSystemCryogenicLowerTemperatureLimit", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.ThermalProtectionSystemCryogenicLowerTemperatureLimit: 78&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.WrinklingEqn1IsotropicorHoneycombCoreXYInteraction", "modulename": "hyperx.api.types", "qualname": "AnalysisId.WrinklingEqn1IsotropicorHoneycombCoreXYInteraction", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.WrinklingEqn1IsotropicorHoneycombCoreXYInteraction: 90&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.WrinklingEqn2HoneycombCoreXYInteraction", "modulename": "hyperx.api.types", "qualname": "AnalysisId.WrinklingEqn2HoneycombCoreXYInteraction", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.WrinklingEqn2HoneycombCoreXYInteraction: 91&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.WrinklingVinsonHoneycombXYInteraction", "modulename": "hyperx.api.types", "qualname": "AnalysisId.WrinklingVinsonHoneycombXYInteraction", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.WrinklingVinsonHoneycombXYInteraction: 92&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.IntracellDimplingXYInteraction", "modulename": "hyperx.api.types", "qualname": "AnalysisId.IntracellDimplingXYInteraction", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.IntracellDimplingXYInteraction: 94&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.SandwichFaceUserDefined1", "modulename": "hyperx.api.types", "qualname": "AnalysisId.SandwichFaceUserDefined1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.SandwichFaceUserDefined1: 99&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CrushingConcentratedLoad", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CrushingConcentratedLoad", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CrushingConcentratedLoad: 100&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CrushingFlexuralBendingLoad", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CrushingFlexuralBendingLoad", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CrushingFlexuralBendingLoad: 101&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CrushingJointSupportLoad", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CrushingJointSupportLoad", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CrushingJointSupportLoad: 102&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.SandwichFlatwiseTension", "modulename": "hyperx.api.types", "qualname": "AnalysisId.SandwichFlatwiseTension", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.SandwichFlatwiseTension: 103&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.SandwichFlatwiseTensionwInterlaminarShearInteraction", "modulename": "hyperx.api.types", "qualname": "AnalysisId.SandwichFlatwiseTensionwInterlaminarShearInteraction", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.SandwichFlatwiseTensionwInterlaminarShearInteraction: 104&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.ShearCrimpingMinXYHexcel", "modulename": "hyperx.api.types", "qualname": "AnalysisId.ShearCrimpingMinXYHexcel", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.ShearCrimpingMinXYHexcel: 105&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.ShearCrimpingMinPrincipalStressHexcel", "modulename": "hyperx.api.types", "qualname": "AnalysisId.ShearCrimpingMinPrincipalStressHexcel", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.ShearCrimpingMinPrincipalStressHexcel: 106&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.ShearStrengthXLongitudinaldirectionHexcel", "modulename": "hyperx.api.types", "qualname": "AnalysisId.ShearStrengthXLongitudinaldirectionHexcel", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.ShearStrengthXLongitudinaldirectionHexcel: 107&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.ShearStrengthYTransversedirectionHexcel", "modulename": "hyperx.api.types", "qualname": "AnalysisId.ShearStrengthYTransversedirectionHexcel", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.ShearStrengthYTransversedirectionHexcel: 108&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.ShearStrengthInteractionQuadraticBasic", "modulename": "hyperx.api.types", "qualname": "AnalysisId.ShearStrengthInteractionQuadraticBasic", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.ShearStrengthInteractionQuadraticBasic: 109&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.IsotropicStrengthLongitudinalDirection", "modulename": "hyperx.api.types", "qualname": "AnalysisId.IsotropicStrengthLongitudinalDirection", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.IsotropicStrengthLongitudinalDirection: 110&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.IsotropicStrengthTransverseDirection", "modulename": "hyperx.api.types", "qualname": "AnalysisId.IsotropicStrengthTransverseDirection", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.IsotropicStrengthTransverseDirection: 111&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.IsotropicStrengthShearDirection", "modulename": "hyperx.api.types", "qualname": "AnalysisId.IsotropicStrengthShearDirection", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.IsotropicStrengthShearDirection: 112&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.IsotropicStrengthVonMisesHillInteractionYieldCriterion", "modulename": "hyperx.api.types", "qualname": "AnalysisId.IsotropicStrengthVonMisesHillInteractionYieldCriterion", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.IsotropicStrengthVonMisesHillInteractionYieldCriterion: 113&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.IsotropicStrengthMaxShearCriterion", "modulename": "hyperx.api.types", "qualname": "AnalysisId.IsotropicStrengthMaxShearCriterion", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.IsotropicStrengthMaxShearCriterion: 114&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.IsotropicStrengthMaxPrincipalStressCriterion", "modulename": "hyperx.api.types", "qualname": "AnalysisId.IsotropicStrengthMaxPrincipalStressCriterion", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.IsotropicStrengthMaxPrincipalStressCriterion: 115&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.IsotropicStrengthNaca2661MaxShearStress", "modulename": "hyperx.api.types", "qualname": "AnalysisId.IsotropicStrengthNaca2661MaxShearStress", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.IsotropicStrengthNaca2661MaxShearStress: 116&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MicromechanicsMaxStress1stSubcell", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MicromechanicsMaxStress1stSubcell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MicromechanicsMaxStress1stSubcell: 120&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MicromechanicsMaxStrain1stSubcell", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MicromechanicsMaxStrain1stSubcell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MicromechanicsMaxStrain1stSubcell: 121&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MicromechanicsTsaiHill1stSubcell", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MicromechanicsTsaiHill1stSubcell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MicromechanicsTsaiHill1stSubcell: 122&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MicromechanicsSIFT1stSubcell", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MicromechanicsSIFT1stSubcell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MicromechanicsSIFT1stSubcell: 123&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MicromechanicsMaxStressAverageUnitCell", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MicromechanicsMaxStressAverageUnitCell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MicromechanicsMaxStressAverageUnitCell: 124&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MicromechanicsMaxStrainAverageUnitCell", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MicromechanicsMaxStrainAverageUnitCell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MicromechanicsMaxStrainAverageUnitCell: 125&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MicromechanicsTsaiHillAverageUnitCell", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MicromechanicsTsaiHillAverageUnitCell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MicromechanicsTsaiHillAverageUnitCell: 126&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MicromechanicsSIFTAverageUnitCell", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MicromechanicsSIFTAverageUnitCell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MicromechanicsSIFTAverageUnitCell: 127&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MicromechanicsMaxStressAllUnitCell", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MicromechanicsMaxStressAllUnitCell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MicromechanicsMaxStressAllUnitCell: 128&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MicromechanicsMaxStrainAllUnitCell", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MicromechanicsMaxStrainAllUnitCell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MicromechanicsMaxStrainAllUnitCell: 129&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MicromechanicsTsaiHillInteractionAllUnitCell", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MicromechanicsTsaiHillInteractionAllUnitCell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MicromechanicsTsaiHillInteractionAllUnitCell: 130&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MicromechanicsSIFTAllUnitCell", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MicromechanicsSIFTAllUnitCell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MicromechanicsSIFTAllUnitCell: 131&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthMaxStrain1Direction", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthMaxStrain1Direction", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthMaxStrain1Direction: 135&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthMaxStrain2Direction", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthMaxStrain2Direction", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthMaxStrain2Direction: 136&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthMaxStrain12Direction", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthMaxStrain12Direction", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthMaxStrain12Direction: 137&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthMaxStress1Direction", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthMaxStress1Direction", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthMaxStress1Direction: 138&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthMaxStress2Direction", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthMaxStress2Direction", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthMaxStress2Direction: 139&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthMaxStress12Direction", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthMaxStress12Direction", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthMaxStress12Direction: 140&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthTsaiHillInteraction", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthTsaiHillInteraction", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthTsaiHillInteraction: 141&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthTsaiWuInteraction", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthTsaiWuInteraction", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthTsaiWuInteraction: 142&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthTsaiHahnInteraction", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthTsaiHahnInteraction", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthTsaiHahnInteraction: 143&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthHoffmanInteraction", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthHoffmanInteraction", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthHoffmanInteraction: 144&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthHashinMatrixCracking", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthHashinMatrixCracking", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthHashinMatrixCracking: 145&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthHashinFiberFailure", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthHashinFiberFailure", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthHashinFiberFailure: 146&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthLaRC03MatrixCracking", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthLaRC03MatrixCracking", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthLaRC03MatrixCracking: 147&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthLaRC03FiberFailure", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthLaRC03FiberFailure", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthLaRC03FiberFailure: 148&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthTsaiWuStrainPlyAllowables", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthTsaiWuStrainPlyAllowables", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthTsaiWuStrainPlyAllowables: 149&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthTsaiWuStrainLaminateAllowables", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthTsaiWuStrainLaminateAllowables", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthTsaiWuStrainLaminateAllowables: 150&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthOpenHoleTensionOHTMaxStrain1Direction", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthOpenHoleTensionOHTMaxStrain1Direction", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthOpenHoleTensionOHTMaxStrain1Direction: 151&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthOpenHoleCompressionOHCMaxStrain1Direction", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthOpenHoleCompressionOHCMaxStrain1Direction", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthOpenHoleCompressionOHCMaxStrain1Direction: 152&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthInterlaminarShearKick", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthInterlaminarShearKick", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthInterlaminarShearKick: 153&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthPuck2dInterFiberFracture", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthPuck2dInterFiberFracture", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthPuck2dInterFiberFracture: 154&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthPuck2dFiberFracture", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthPuck2dFiberFracture", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthPuck2dFiberFracture: 155&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthPuck3dInterFiberFracture", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthPuck3dInterFiberFracture", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthPuck3dInterFiberFracture: 156&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthPuck3dFiberFracture", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthPuck3dFiberFracture", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthPuck3dFiberFracture: 157&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthUserDefined1", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthUserDefined1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthUserDefined1: 158&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthUserDefined2", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthUserDefined2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthUserDefined2: 159&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBondedEdgeDelaminationOnset", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBondedEdgeDelaminationOnset", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBondedEdgeDelaminationOnset: 160&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBondedEdgeDelamination", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBondedEdgeDelamination", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBondedEdgeDelamination: 161&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBondedFracturePrincipalTransverse", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBondedFracturePrincipalTransverse", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBondedFracturePrincipalTransverse: 162&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBondedFractureMaxStressorStrain1direction", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBondedFractureMaxStressorStrain1direction", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBondedFractureMaxStressorStrain1direction: 163&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBondedDelaminationPeelDominated", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBondedDelaminationPeelDominated", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBondedDelaminationPeelDominated: 164&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBondedDelaminationPeelandTransverseShear1", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBondedDelaminationPeelandTransverseShear1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBondedDelaminationPeelandTransverseShear1: 165&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBondedDelaminationPeelandTransverseShear2", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBondedDelaminationPeelandTransverseShear2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBondedDelaminationPeelandTransverseShear2: 166&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBondedDelaminationTongPeelTransverseShearAxial1", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBondedDelaminationTongPeelTransverseShearAxial1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBondedDelaminationTongPeelTransverseShearAxial1: 167&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBondedDelaminationTongPeelTransverseShearAxial2", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBondedDelaminationTongPeelTransverseShearAxial2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBondedDelaminationTongPeelTransverseShearAxial2: 168&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBondedDelaminationTongPeelTransverseShearAxial3", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBondedDelaminationTongPeelTransverseShearAxial3", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBondedDelaminationTongPeelTransverseShearAxial3: 169&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBondedDelaminationTongPeelTransverseShearAxial4", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBondedDelaminationTongPeelTransverseShearAxial4", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBondedDelaminationTongPeelTransverseShearAxial4: 170&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBondedDelaminationTongPeelTransverseShearAxial5", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBondedDelaminationTongPeelTransverseShearAxial5", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBondedDelaminationTongPeelTransverseShearAxial5: 171&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBondedDelaminationTongPeelTransverseShearAxial6", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBondedDelaminationTongPeelTransverseShearAxial6", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBondedDelaminationTongPeelTransverseShearAxial6: 172&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBondedDelaminationPeelLongitudinalTransverseShear", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBondedDelaminationPeelLongitudinalTransverseShear", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBondedDelaminationPeelLongitudinalTransverseShear: 173&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBondedDelaminationPeelLongitudinalTransverseShearAxialandTransverse", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBondedDelaminationPeelLongitudinalTransverseShearAxialandTransverse", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBondedDelaminationPeelLongitudinalTransverseShearAxialandTransverse: 174&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBondedAdhesivePeelDominated", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBondedAdhesivePeelDominated", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBondedAdhesivePeelDominated: 175&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBondedAdhesiveVonMisesStrain", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBondedAdhesiveVonMisesStrain", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBondedAdhesiveVonMisesStrain: 176&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBondedAdhesiveMaximumPrincipalStress", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBondedAdhesiveMaximumPrincipalStress", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBondedAdhesiveMaximumPrincipalStress: 177&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBondedAdhesivePeelLongitudinalTransverseShear", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBondedAdhesivePeelLongitudinalTransverseShear", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBondedAdhesivePeelLongitudinalTransverseShear: 178&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBondedAdhesiveLongitudinalTransverseShearStress", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBondedAdhesiveLongitudinalTransverseShearStress", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBondedAdhesiveLongitudinalTransverseShearStress: 179&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBondedAdhesiveLongitudinalTransverseShearStrain", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBondedAdhesiveLongitudinalTransverseShearStrain", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBondedAdhesiveLongitudinalTransverseShearStrain: 180&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBondedDelaminationPropagationModeI", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBondedDelaminationPropagationModeI", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBondedDelaminationPropagationModeI: 181&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBondedDelaminationPropagationModeII", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBondedDelaminationPropagationModeII", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBondedDelaminationPropagationModeII: 182&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBondedDelaminationPropogationPowerLaw", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBondedDelaminationPropogationPowerLaw", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBondedDelaminationPropogationPowerLaw: 183&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBondedDelaminationPropogationBKcriterion", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBondedDelaminationPropogationBKcriterion", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBondedDelaminationPropogationBKcriterion: 184&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBondedLimitsOfApplicability", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBondedLimitsOfApplicability", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBondedLimitsOfApplicability: 185&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBoltedSingleHoleBJSFMloadedandfarfield", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBoltedSingleHoleBJSFMloadedandfarfield", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBoltedSingleHoleBJSFMloadedandfarfield: 190&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBoltedSingleHoleBJSFMBearingOnly", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBoltedSingleHoleBJSFMBearingOnly", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBoltedSingleHoleBJSFMBearingOnly: 191&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBoltedSingleHoleBJSFMBypassOnly", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBoltedSingleHoleBJSFMBypassOnly", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBoltedSingleHoleBJSFMBypassOnly: 192&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBoltedSingleHoleBearingIsotropicAllowable", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBoltedSingleHoleBearingIsotropicAllowable", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBoltedSingleHoleBearingIsotropicAllowable: 193&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBoltedUserDefined1", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBoltedUserDefined1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBoltedUserDefined1: 198&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointBoltedUserDefined2", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointBoltedUserDefined2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointBoltedUserDefined2: 199&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.ProgressiveFailureInverseABDTraceMethod", "modulename": "hyperx.api.types", "qualname": "AnalysisId.ProgressiveFailureInverseABDTraceMethod", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.ProgressiveFailureInverseABDTraceMethod: 201&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.ProgressiveFailureAlternativeMethod", "modulename": "hyperx.api.types", "qualname": "AnalysisId.ProgressiveFailureAlternativeMethod", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.ProgressiveFailureAlternativeMethod: 202&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthInterlaminarShear", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthInterlaminarShear", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthInterlaminarShear: 203&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthFlatwiseTension", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthFlatwiseTension", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthFlatwiseTension: 204&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.SandwichCoreUserDefined1", "modulename": "hyperx.api.types", "qualname": "AnalysisId.SandwichCoreUserDefined1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.SandwichCoreUserDefined1: 208&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.SandwichCoreUserDefined2", "modulename": "hyperx.api.types", "qualname": "AnalysisId.SandwichCoreUserDefined2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.SandwichCoreUserDefined2: 209&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointWebNormalCompressionorPulloff", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointWebNormalCompressionorPulloff", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointWebNormalCompressionorPulloff: 210&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointWebShear", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointWebShear", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointWebShear: 211&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.JointWebInteraction", "modulename": "hyperx.api.types", "qualname": "AnalysisId.JointWebInteraction", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.JointWebInteraction: 212&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.GeometryRule71StiffenerAllLaminatesThicknesstoHoleDiameterRatioMinMaxRepairAngle", "modulename": "hyperx.api.types", "qualname": "AnalysisId.GeometryRule71StiffenerAllLaminatesThicknesstoHoleDiameterRatioMinMaxRepairAngle", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.GeometryRule71StiffenerAllLaminatesThicknesstoHoleDiameterRatioMinMaxRepairAngle: 216&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.GeometryRule72StiffenerWebRepairThicknesstoHoleDiameterRatioMaxRepairAngle", "modulename": "hyperx.api.types", "qualname": "AnalysisId.GeometryRule72StiffenerWebRepairThicknesstoHoleDiameterRatioMaxRepairAngle", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.GeometryRule72StiffenerWebRepairThicknesstoHoleDiameterRatioMaxRepairAngle: 217&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.GeometryRule73StiffenerSkinFlangeRepairThicknesstoHoleRatioMaxRepairAngle", "modulename": "hyperx.api.types", "qualname": "AnalysisId.GeometryRule73StiffenerSkinFlangeRepairThicknesstoHoleRatioMaxRepairAngle", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.GeometryRule73StiffenerSkinFlangeRepairThicknesstoHoleRatioMaxRepairAngle: 218&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.GeometryRule74StiffenerHeightMinRepairAngle", "modulename": "hyperx.api.types", "qualname": "AnalysisId.GeometryRule74StiffenerHeightMinRepairAngle", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.GeometryRule74StiffenerHeightMinRepairAngle: 219&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.GeometryRule75StiffenerFlangeWidthMinRepairAngle", "modulename": "hyperx.api.types", "qualname": "AnalysisId.GeometryRule75StiffenerFlangeWidthMinRepairAngle", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.GeometryRule75StiffenerFlangeWidthMinRepairAngle: 220&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthLaminateCompressionPristine", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthLaminateCompressionPristine", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthLaminateCompressionPristine: 221&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthLaminateCompressionAfterImpactCAI", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthLaminateCompressionAfterImpactCAI", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthLaminateCompressionAfterImpactCAI: 222&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthLaminateCompressionOpenHoleOHC", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthLaminateCompressionOpenHoleOHC", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthLaminateCompressionOpenHoleOHC: 223&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthLaminateCompressionFilledHoleFHC", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthLaminateCompressionFilledHoleFHC", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthLaminateCompressionFilledHoleFHC: 224&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthLaminateCompressionBVID", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthLaminateCompressionBVID", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthLaminateCompressionBVID: 225&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthLaminateTensionPristine", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthLaminateTensionPristine", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthLaminateTensionPristine: 226&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthLaminateTensionAfterImpactTAI", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthLaminateTensionAfterImpactTAI", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthLaminateTensionAfterImpactTAI: 227&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthLaminateTensionOpenHoleOHT", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthLaminateTensionOpenHoleOHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthLaminateTensionOpenHoleOHT: 228&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthLaminateTensionFilledHoleFHT", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthLaminateTensionFilledHoleFHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthLaminateTensionFilledHoleFHT: 229&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthLaminateShearPristine", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthLaminateShearPristine", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthLaminateShearPristine: 230&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.CompositeStrengthLaminateShearAfterImpactSAI", "modulename": "hyperx.api.types", "qualname": "AnalysisId.CompositeStrengthLaminateShearAfterImpactSAI", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.CompositeStrengthLaminateShearAfterImpactSAI: 231&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.IsotropicStrengthUltimateMaxPrincipalStressCriterion", "modulename": "hyperx.api.types", "qualname": "AnalysisId.IsotropicStrengthUltimateMaxPrincipalStressCriterion", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.IsotropicStrengthUltimateMaxPrincipalStressCriterion: 315&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.IsotropicStrengthVonMisesInteractionYieldCriterion", "modulename": "hyperx.api.types", "qualname": "AnalysisId.IsotropicStrengthVonMisesInteractionYieldCriterion", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.IsotropicStrengthVonMisesInteractionYieldCriterion: 316&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MStensionOnlyYield", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MStensionOnlyYield", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MStensionOnlyYield: 330&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MStensionOnlyUltimate", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MStensionOnlyUltimate", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MStensionOnlyUltimate: 331&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MSjointSeparation", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MSjointSeparation", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MSjointSeparation: 333&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MSjointSlipUltimate", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MSjointSlipUltimate", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MSjointSlipUltimate: 334&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MSshearOnlyYield", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MSshearOnlyYield", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MSshearOnlyYield: 335&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MSshearOnlyUltimate", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MSshearOnlyUltimate", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MSshearOnlyUltimate: 336&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MScombinedTSBlinear", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MScombinedTSBlinear", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MScombinedTSBlinear: 337&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MScombinedTSBplastic", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MScombinedTSBplastic", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MScombinedTSBplastic: 338&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MSnutThreadShearUltimate", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MSnutThreadShearUltimate", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MSnutThreadShearUltimate: 339&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MSinsertInternalThreadShearUltimate", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MSinsertInternalThreadShearUltimate", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MSinsertInternalThreadShearUltimate: 340&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MSinsertExternalThreadShearUltimate", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MSinsertExternalThreadShearUltimate", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MSinsertExternalThreadShearUltimate: 341&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MSbearingYield", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MSbearingYield", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MSbearingYield: 343&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MSbearingUltimate", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MSbearingUltimate", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MSbearingUltimate: 344&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MSshearoutUltimate", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MSshearoutUltimate", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MSshearoutUltimate: 345&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MShoopTensionYield", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MShoopTensionYield", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MShoopTensionYield: 346&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MShoopTensionUltimate", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MShoopTensionUltimate", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MShoopTensionUltimate: 347&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MSboltThreadShearUltimate", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MSboltThreadShearUltimate", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MSboltThreadShearUltimate: 348&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MSbendingOnlyLinear", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MSbendingOnlyLinear", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MSbendingOnlyLinear: 349&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.StaticJointStrengthYield", "modulename": "hyperx.api.types", "qualname": "AnalysisId.StaticJointStrengthYield", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.StaticJointStrengthYield: 350&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.StaticJointStrengthUltimate", "modulename": "hyperx.api.types", "qualname": "AnalysisId.StaticJointStrengthUltimate", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.StaticJointStrengthUltimate: 351&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.RivetShearStrength", "modulename": "hyperx.api.types", "qualname": "AnalysisId.RivetShearStrength", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.RivetShearStrength: 352&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.PreventRivetShearFailureYield", "modulename": "hyperx.api.types", "qualname": "AnalysisId.PreventRivetShearFailureYield", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.PreventRivetShearFailureYield: 353&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.PreventRivetShearFailureUltimate", "modulename": "hyperx.api.types", "qualname": "AnalysisId.PreventRivetShearFailureUltimate", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.PreventRivetShearFailureUltimate: 354&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.PreventTensionLoadUltimate", "modulename": "hyperx.api.types", "qualname": "AnalysisId.PreventTensionLoadUltimate", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.PreventTensionLoadUltimate: 355&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.PreventTensionLoadLimit", "modulename": "hyperx.api.types", "qualname": "AnalysisId.PreventTensionLoadLimit", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.PreventTensionLoadLimit: 356&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.BearingBypassUltimate", "modulename": "hyperx.api.types", "qualname": "AnalysisId.BearingBypassUltimate", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.BearingBypassUltimate: 357&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MSbendingOnlyPlastic", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MSbendingOnlyPlastic", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MSbendingOnlyPlastic: 358&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MScombinedTS", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MScombinedTS", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MScombinedTS: 359&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MScombinedTBLinear", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MScombinedTBLinear", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MScombinedTBLinear: 360&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.MScombinedTBPlastic", "modulename": "hyperx.api.types", "qualname": "AnalysisId.MScombinedTBPlastic", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.MScombinedTBPlastic: 361&gt;"}, {"fullname": "hyperx.api.types.AnalysisId.BearingOnlyComposite", "modulename": "hyperx.api.types", "qualname": "AnalysisId.BearingOnlyComposite", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AnalysisId.BearingOnlyComposite: 362&gt;"}, {"fullname": "hyperx.api.types.LimitUltimate", "modulename": "hyperx.api.types", "qualname": "LimitUltimate", "kind": "class", "doc": "<p>Limit vs Ultimate loads.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.LimitUltimate.Limit", "modulename": "hyperx.api.types", "qualname": "LimitUltimate.Limit", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LimitUltimate.Limit: 0&gt;"}, {"fullname": "hyperx.api.types.LimitUltimate.Ultimate", "modulename": "hyperx.api.types", "qualname": "LimitUltimate.Ultimate", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LimitUltimate.Ultimate: 1&gt;"}, {"fullname": "hyperx.api.types.MarginCode", "modulename": "hyperx.api.types", "qualname": "MarginCode", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.MarginCode.Value", "modulename": "hyperx.api.types", "qualname": "MarginCode.Value", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MarginCode.Value: 1&gt;"}, {"fullname": "hyperx.api.types.MarginCode.NA", "modulename": "hyperx.api.types", "qualname": "MarginCode.NA", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MarginCode.NA: 2&gt;"}, {"fullname": "hyperx.api.types.MarginCode.NAMaterial", "modulename": "hyperx.api.types", "qualname": "MarginCode.NAMaterial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MarginCode.NAMaterial: 3&gt;"}, {"fullname": "hyperx.api.types.MarginCode.LPB", "modulename": "hyperx.api.types", "qualname": "MarginCode.LPB", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MarginCode.LPB: 4&gt;"}, {"fullname": "hyperx.api.types.MarginCode.GeomPass", "modulename": "hyperx.api.types", "qualname": "MarginCode.GeomPass", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MarginCode.GeomPass: 5&gt;"}, {"fullname": "hyperx.api.types.MarginCode.DataReqdInfo", "modulename": "hyperx.api.types", "qualname": "MarginCode.DataReqdInfo", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MarginCode.DataReqdInfo: 6&gt;"}, {"fullname": "hyperx.api.types.MarginCode.Bounds", "modulename": "hyperx.api.types", "qualname": "MarginCode.Bounds", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MarginCode.Bounds: 7&gt;"}, {"fullname": "hyperx.api.types.MarginCode.PosLoad", "modulename": "hyperx.api.types", "qualname": "MarginCode.PosLoad", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MarginCode.PosLoad: 8&gt;"}, {"fullname": "hyperx.api.types.MarginCode.NegLoad", "modulename": "hyperx.api.types", "qualname": "MarginCode.NegLoad", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MarginCode.NegLoad: 9&gt;"}, {"fullname": "hyperx.api.types.MarginCode.Skipped", "modulename": "hyperx.api.types", "qualname": "MarginCode.Skipped", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MarginCode.Skipped: 10&gt;"}, {"fullname": "hyperx.api.types.MarginCode.HighInfo", "modulename": "hyperx.api.types", "qualname": "MarginCode.HighInfo", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MarginCode.HighInfo: 11&gt;"}, {"fullname": "hyperx.api.types.MarginCode.LowInfo", "modulename": "hyperx.api.types", "qualname": "MarginCode.LowInfo", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MarginCode.LowInfo: 12&gt;"}, {"fullname": "hyperx.api.types.MarginCode.Unknown", "modulename": "hyperx.api.types", "qualname": "MarginCode.Unknown", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MarginCode.Unknown: 13&gt;"}, {"fullname": "hyperx.api.types.MarginCode.LowFailure", "modulename": "hyperx.api.types", "qualname": "MarginCode.LowFailure", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MarginCode.LowFailure: 14&gt;"}, {"fullname": "hyperx.api.types.MarginCode.DataReqdFail", "modulename": "hyperx.api.types", "qualname": "MarginCode.DataReqdFail", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MarginCode.DataReqdFail: 15&gt;"}, {"fullname": "hyperx.api.types.MarginCode.GeomFail", "modulename": "hyperx.api.types", "qualname": "MarginCode.GeomFail", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MarginCode.GeomFail: 16&gt;"}, {"fullname": "hyperx.api.types.MarginCode.Failed", "modulename": "hyperx.api.types", "qualname": "MarginCode.Failed", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MarginCode.Failed: 17&gt;"}, {"fullname": "hyperx.api.types.MarginCode.NoData", "modulename": "hyperx.api.types", "qualname": "MarginCode.NoData", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MarginCode.NoData: 18&gt;"}, {"fullname": "hyperx.api.types.UserConstantDataType", "modulename": "hyperx.api.types", "qualname": "UserConstantDataType", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.UserConstantDataType.Invalid", "modulename": "hyperx.api.types", "qualname": "UserConstantDataType.Invalid", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;UserConstantDataType.Invalid: 0&gt;"}, {"fullname": "hyperx.api.types.UserConstantDataType.FloatingPoint", "modulename": "hyperx.api.types", "qualname": "UserConstantDataType.FloatingPoint", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;UserConstantDataType.FloatingPoint: 1&gt;"}, {"fullname": "hyperx.api.types.UserConstantDataType.OptionalFloatingPoint", "modulename": "hyperx.api.types", "qualname": "UserConstantDataType.OptionalFloatingPoint", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;UserConstantDataType.OptionalFloatingPoint: 2&gt;"}, {"fullname": "hyperx.api.types.UserConstantDataType.Integer", "modulename": "hyperx.api.types", "qualname": "UserConstantDataType.Integer", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;UserConstantDataType.Integer: 3&gt;"}, {"fullname": "hyperx.api.types.UserConstantDataType.OptionalInteger", "modulename": "hyperx.api.types", "qualname": "UserConstantDataType.OptionalInteger", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;UserConstantDataType.OptionalInteger: 4&gt;"}, {"fullname": "hyperx.api.types.UserConstantDataType.Boolean", "modulename": "hyperx.api.types", "qualname": "UserConstantDataType.Boolean", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;UserConstantDataType.Boolean: 5&gt;"}, {"fullname": "hyperx.api.types.UserConstantDataType.Selection", "modulename": "hyperx.api.types", "qualname": "UserConstantDataType.Selection", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;UserConstantDataType.Selection: 6&gt;"}, {"fullname": "hyperx.api.types.UserConstantDataType.Text", "modulename": "hyperx.api.types", "qualname": "UserConstantDataType.Text", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;UserConstantDataType.Text: 7&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Unknown", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Unknown", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Unknown: 0&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.One_Stack_Unstiffened", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.One_Stack_Unstiffened", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.One_Stack_Unstiffened: 1&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Two_Stack_Unstiffened", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Two_Stack_Unstiffened", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Two_Stack_Unstiffened: 2&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Three_Stack_Unstiffened", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Three_Stack_Unstiffened", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Three_Stack_Unstiffened: 3&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Honeycomb_Sandwich", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Honeycomb_Sandwich", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Honeycomb_Sandwich: 4&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Foam_Sandwich", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Foam_Sandwich", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Foam_Sandwich: 5&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Bonded_Trusscore_Sandwich", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Bonded_Trusscore_Sandwich", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Bonded_Trusscore_Sandwich: 6&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Fastened_Trusscore_Sandwich", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Fastened_Trusscore_Sandwich", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Fastened_Trusscore_Sandwich: 7&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Bonded_Hat", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Bonded_Hat", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Bonded_Hat: 8&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Fastened_Hat", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Fastened_Hat", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Fastened_Hat: 9&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Bonded_Twosheet_Hat", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Bonded_Twosheet_Hat", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Bonded_Twosheet_Hat: 10&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Fastened_Twosheet_Hat", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Fastened_Twosheet_Hat", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Fastened_Twosheet_Hat: 11&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Bonded_I", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Bonded_I", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Bonded_I: 15&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Bonded_T", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Bonded_T", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Bonded_T: 16&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Bonded_Z", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Bonded_Z", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Bonded_Z: 17&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Bonded_J", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Bonded_J", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Bonded_J: 18&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Bonded_C", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Bonded_C", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Bonded_C: 19&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Bonded_Angle", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Bonded_Angle", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Bonded_Angle: 20&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Bonded_I_Continuous_Flange", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Bonded_I_Continuous_Flange", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Bonded_I_Continuous_Flange: 21&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Bonded_T_Continuous_Flange", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Bonded_T_Continuous_Flange", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Bonded_T_Continuous_Flange: 22&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Bonded_J_Continuous_Flange", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Bonded_J_Continuous_Flange", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Bonded_J_Continuous_Flange: 23&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Bonded_Sandwich_I", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Bonded_Sandwich_I", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Bonded_Sandwich_I: 24&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Integral_Sandwich_Blade", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Integral_Sandwich_Blade", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Integral_Sandwich_Blade: 25&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Fastened_I", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Fastened_I", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Fastened_I: 26&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Fastened_T", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Fastened_T", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Fastened_T: 27&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Fastened_Z", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Fastened_Z", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Fastened_Z: 28&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Fastened_Angle", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Fastened_Angle", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Fastened_Angle: 29&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Integral_Blade", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Integral_Blade", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Integral_Blade: 30&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Integral_Inverted_T", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Integral_Inverted_T", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Integral_Inverted_T: 31&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Integral_Inverted_AngleL", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Integral_Inverted_AngleL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Integral_Inverted_AngleL: 32&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.I_Beam", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.I_Beam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.I_Beam: 33&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.T_Beam", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.T_Beam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.T_Beam: 34&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.C_Beam", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.C_Beam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.C_Beam: 35&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.L_Beam", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.L_Beam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.L_Beam: 36&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Z_Beam", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Z_Beam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Z_Beam: 37&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.J_Beam", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.J_Beam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.J_Beam: 38&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Cap_Beam", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Cap_Beam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Cap_Beam: 39&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Web_Beam", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Web_Beam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Web_Beam: 40&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Circular_Tube", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Circular_Tube", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Circular_Tube: 41&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Grid0", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Grid0", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Grid0: 62&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Grid90", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Grid90", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Grid90: 63&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.OrthoGrid", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.OrthoGrid", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.OrthoGrid: 64&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.WaffleGrid", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.WaffleGrid", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.WaffleGrid: 65&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.IsoGrid", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.IsoGrid", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.IsoGrid: 66&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.AngleGrid", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.AngleGrid", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.AngleGrid: 67&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.GeneralGrid", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.GeneralGrid", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.GeneralGrid: 68&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.OrthoGrid_Sandwich", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.OrthoGrid_Sandwich", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.OrthoGrid_Sandwich: 69&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.AngleGrid_Sandwich", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.AngleGrid_Sandwich", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.AngleGrid_Sandwich: 70&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Elliptical_Tube", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Elliptical_Tube", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Elliptical_Tube: 71&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Rectangular_Beam", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Rectangular_Beam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Rectangular_Beam: 72&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Reinforce_Core_Sandwich", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Reinforce_Core_Sandwich", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Reinforce_Core_Sandwich: 73&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Pultruded_Rod_Stiffened_Panel", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Pultruded_Rod_Stiffened_Panel", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Pultruded_Rod_Stiffened_Panel: 74&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Tapered_Circular_Tube", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Tapered_Circular_Tube", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Tapered_Circular_Tube: 75&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.C_Channel_Fastened", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.C_Channel_Fastened", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.C_Channel_Fastened: 220&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.I_Frame_Fastened", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.I_Frame_Fastened", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.I_Frame_Fastened: 221&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Shear_Clip_Frame_Fastened", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Shear_Clip_Frame_Fastened", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Shear_Clip_Frame_Fastened: 222&gt;"}, {"fullname": "hyperx.api.types.FamilyConceptUID.Cruciform", "modulename": "hyperx.api.types", "qualname": "FamilyConceptUID.Cruciform", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyConceptUID.Cruciform: 223&gt;"}, {"fullname": "hyperx.api.types.BeamPanelFamily", "modulename": "hyperx.api.types", "qualname": "BeamPanelFamily", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.BeamPanelFamily.Unassigned", "modulename": "hyperx.api.types", "qualname": "BeamPanelFamily.Unassigned", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;BeamPanelFamily.Unassigned: 0&gt;"}, {"fullname": "hyperx.api.types.BeamPanelFamily.Unstiffened", "modulename": "hyperx.api.types", "qualname": "BeamPanelFamily.Unstiffened", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;BeamPanelFamily.Unstiffened: 2&gt;"}, {"fullname": "hyperx.api.types.BeamPanelFamily.Corrugated", "modulename": "hyperx.api.types", "qualname": "BeamPanelFamily.Corrugated", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;BeamPanelFamily.Corrugated: 3&gt;"}, {"fullname": "hyperx.api.types.BeamPanelFamily.Uniaxial", "modulename": "hyperx.api.types", "qualname": "BeamPanelFamily.Uniaxial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;BeamPanelFamily.Uniaxial: 4&gt;"}, {"fullname": "hyperx.api.types.BeamPanelFamily.Grid", "modulename": "hyperx.api.types", "qualname": "BeamPanelFamily.Grid", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;BeamPanelFamily.Grid: 5&gt;"}, {"fullname": "hyperx.api.types.BeamPanelFamily.PRSEUS", "modulename": "hyperx.api.types", "qualname": "BeamPanelFamily.PRSEUS", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;BeamPanelFamily.PRSEUS: 6&gt;"}, {"fullname": "hyperx.api.types.BeamPanelFamily.OpenBeam", "modulename": "hyperx.api.types", "qualname": "BeamPanelFamily.OpenBeam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;BeamPanelFamily.OpenBeam: 7&gt;"}, {"fullname": "hyperx.api.types.BeamPanelFamily.RectangularBeam", "modulename": "hyperx.api.types", "qualname": "BeamPanelFamily.RectangularBeam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;BeamPanelFamily.RectangularBeam: 8&gt;"}, {"fullname": "hyperx.api.types.BeamPanelFamily.CircularBeam", "modulename": "hyperx.api.types", "qualname": "BeamPanelFamily.CircularBeam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;BeamPanelFamily.CircularBeam: 9&gt;"}, {"fullname": "hyperx.api.types.HeightSizingVariable", "modulename": "hyperx.api.types", "qualname": "HeightSizingVariable", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.HeightSizingVariable.Invalid", "modulename": "hyperx.api.types", "qualname": "HeightSizingVariable.Invalid", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;HeightSizingVariable.Invalid: 0&gt;"}, {"fullname": "hyperx.api.types.HeightSizingVariable.TotalPanelHeight", "modulename": "hyperx.api.types", "qualname": "HeightSizingVariable.TotalPanelHeight", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;HeightSizingVariable.TotalPanelHeight: 1&gt;"}, {"fullname": "hyperx.api.types.HeightSizingVariable.StiffenerHeight", "modulename": "hyperx.api.types", "qualname": "HeightSizingVariable.StiffenerHeight", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;HeightSizingVariable.StiffenerHeight: 2&gt;"}, {"fullname": "hyperx.api.types.HeightSizingVariable.WebHeight", "modulename": "hyperx.api.types", "qualname": "HeightSizingVariable.WebHeight", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;HeightSizingVariable.WebHeight: 3&gt;"}, {"fullname": "hyperx.api.types.MaterialMode", "modulename": "hyperx.api.types", "qualname": "MaterialMode", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.MaterialMode.none", "modulename": "hyperx.api.types", "qualname": "MaterialMode.none", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MaterialMode.none: 0&gt;"}, {"fullname": "hyperx.api.types.MaterialMode.Metal", "modulename": "hyperx.api.types", "qualname": "MaterialMode.Metal", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MaterialMode.Metal: 1&gt;"}, {"fullname": "hyperx.api.types.MaterialMode.Composite", "modulename": "hyperx.api.types", "qualname": "MaterialMode.Composite", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MaterialMode.Composite: 2&gt;"}, {"fullname": "hyperx.api.types.MaterialMode.Any", "modulename": "hyperx.api.types", "qualname": "MaterialMode.Any", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MaterialMode.Any: 3&gt;"}, {"fullname": "hyperx.api.types.ToolingSelectionType", "modulename": "hyperx.api.types", "qualname": "ToolingSelectionType", "kind": "class", "doc": "<p>Defines which selection a given tooling constraint is currently set to.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.ToolingSelectionType.Unknown", "modulename": "hyperx.api.types", "qualname": "ToolingSelectionType.Unknown", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ToolingSelectionType.Unknown: 0&gt;"}, {"fullname": "hyperx.api.types.ToolingSelectionType.AnyValue", "modulename": "hyperx.api.types", "qualname": "ToolingSelectionType.AnyValue", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ToolingSelectionType.AnyValue: 1&gt;"}, {"fullname": "hyperx.api.types.ToolingSelectionType.SpecifiedValue", "modulename": "hyperx.api.types", "qualname": "ToolingSelectionType.SpecifiedValue", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ToolingSelectionType.SpecifiedValue: 2&gt;"}, {"fullname": "hyperx.api.types.ToolingSelectionType.SpecifiedLimitOrRange", "modulename": "hyperx.api.types", "qualname": "ToolingSelectionType.SpecifiedLimitOrRange", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ToolingSelectionType.SpecifiedLimitOrRange: 3&gt;"}, {"fullname": "hyperx.api.types.VariableInputMode", "modulename": "hyperx.api.types", "qualname": "VariableInputMode", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.VariableInputMode.UNKNOWN", "modulename": "hyperx.api.types", "qualname": "VariableInputMode.UNKNOWN", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableInputMode.UNKNOWN: 0&gt;"}, {"fullname": "hyperx.api.types.VariableInputMode.Dimensions", "modulename": "hyperx.api.types", "qualname": "VariableInputMode.Dimensions", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableInputMode.Dimensions: 1&gt;"}, {"fullname": "hyperx.api.types.VariableInputMode.Plies", "modulename": "hyperx.api.types", "qualname": "VariableInputMode.Plies", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableInputMode.Plies: 2&gt;"}, {"fullname": "hyperx.api.types.VariableInputMode.Stock", "modulename": "hyperx.api.types", "qualname": "VariableInputMode.Stock", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableInputMode.Stock: 3&gt;"}, {"fullname": "hyperx.api.types.DiscreteFieldDataType", "modulename": "hyperx.api.types", "qualname": "DiscreteFieldDataType", "kind": "class", "doc": "<p>Defines the type of data stored in a Discrete Field. Such as Vector, Scalar, String.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.DiscreteFieldDataType.Unknown", "modulename": "hyperx.api.types", "qualname": "DiscreteFieldDataType.Unknown", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteFieldDataType.Unknown: 0&gt;"}, {"fullname": "hyperx.api.types.DiscreteFieldDataType.Vector", "modulename": "hyperx.api.types", "qualname": "DiscreteFieldDataType.Vector", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteFieldDataType.Vector: 1&gt;"}, {"fullname": "hyperx.api.types.DiscreteFieldDataType.Scalar", "modulename": "hyperx.api.types", "qualname": "DiscreteFieldDataType.Scalar", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteFieldDataType.Scalar: 2&gt;"}, {"fullname": "hyperx.api.types.DiscreteFieldDataType.String", "modulename": "hyperx.api.types", "qualname": "DiscreteFieldDataType.String", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteFieldDataType.String: 3&gt;"}, {"fullname": "hyperx.api.types.DiscreteFieldPhysicalEntityType", "modulename": "hyperx.api.types", "qualname": "DiscreteFieldPhysicalEntityType", "kind": "class", "doc": "<p>Defines the type of physical entity that a Discrete Field applies to, such as zone, element, joint, etc.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.DiscreteFieldPhysicalEntityType.Unknown", "modulename": "hyperx.api.types", "qualname": "DiscreteFieldPhysicalEntityType.Unknown", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteFieldPhysicalEntityType.Unknown: 0&gt;"}, {"fullname": "hyperx.api.types.DiscreteFieldPhysicalEntityType.Element", "modulename": "hyperx.api.types", "qualname": "DiscreteFieldPhysicalEntityType.Element", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteFieldPhysicalEntityType.Element: 1&gt;"}, {"fullname": "hyperx.api.types.DiscreteFieldPhysicalEntityType.Zone", "modulename": "hyperx.api.types", "qualname": "DiscreteFieldPhysicalEntityType.Zone", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteFieldPhysicalEntityType.Zone: 2&gt;"}, {"fullname": "hyperx.api.types.DiscreteFieldPhysicalEntityType.Joint", "modulename": "hyperx.api.types", "qualname": "DiscreteFieldPhysicalEntityType.Joint", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteFieldPhysicalEntityType.Joint: 3&gt;"}, {"fullname": "hyperx.api.types.DiscreteFieldPhysicalEntityType.Grid", "modulename": "hyperx.api.types", "qualname": "DiscreteFieldPhysicalEntityType.Grid", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteFieldPhysicalEntityType.Grid: 4&gt;"}, {"fullname": "hyperx.api.types.DiscreteFieldPhysicalEntityType.SectionCut", "modulename": "hyperx.api.types", "qualname": "DiscreteFieldPhysicalEntityType.SectionCut", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteFieldPhysicalEntityType.SectionCut: 5&gt;"}, {"fullname": "hyperx.api.types.DiscreteFieldPhysicalEntityType.Solid", "modulename": "hyperx.api.types", "qualname": "DiscreteFieldPhysicalEntityType.Solid", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteFieldPhysicalEntityType.Solid: 6&gt;"}, {"fullname": "hyperx.api.types.DiscreteFieldPhysicalEntityType.Point", "modulename": "hyperx.api.types", "qualname": "DiscreteFieldPhysicalEntityType.Point", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteFieldPhysicalEntityType.Point: 7&gt;"}, {"fullname": "hyperx.api.types.DiscreteDefinitionType", "modulename": "hyperx.api.types", "qualname": "DiscreteDefinitionType", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.DiscreteDefinitionType.none", "modulename": "hyperx.api.types", "qualname": "DiscreteDefinitionType.none", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteDefinitionType.none: 0&gt;"}, {"fullname": "hyperx.api.types.DiscreteDefinitionType.LeftOpenSpanShell", "modulename": "hyperx.api.types", "qualname": "DiscreteDefinitionType.LeftOpenSpanShell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteDefinitionType.LeftOpenSpanShell: 1&gt;"}, {"fullname": "hyperx.api.types.DiscreteDefinitionType.RightOpenSpanShell", "modulename": "hyperx.api.types", "qualname": "DiscreteDefinitionType.RightOpenSpanShell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteDefinitionType.RightOpenSpanShell: 2&gt;"}, {"fullname": "hyperx.api.types.DiscreteDefinitionType.StiffenerFullBeam", "modulename": "hyperx.api.types", "qualname": "DiscreteDefinitionType.StiffenerFullBeam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteDefinitionType.StiffenerFullBeam: 3&gt;"}, {"fullname": "hyperx.api.types.DiscreteDefinitionType.WebShell", "modulename": "hyperx.api.types", "qualname": "DiscreteDefinitionType.WebShell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteDefinitionType.WebShell: 4&gt;"}, {"fullname": "hyperx.api.types.DiscreteDefinitionType.FootBeam", "modulename": "hyperx.api.types", "qualname": "DiscreteDefinitionType.FootBeam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteDefinitionType.FootBeam: 5&gt;"}, {"fullname": "hyperx.api.types.DiscreteDefinitionType.CapBeam", "modulename": "hyperx.api.types", "qualname": "DiscreteDefinitionType.CapBeam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteDefinitionType.CapBeam: 6&gt;"}, {"fullname": "hyperx.api.types.DiscreteDefinitionType.LeftFootSkinComboShell", "modulename": "hyperx.api.types", "qualname": "DiscreteDefinitionType.LeftFootSkinComboShell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteDefinitionType.LeftFootSkinComboShell: 7&gt;"}, {"fullname": "hyperx.api.types.DiscreteDefinitionType.RightFootSkinComboShell", "modulename": "hyperx.api.types", "qualname": "DiscreteDefinitionType.RightFootSkinComboShell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteDefinitionType.RightFootSkinComboShell: 8&gt;"}, {"fullname": "hyperx.api.types.DiscreteDefinitionType.LeftCapShell", "modulename": "hyperx.api.types", "qualname": "DiscreteDefinitionType.LeftCapShell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteDefinitionType.LeftCapShell: 9&gt;"}, {"fullname": "hyperx.api.types.DiscreteDefinitionType.RightCapShell", "modulename": "hyperx.api.types", "qualname": "DiscreteDefinitionType.RightCapShell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteDefinitionType.RightCapShell: 10&gt;"}, {"fullname": "hyperx.api.types.DiscreteDefinitionType.StiffenerPartialNoAttachedFlange", "modulename": "hyperx.api.types", "qualname": "DiscreteDefinitionType.StiffenerPartialNoAttachedFlange", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteDefinitionType.StiffenerPartialNoAttachedFlange: 11&gt;"}, {"fullname": "hyperx.api.types.DiscreteDefinitionType.LeftWebOfHatShell", "modulename": "hyperx.api.types", "qualname": "DiscreteDefinitionType.LeftWebOfHatShell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteDefinitionType.LeftWebOfHatShell: 12&gt;"}, {"fullname": "hyperx.api.types.DiscreteDefinitionType.RightWebOfHatShell", "modulename": "hyperx.api.types", "qualname": "DiscreteDefinitionType.RightWebOfHatShell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteDefinitionType.RightWebOfHatShell: 13&gt;"}, {"fullname": "hyperx.api.types.DiscreteDefinitionType.CrownShell", "modulename": "hyperx.api.types", "qualname": "DiscreteDefinitionType.CrownShell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteDefinitionType.CrownShell: 14&gt;"}, {"fullname": "hyperx.api.types.DiscreteDefinitionType.ClosedSpanShell", "modulename": "hyperx.api.types", "qualname": "DiscreteDefinitionType.ClosedSpanShell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteDefinitionType.ClosedSpanShell: 15&gt;"}, {"fullname": "hyperx.api.types.DiscreteDefinitionType.LeftSkinOverFootShell", "modulename": "hyperx.api.types", "qualname": "DiscreteDefinitionType.LeftSkinOverFootShell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteDefinitionType.LeftSkinOverFootShell: 16&gt;"}, {"fullname": "hyperx.api.types.DiscreteDefinitionType.RightSkinOverFootShell", "modulename": "hyperx.api.types", "qualname": "DiscreteDefinitionType.RightSkinOverFootShell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteDefinitionType.RightSkinOverFootShell: 17&gt;"}, {"fullname": "hyperx.api.types.DiscreteDefinitionType.HatCombinedFootBeam", "modulename": "hyperx.api.types", "qualname": "DiscreteDefinitionType.HatCombinedFootBeam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteDefinitionType.HatCombinedFootBeam: 18&gt;"}, {"fullname": "hyperx.api.types.DiscreteDefinitionType.HatCombinedWebShell", "modulename": "hyperx.api.types", "qualname": "DiscreteDefinitionType.HatCombinedWebShell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteDefinitionType.HatCombinedWebShell: 19&gt;"}, {"fullname": "hyperx.api.types.DiscreteDefinitionType.CrownBeam", "modulename": "hyperx.api.types", "qualname": "DiscreteDefinitionType.CrownBeam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteDefinitionType.CrownBeam: 20&gt;"}, {"fullname": "hyperx.api.types.DiscreteDefinitionType.LeftFootShell", "modulename": "hyperx.api.types", "qualname": "DiscreteDefinitionType.LeftFootShell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteDefinitionType.LeftFootShell: 21&gt;"}, {"fullname": "hyperx.api.types.DiscreteDefinitionType.RightFootShell", "modulename": "hyperx.api.types", "qualname": "DiscreteDefinitionType.RightFootShell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteDefinitionType.RightFootShell: 22&gt;"}, {"fullname": "hyperx.api.types.DiscreteDefinitionType.WebFootShell", "modulename": "hyperx.api.types", "qualname": "DiscreteDefinitionType.WebFootShell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteDefinitionType.WebFootShell: 23&gt;"}, {"fullname": "hyperx.api.types.DiscreteDefinitionType.StiffenerMidBeam", "modulename": "hyperx.api.types", "qualname": "DiscreteDefinitionType.StiffenerMidBeam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteDefinitionType.StiffenerMidBeam: 24&gt;"}, {"fullname": "hyperx.api.types.DiscreteDefinitionType.WebCapShell", "modulename": "hyperx.api.types", "qualname": "DiscreteDefinitionType.WebCapShell", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteDefinitionType.WebCapShell: 25&gt;"}, {"fullname": "hyperx.api.types.DiscreteDefinitionType.WebCruciformLower", "modulename": "hyperx.api.types", "qualname": "DiscreteDefinitionType.WebCruciformLower", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteDefinitionType.WebCruciformLower: 26&gt;"}, {"fullname": "hyperx.api.types.DiscreteDefinitionType.WebCruciformUpper", "modulename": "hyperx.api.types", "qualname": "DiscreteDefinitionType.WebCruciformUpper", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteDefinitionType.WebCruciformUpper: 27&gt;"}, {"fullname": "hyperx.api.types.FamilyCategory", "modulename": "hyperx.api.types", "qualname": "FamilyCategory", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.FamilyCategory.Unknown", "modulename": "hyperx.api.types", "qualname": "FamilyCategory.Unknown", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyCategory.Unknown: 0&gt;"}, {"fullname": "hyperx.api.types.FamilyCategory.Panel", "modulename": "hyperx.api.types", "qualname": "FamilyCategory.Panel", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyCategory.Panel: 1&gt;"}, {"fullname": "hyperx.api.types.FamilyCategory.Beam", "modulename": "hyperx.api.types", "qualname": "FamilyCategory.Beam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyCategory.Beam: 2&gt;"}, {"fullname": "hyperx.api.types.FamilyCategory.Joint", "modulename": "hyperx.api.types", "qualname": "FamilyCategory.Joint", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyCategory.Joint: 3&gt;"}, {"fullname": "hyperx.api.types.FamilyCategory.Unspecified", "modulename": "hyperx.api.types", "qualname": "FamilyCategory.Unspecified", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyCategory.Unspecified: 4&gt;"}, {"fullname": "hyperx.api.types.FeaSolutionType", "modulename": "hyperx.api.types", "qualname": "FeaSolutionType", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.FeaSolutionType.Static", "modulename": "hyperx.api.types", "qualname": "FeaSolutionType.Static", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FeaSolutionType.Static: 0&gt;"}, {"fullname": "hyperx.api.types.FeaSolutionType.Buckling", "modulename": "hyperx.api.types", "qualname": "FeaSolutionType.Buckling", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FeaSolutionType.Buckling: 1&gt;"}, {"fullname": "hyperx.api.types.FeaSolutionType.Frequency", "modulename": "hyperx.api.types", "qualname": "FeaSolutionType.Frequency", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FeaSolutionType.Frequency: 2&gt;"}, {"fullname": "hyperx.api.types.DiscreteTechnique", "modulename": "hyperx.api.types", "qualname": "DiscreteTechnique", "kind": "class", "doc": "<p>FEM Modeling technique for a Zone</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.DiscreteTechnique.none", "modulename": "hyperx.api.types", "qualname": "DiscreteTechnique.none", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteTechnique.none: 0&gt;"}, {"fullname": "hyperx.api.types.DiscreteTechnique.Two", "modulename": "hyperx.api.types", "qualname": "DiscreteTechnique.Two", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteTechnique.Two: 2&gt;"}, {"fullname": "hyperx.api.types.DiscreteTechnique.Three", "modulename": "hyperx.api.types", "qualname": "DiscreteTechnique.Three", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteTechnique.Three: 3&gt;"}, {"fullname": "hyperx.api.types.DiscreteTechnique.Four", "modulename": "hyperx.api.types", "qualname": "DiscreteTechnique.Four", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteTechnique.Four: 4&gt;"}, {"fullname": "hyperx.api.types.DiscreteTechnique.Five", "modulename": "hyperx.api.types", "qualname": "DiscreteTechnique.Five", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DiscreteTechnique.Five: 5&gt;"}, {"fullname": "hyperx.api.types.FemType", "modulename": "hyperx.api.types", "qualname": "FemType", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.FemType.none", "modulename": "hyperx.api.types", "qualname": "FemType.none", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.none: 0&gt;"}, {"fullname": "hyperx.api.types.FemType.Unknown", "modulename": "hyperx.api.types", "qualname": "FemType.Unknown", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.Unknown: 1&gt;"}, {"fullname": "hyperx.api.types.FemType.GRID", "modulename": "hyperx.api.types", "qualname": "FemType.GRID", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.GRID: 2&gt;"}, {"fullname": "hyperx.api.types.FemType.CBAR", "modulename": "hyperx.api.types", "qualname": "FemType.CBAR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.CBAR: 3&gt;"}, {"fullname": "hyperx.api.types.FemType.CROD", "modulename": "hyperx.api.types", "qualname": "FemType.CROD", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.CROD: 4&gt;"}, {"fullname": "hyperx.api.types.FemType.CBEAM", "modulename": "hyperx.api.types", "qualname": "FemType.CBEAM", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.CBEAM: 5&gt;"}, {"fullname": "hyperx.api.types.FemType.CBUSH", "modulename": "hyperx.api.types", "qualname": "FemType.CBUSH", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.CBUSH: 6&gt;"}, {"fullname": "hyperx.api.types.FemType.CELAS2", "modulename": "hyperx.api.types", "qualname": "FemType.CELAS2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.CELAS2: 7&gt;"}, {"fullname": "hyperx.api.types.FemType.CELAS3", "modulename": "hyperx.api.types", "qualname": "FemType.CELAS3", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.CELAS3: 8&gt;"}, {"fullname": "hyperx.api.types.FemType.CQUAD4", "modulename": "hyperx.api.types", "qualname": "FemType.CQUAD4", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.CQUAD4: 9&gt;"}, {"fullname": "hyperx.api.types.FemType.CQUAD8", "modulename": "hyperx.api.types", "qualname": "FemType.CQUAD8", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.CQUAD8: 10&gt;"}, {"fullname": "hyperx.api.types.FemType.CQUADR", "modulename": "hyperx.api.types", "qualname": "FemType.CQUADR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.CQUADR: 11&gt;"}, {"fullname": "hyperx.api.types.FemType.CTRIA3", "modulename": "hyperx.api.types", "qualname": "FemType.CTRIA3", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.CTRIA3: 12&gt;"}, {"fullname": "hyperx.api.types.FemType.CSHEAR", "modulename": "hyperx.api.types", "qualname": "FemType.CSHEAR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.CSHEAR: 13&gt;"}, {"fullname": "hyperx.api.types.FemType.CSHELL", "modulename": "hyperx.api.types", "qualname": "FemType.CSHELL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.CSHELL: 14&gt;"}, {"fullname": "hyperx.api.types.FemType.CHEXA", "modulename": "hyperx.api.types", "qualname": "FemType.CHEXA", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.CHEXA: 15&gt;"}, {"fullname": "hyperx.api.types.FemType.CPENTA", "modulename": "hyperx.api.types", "qualname": "FemType.CPENTA", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.CPENTA: 16&gt;"}, {"fullname": "hyperx.api.types.FemType.LOAD", "modulename": "hyperx.api.types", "qualname": "FemType.LOAD", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.LOAD: 18&gt;"}, {"fullname": "hyperx.api.types.FemType.MAT1", "modulename": "hyperx.api.types", "qualname": "FemType.MAT1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.MAT1: 19&gt;"}, {"fullname": "hyperx.api.types.FemType.MAT2", "modulename": "hyperx.api.types", "qualname": "FemType.MAT2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.MAT2: 20&gt;"}, {"fullname": "hyperx.api.types.FemType.MAT3", "modulename": "hyperx.api.types", "qualname": "FemType.MAT3", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.MAT3: 21&gt;"}, {"fullname": "hyperx.api.types.FemType.MAT5", "modulename": "hyperx.api.types", "qualname": "FemType.MAT5", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.MAT5: 22&gt;"}, {"fullname": "hyperx.api.types.FemType.MAT8", "modulename": "hyperx.api.types", "qualname": "FemType.MAT8", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.MAT8: 23&gt;"}, {"fullname": "hyperx.api.types.FemType.MAT9", "modulename": "hyperx.api.types", "qualname": "FemType.MAT9", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.MAT9: 24&gt;"}, {"fullname": "hyperx.api.types.FemType.MAT10", "modulename": "hyperx.api.types", "qualname": "FemType.MAT10", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.MAT10: 25&gt;"}, {"fullname": "hyperx.api.types.FemType.MAT11", "modulename": "hyperx.api.types", "qualname": "FemType.MAT11", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.MAT11: 26&gt;"}, {"fullname": "hyperx.api.types.FemType.PBARL", "modulename": "hyperx.api.types", "qualname": "FemType.PBARL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.PBARL: 27&gt;"}, {"fullname": "hyperx.api.types.FemType.PBAR", "modulename": "hyperx.api.types", "qualname": "FemType.PBAR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.PBAR: 28&gt;"}, {"fullname": "hyperx.api.types.FemType.PBEAM", "modulename": "hyperx.api.types", "qualname": "FemType.PBEAM", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.PBEAM: 29&gt;"}, {"fullname": "hyperx.api.types.FemType.PBEAML", "modulename": "hyperx.api.types", "qualname": "FemType.PBEAML", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.PBEAML: 30&gt;"}, {"fullname": "hyperx.api.types.FemType.PBUSH", "modulename": "hyperx.api.types", "qualname": "FemType.PBUSH", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.PBUSH: 31&gt;"}, {"fullname": "hyperx.api.types.FemType.PCOMP", "modulename": "hyperx.api.types", "qualname": "FemType.PCOMP", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.PCOMP: 32&gt;"}, {"fullname": "hyperx.api.types.FemType.PCOMPLS", "modulename": "hyperx.api.types", "qualname": "FemType.PCOMPLS", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.PCOMPLS: 33&gt;"}, {"fullname": "hyperx.api.types.FemType.PCOMPG", "modulename": "hyperx.api.types", "qualname": "FemType.PCOMPG", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.PCOMPG: 34&gt;"}, {"fullname": "hyperx.api.types.FemType.PROD", "modulename": "hyperx.api.types", "qualname": "FemType.PROD", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.PROD: 35&gt;"}, {"fullname": "hyperx.api.types.FemType.PSHELL", "modulename": "hyperx.api.types", "qualname": "FemType.PSHELL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.PSHELL: 36&gt;"}, {"fullname": "hyperx.api.types.FemType.PSHEAR", "modulename": "hyperx.api.types", "qualname": "FemType.PSHEAR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.PSHEAR: 37&gt;"}, {"fullname": "hyperx.api.types.FemType.PSOLID", "modulename": "hyperx.api.types", "qualname": "FemType.PSOLID", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.PSOLID: 38&gt;"}, {"fullname": "hyperx.api.types.FemType.FORCE", "modulename": "hyperx.api.types", "qualname": "FemType.FORCE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.FORCE: 39&gt;"}, {"fullname": "hyperx.api.types.FemType.MOMENT", "modulename": "hyperx.api.types", "qualname": "FemType.MOMENT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.MOMENT: 40&gt;"}, {"fullname": "hyperx.api.types.FemType.PLOAD2", "modulename": "hyperx.api.types", "qualname": "FemType.PLOAD2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.PLOAD2: 41&gt;"}, {"fullname": "hyperx.api.types.FemType.PLOAD4", "modulename": "hyperx.api.types", "qualname": "FemType.PLOAD4", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.PLOAD4: 42&gt;"}, {"fullname": "hyperx.api.types.FemType.RBE2", "modulename": "hyperx.api.types", "qualname": "FemType.RBE2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.RBE2: 43&gt;"}, {"fullname": "hyperx.api.types.FemType.RBE3", "modulename": "hyperx.api.types", "qualname": "FemType.RBE3", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.RBE3: 44&gt;"}, {"fullname": "hyperx.api.types.FemType.SPC", "modulename": "hyperx.api.types", "qualname": "FemType.SPC", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.SPC: 45&gt;"}, {"fullname": "hyperx.api.types.FemType.SPC1", "modulename": "hyperx.api.types", "qualname": "FemType.SPC1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.SPC1: 46&gt;"}, {"fullname": "hyperx.api.types.FemType.TEMP", "modulename": "hyperx.api.types", "qualname": "FemType.TEMP", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.TEMP: 47&gt;"}, {"fullname": "hyperx.api.types.FemType.TEMPD", "modulename": "hyperx.api.types", "qualname": "FemType.TEMPD", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.TEMPD: 48&gt;"}, {"fullname": "hyperx.api.types.FemType.TEMPP1", "modulename": "hyperx.api.types", "qualname": "FemType.TEMPP1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.TEMPP1: 49&gt;"}, {"fullname": "hyperx.api.types.FemType.TEMPRB", "modulename": "hyperx.api.types", "qualname": "FemType.TEMPRB", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.TEMPRB: 50&gt;"}, {"fullname": "hyperx.api.types.FemType.CORD1C", "modulename": "hyperx.api.types", "qualname": "FemType.CORD1C", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.CORD1C: 51&gt;"}, {"fullname": "hyperx.api.types.FemType.CORD1R", "modulename": "hyperx.api.types", "qualname": "FemType.CORD1R", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.CORD1R: 52&gt;"}, {"fullname": "hyperx.api.types.FemType.CORD1S", "modulename": "hyperx.api.types", "qualname": "FemType.CORD1S", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.CORD1S: 53&gt;"}, {"fullname": "hyperx.api.types.FemType.CORD2C", "modulename": "hyperx.api.types", "qualname": "FemType.CORD2C", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.CORD2C: 54&gt;"}, {"fullname": "hyperx.api.types.FemType.CORD2R", "modulename": "hyperx.api.types", "qualname": "FemType.CORD2R", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.CORD2R: 55&gt;"}, {"fullname": "hyperx.api.types.FemType.CORD2S", "modulename": "hyperx.api.types", "qualname": "FemType.CORD2S", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.CORD2S: 56&gt;"}, {"fullname": "hyperx.api.types.FemType.CORD3C", "modulename": "hyperx.api.types", "qualname": "FemType.CORD3C", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.CORD3C: 57&gt;"}, {"fullname": "hyperx.api.types.FemType.CORD3R", "modulename": "hyperx.api.types", "qualname": "FemType.CORD3R", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.CORD3R: 58&gt;"}, {"fullname": "hyperx.api.types.FemType.CORD3S", "modulename": "hyperx.api.types", "qualname": "FemType.CORD3S", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.CORD3S: 59&gt;"}, {"fullname": "hyperx.api.types.FemType.MATERIAL", "modulename": "hyperx.api.types", "qualname": "FemType.MATERIAL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.MATERIAL: 60&gt;"}, {"fullname": "hyperx.api.types.FemType.NODE", "modulename": "hyperx.api.types", "qualname": "FemType.NODE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.NODE: 61&gt;"}, {"fullname": "hyperx.api.types.FemType.B31", "modulename": "hyperx.api.types", "qualname": "FemType.B31", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.B31: 62&gt;"}, {"fullname": "hyperx.api.types.FemType.B32", "modulename": "hyperx.api.types", "qualname": "FemType.B32", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.B32: 63&gt;"}, {"fullname": "hyperx.api.types.FemType.STRI3", "modulename": "hyperx.api.types", "qualname": "FemType.STRI3", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.STRI3: 64&gt;"}, {"fullname": "hyperx.api.types.FemType.S3", "modulename": "hyperx.api.types", "qualname": "FemType.S3", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.S3: 65&gt;"}, {"fullname": "hyperx.api.types.FemType.S3R", "modulename": "hyperx.api.types", "qualname": "FemType.S3R", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.S3R: 66&gt;"}, {"fullname": "hyperx.api.types.FemType.STRI65", "modulename": "hyperx.api.types", "qualname": "FemType.STRI65", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.STRI65: 67&gt;"}, {"fullname": "hyperx.api.types.FemType.S4", "modulename": "hyperx.api.types", "qualname": "FemType.S4", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.S4: 68&gt;"}, {"fullname": "hyperx.api.types.FemType.S4R", "modulename": "hyperx.api.types", "qualname": "FemType.S4R", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.S4R: 69&gt;"}, {"fullname": "hyperx.api.types.FemType.S8R", "modulename": "hyperx.api.types", "qualname": "FemType.S8R", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.S8R: 70&gt;"}, {"fullname": "hyperx.api.types.FemType.C3D4", "modulename": "hyperx.api.types", "qualname": "FemType.C3D4", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.C3D4: 71&gt;"}, {"fullname": "hyperx.api.types.FemType.C3D10", "modulename": "hyperx.api.types", "qualname": "FemType.C3D10", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.C3D10: 72&gt;"}, {"fullname": "hyperx.api.types.FemType.C3D8", "modulename": "hyperx.api.types", "qualname": "FemType.C3D8", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.C3D8: 73&gt;"}, {"fullname": "hyperx.api.types.FemType.C3D8I", "modulename": "hyperx.api.types", "qualname": "FemType.C3D8I", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.C3D8I: 74&gt;"}, {"fullname": "hyperx.api.types.FemType.C3D8R", "modulename": "hyperx.api.types", "qualname": "FemType.C3D8R", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.C3D8R: 75&gt;"}, {"fullname": "hyperx.api.types.FemType.C3D6", "modulename": "hyperx.api.types", "qualname": "FemType.C3D6", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.C3D6: 76&gt;"}, {"fullname": "hyperx.api.types.FemType.C3D15", "modulename": "hyperx.api.types", "qualname": "FemType.C3D15", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.C3D15: 77&gt;"}, {"fullname": "hyperx.api.types.FemType.C3D20", "modulename": "hyperx.api.types", "qualname": "FemType.C3D20", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.C3D20: 78&gt;"}, {"fullname": "hyperx.api.types.FemType.C3D20R", "modulename": "hyperx.api.types", "qualname": "FemType.C3D20R", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.C3D20R: 79&gt;"}, {"fullname": "hyperx.api.types.FemType.CONN3D2", "modulename": "hyperx.api.types", "qualname": "FemType.CONN3D2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.CONN3D2: 80&gt;"}, {"fullname": "hyperx.api.types.FemType.ISOTROPIC", "modulename": "hyperx.api.types", "qualname": "FemType.ISOTROPIC", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.ISOTROPIC: 81&gt;"}, {"fullname": "hyperx.api.types.FemType.LAMINA", "modulename": "hyperx.api.types", "qualname": "FemType.LAMINA", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.LAMINA: 82&gt;"}, {"fullname": "hyperx.api.types.FemType.ENGINEERINGCONSTANTS", "modulename": "hyperx.api.types", "qualname": "FemType.ENGINEERINGCONSTANTS", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.ENGINEERINGCONSTANTS: 83&gt;"}, {"fullname": "hyperx.api.types.FemType.BEAM", "modulename": "hyperx.api.types", "qualname": "FemType.BEAM", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.BEAM: 84&gt;"}, {"fullname": "hyperx.api.types.FemType.BEAMSECTION", "modulename": "hyperx.api.types", "qualname": "FemType.BEAMSECTION", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.BEAMSECTION: 85&gt;"}, {"fullname": "hyperx.api.types.FemType.BEAMGENERALSECTION", "modulename": "hyperx.api.types", "qualname": "FemType.BEAMGENERALSECTION", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.BEAMGENERALSECTION: 86&gt;"}, {"fullname": "hyperx.api.types.FemType.CONNECTORSECTION", "modulename": "hyperx.api.types", "qualname": "FemType.CONNECTORSECTION", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.CONNECTORSECTION: 87&gt;"}, {"fullname": "hyperx.api.types.FemType.SHELLSECTION", "modulename": "hyperx.api.types", "qualname": "FemType.SHELLSECTION", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.SHELLSECTION: 88&gt;"}, {"fullname": "hyperx.api.types.FemType.SHELLGENERALSECTION", "modulename": "hyperx.api.types", "qualname": "FemType.SHELLGENERALSECTION", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.SHELLGENERALSECTION: 89&gt;"}, {"fullname": "hyperx.api.types.FemType.SOLIDSECTION", "modulename": "hyperx.api.types", "qualname": "FemType.SOLIDSECTION", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.SOLIDSECTION: 90&gt;"}, {"fullname": "hyperx.api.types.FemType.SOLIDGENERALSECTION", "modulename": "hyperx.api.types", "qualname": "FemType.SOLIDGENERALSECTION", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.SOLIDGENERALSECTION: 91&gt;"}, {"fullname": "hyperx.api.types.FemType.ELSET", "modulename": "hyperx.api.types", "qualname": "FemType.ELSET", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.ELSET: 92&gt;"}, {"fullname": "hyperx.api.types.FemType.COORD3D", "modulename": "hyperx.api.types", "qualname": "FemType.COORD3D", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.COORD3D: 93&gt;"}, {"fullname": "hyperx.api.types.FemType.DISTRIBUTION", "modulename": "hyperx.api.types", "qualname": "FemType.DISTRIBUTION", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.DISTRIBUTION: 94&gt;"}, {"fullname": "hyperx.api.types.FemType.GRIDSET", "modulename": "hyperx.api.types", "qualname": "FemType.GRIDSET", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.GRIDSET: 95&gt;"}, {"fullname": "hyperx.api.types.FemType.DISTRIBUTIONTABLE", "modulename": "hyperx.api.types", "qualname": "FemType.DISTRIBUTIONTABLE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.DISTRIBUTIONTABLE: 96&gt;"}, {"fullname": "hyperx.api.types.FemType.Rectangular", "modulename": "hyperx.api.types", "qualname": "FemType.Rectangular", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.Rectangular: 97&gt;"}, {"fullname": "hyperx.api.types.FemType.Cylindrical", "modulename": "hyperx.api.types", "qualname": "FemType.Cylindrical", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.Cylindrical: 98&gt;"}, {"fullname": "hyperx.api.types.FemType.Spherical", "modulename": "hyperx.api.types", "qualname": "FemType.Spherical", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.Spherical: 99&gt;"}, {"fullname": "hyperx.api.types.FemType.Ply", "modulename": "hyperx.api.types", "qualname": "FemType.Ply", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.Ply: 100&gt;"}, {"fullname": "hyperx.api.types.FemType.MPC", "modulename": "hyperx.api.types", "qualname": "FemType.MPC", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FemType.MPC: 101&gt;"}, {"fullname": "hyperx.api.types.ConstraintType", "modulename": "hyperx.api.types", "qualname": "ConstraintType", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.ConstraintType.UNKNOWN", "modulename": "hyperx.api.types", "qualname": "ConstraintType.UNKNOWN", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ConstraintType.UNKNOWN: 0&gt;"}, {"fullname": "hyperx.api.types.ConstraintType.Displacement", "modulename": "hyperx.api.types", "qualname": "ConstraintType.Displacement", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ConstraintType.Displacement: 1&gt;"}, {"fullname": "hyperx.api.types.ConstraintType.Buckling", "modulename": "hyperx.api.types", "qualname": "ConstraintType.Buckling", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ConstraintType.Buckling: 2&gt;"}, {"fullname": "hyperx.api.types.ConstraintType.Moment", "modulename": "hyperx.api.types", "qualname": "ConstraintType.Moment", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ConstraintType.Moment: 3&gt;"}, {"fullname": "hyperx.api.types.ConstraintType.Frequency", "modulename": "hyperx.api.types", "qualname": "ConstraintType.Frequency", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ConstraintType.Frequency: 4&gt;"}, {"fullname": "hyperx.api.types.DegreeOfFreedom", "modulename": "hyperx.api.types", "qualname": "DegreeOfFreedom", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.DegreeOfFreedom.T1", "modulename": "hyperx.api.types", "qualname": "DegreeOfFreedom.T1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DegreeOfFreedom.T1: 0&gt;"}, {"fullname": "hyperx.api.types.DegreeOfFreedom.T2", "modulename": "hyperx.api.types", "qualname": "DegreeOfFreedom.T2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DegreeOfFreedom.T2: 1&gt;"}, {"fullname": "hyperx.api.types.DegreeOfFreedom.T3", "modulename": "hyperx.api.types", "qualname": "DegreeOfFreedom.T3", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DegreeOfFreedom.T3: 2&gt;"}, {"fullname": "hyperx.api.types.DegreeOfFreedom.R1", "modulename": "hyperx.api.types", "qualname": "DegreeOfFreedom.R1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DegreeOfFreedom.R1: 3&gt;"}, {"fullname": "hyperx.api.types.DegreeOfFreedom.R2", "modulename": "hyperx.api.types", "qualname": "DegreeOfFreedom.R2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DegreeOfFreedom.R2: 4&gt;"}, {"fullname": "hyperx.api.types.DegreeOfFreedom.R3", "modulename": "hyperx.api.types", "qualname": "DegreeOfFreedom.R3", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DegreeOfFreedom.R3: 5&gt;"}, {"fullname": "hyperx.api.types.DegreeOfFreedom.Tmag", "modulename": "hyperx.api.types", "qualname": "DegreeOfFreedom.Tmag", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DegreeOfFreedom.Tmag: 6&gt;"}, {"fullname": "hyperx.api.types.DegreeOfFreedom.Rmag", "modulename": "hyperx.api.types", "qualname": "DegreeOfFreedom.Rmag", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DegreeOfFreedom.Rmag: 7&gt;"}, {"fullname": "hyperx.api.types.DisplacementShapeType", "modulename": "hyperx.api.types", "qualname": "DisplacementShapeType", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.DisplacementShapeType.Unknown", "modulename": "hyperx.api.types", "qualname": "DisplacementShapeType.Unknown", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DisplacementShapeType.Unknown: 0&gt;"}, {"fullname": "hyperx.api.types.DisplacementShapeType.Sphere", "modulename": "hyperx.api.types", "qualname": "DisplacementShapeType.Sphere", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DisplacementShapeType.Sphere: 1&gt;"}, {"fullname": "hyperx.api.types.DisplacementShapeType.Cylinder", "modulename": "hyperx.api.types", "qualname": "DisplacementShapeType.Cylinder", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DisplacementShapeType.Cylinder: 2&gt;"}, {"fullname": "hyperx.api.types.DisplacementShapeType.Plane", "modulename": "hyperx.api.types", "qualname": "DisplacementShapeType.Plane", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DisplacementShapeType.Plane: 3&gt;"}, {"fullname": "hyperx.api.types.StiffnessCriteriaType", "modulename": "hyperx.api.types", "qualname": "StiffnessCriteriaType", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.StiffnessCriteriaType.Displacement", "modulename": "hyperx.api.types", "qualname": "StiffnessCriteriaType.Displacement", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffnessCriteriaType.Displacement: 0&gt;"}, {"fullname": "hyperx.api.types.StiffnessCriteriaType.Rotation", "modulename": "hyperx.api.types", "qualname": "StiffnessCriteriaType.Rotation", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffnessCriteriaType.Rotation: 1&gt;"}, {"fullname": "hyperx.api.types.StiffnessCriteriaType.Buckling", "modulename": "hyperx.api.types", "qualname": "StiffnessCriteriaType.Buckling", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffnessCriteriaType.Buckling: 2&gt;"}, {"fullname": "hyperx.api.types.StiffnessCriteriaType.Frequency", "modulename": "hyperx.api.types", "qualname": "StiffnessCriteriaType.Frequency", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffnessCriteriaType.Frequency: 3&gt;"}, {"fullname": "hyperx.api.types.JointConceptId", "modulename": "hyperx.api.types", "qualname": "JointConceptId", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.JointConceptId.Unassigned", "modulename": "hyperx.api.types", "qualname": "JointConceptId.Unassigned", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointConceptId.Unassigned: 0&gt;"}, {"fullname": "hyperx.api.types.JointConceptId.Clevis", "modulename": "hyperx.api.types", "qualname": "JointConceptId.Clevis", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointConceptId.Clevis: 2&gt;"}, {"fullname": "hyperx.api.types.JointConceptId.EdgeAllowable", "modulename": "hyperx.api.types", "qualname": "JointConceptId.EdgeAllowable", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointConceptId.EdgeAllowable: 10&gt;"}, {"fullname": "hyperx.api.types.JointConceptId.BoltedSingleShear", "modulename": "hyperx.api.types", "qualname": "JointConceptId.BoltedSingleShear", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointConceptId.BoltedSingleShear: 13&gt;"}, {"fullname": "hyperx.api.types.JointConceptId.BondedSingleLap", "modulename": "hyperx.api.types", "qualname": "JointConceptId.BondedSingleLap", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointConceptId.BondedSingleLap: 14&gt;"}, {"fullname": "hyperx.api.types.JointConceptId.RivetedSingleShear", "modulename": "hyperx.api.types", "qualname": "JointConceptId.RivetedSingleShear", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointConceptId.RivetedSingleShear: 15&gt;"}, {"fullname": "hyperx.api.types.JointConceptId.DoubleStrap", "modulename": "hyperx.api.types", "qualname": "JointConceptId.DoubleStrap", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointConceptId.DoubleStrap: 16&gt;"}, {"fullname": "hyperx.api.types.JointConceptId.Doubler", "modulename": "hyperx.api.types", "qualname": "JointConceptId.Doubler", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointConceptId.Doubler: 17&gt;"}, {"fullname": "hyperx.api.types.JointConceptId.SteppedLap", "modulename": "hyperx.api.types", "qualname": "JointConceptId.SteppedLap", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointConceptId.SteppedLap: 18&gt;"}, {"fullname": "hyperx.api.types.JointConceptId.BoltedDoubleShear", "modulename": "hyperx.api.types", "qualname": "JointConceptId.BoltedDoubleShear", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointConceptId.BoltedDoubleShear: 19&gt;"}, {"fullname": "hyperx.api.types.JointConceptId.BoltedTripleShear", "modulename": "hyperx.api.types", "qualname": "JointConceptId.BoltedTripleShear", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointConceptId.BoltedTripleShear: 20&gt;"}, {"fullname": "hyperx.api.types.JointConceptId.BoltedQuadrupleShear", "modulename": "hyperx.api.types", "qualname": "JointConceptId.BoltedQuadrupleShear", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointConceptId.BoltedQuadrupleShear: 21&gt;"}, {"fullname": "hyperx.api.types.JointRangeId", "modulename": "hyperx.api.types", "qualname": "JointRangeId", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.JointRangeId.Torque", "modulename": "hyperx.api.types", "qualname": "JointRangeId.Torque", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointRangeId.Torque: 1&gt;"}, {"fullname": "hyperx.api.types.JointRangeId.Spacing", "modulename": "hyperx.api.types", "qualname": "JointRangeId.Spacing", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointRangeId.Spacing: 2&gt;"}, {"fullname": "hyperx.api.types.JointRangeId.FastenerRows", "modulename": "hyperx.api.types", "qualname": "JointRangeId.FastenerRows", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointRangeId.FastenerRows: 3&gt;"}, {"fullname": "hyperx.api.types.JointRangeId.LengthOverlap", "modulename": "hyperx.api.types", "qualname": "JointRangeId.LengthOverlap", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointRangeId.LengthOverlap: 4&gt;"}, {"fullname": "hyperx.api.types.JointRangeId.TaperAngle", "modulename": "hyperx.api.types", "qualname": "JointRangeId.TaperAngle", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointRangeId.TaperAngle: 5&gt;"}, {"fullname": "hyperx.api.types.JointRangeId.FinalThickness", "modulename": "hyperx.api.types", "qualname": "JointRangeId.FinalThickness", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointRangeId.FinalThickness: 6&gt;"}, {"fullname": "hyperx.api.types.JointRangeId.PulloffNormalAllowable", "modulename": "hyperx.api.types", "qualname": "JointRangeId.PulloffNormalAllowable", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointRangeId.PulloffNormalAllowable: 7&gt;"}, {"fullname": "hyperx.api.types.JointRangeId.CompressiveNormalAllowable", "modulename": "hyperx.api.types", "qualname": "JointRangeId.CompressiveNormalAllowable", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointRangeId.CompressiveNormalAllowable: 8&gt;"}, {"fullname": "hyperx.api.types.JointRangeId.ShearAllowable", "modulename": "hyperx.api.types", "qualname": "JointRangeId.ShearAllowable", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointRangeId.ShearAllowable: 9&gt;"}, {"fullname": "hyperx.api.types.JointRangeId.Adherend1Thickness", "modulename": "hyperx.api.types", "qualname": "JointRangeId.Adherend1Thickness", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointRangeId.Adherend1Thickness: 10&gt;"}, {"fullname": "hyperx.api.types.JointRangeId.Adherend2Thickness", "modulename": "hyperx.api.types", "qualname": "JointRangeId.Adherend2Thickness", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointRangeId.Adherend2Thickness: 11&gt;"}, {"fullname": "hyperx.api.types.JointRangeId.Sheet1Thickness", "modulename": "hyperx.api.types", "qualname": "JointRangeId.Sheet1Thickness", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointRangeId.Sheet1Thickness: 12&gt;"}, {"fullname": "hyperx.api.types.JointRangeId.Sheet2Thickness", "modulename": "hyperx.api.types", "qualname": "JointRangeId.Sheet2Thickness", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointRangeId.Sheet2Thickness: 13&gt;"}, {"fullname": "hyperx.api.types.JointRangeId.ThicknessAdhesive", "modulename": "hyperx.api.types", "qualname": "JointRangeId.ThicknessAdhesive", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointRangeId.ThicknessAdhesive: 14&gt;"}, {"fullname": "hyperx.api.types.JointRangeId.ThicknessDoubler", "modulename": "hyperx.api.types", "qualname": "JointRangeId.ThicknessDoubler", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointRangeId.ThicknessDoubler: 15&gt;"}, {"fullname": "hyperx.api.types.JointRangeId.ThicknessClevis", "modulename": "hyperx.api.types", "qualname": "JointRangeId.ThicknessClevis", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointRangeId.ThicknessClevis: 16&gt;"}, {"fullname": "hyperx.api.types.JointRangeId.ThicknessStrap", "modulename": "hyperx.api.types", "qualname": "JointRangeId.ThicknessStrap", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointRangeId.ThicknessStrap: 17&gt;"}, {"fullname": "hyperx.api.types.JointRangeId.LengthDoubler", "modulename": "hyperx.api.types", "qualname": "JointRangeId.LengthDoubler", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointRangeId.LengthDoubler: 18&gt;"}, {"fullname": "hyperx.api.types.JointRangeId.NumberOfSteps", "modulename": "hyperx.api.types", "qualname": "JointRangeId.NumberOfSteps", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointRangeId.NumberOfSteps: 19&gt;"}, {"fullname": "hyperx.api.types.JointRangeId.Sheet3Thickness", "modulename": "hyperx.api.types", "qualname": "JointRangeId.Sheet3Thickness", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointRangeId.Sheet3Thickness: 20&gt;"}, {"fullname": "hyperx.api.types.JointRangeId.Sheet4Thickness", "modulename": "hyperx.api.types", "qualname": "JointRangeId.Sheet4Thickness", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointRangeId.Sheet4Thickness: 21&gt;"}, {"fullname": "hyperx.api.types.JointSelectionId", "modulename": "hyperx.api.types", "qualname": "JointSelectionId", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.JointSelectionId.AdhesiveMaterial", "modulename": "hyperx.api.types", "qualname": "JointSelectionId.AdhesiveMaterial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointSelectionId.AdhesiveMaterial: 1&gt;"}, {"fullname": "hyperx.api.types.JointSelectionId.UpperStrapMaterial", "modulename": "hyperx.api.types", "qualname": "JointSelectionId.UpperStrapMaterial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointSelectionId.UpperStrapMaterial: 2&gt;"}, {"fullname": "hyperx.api.types.JointSelectionId.LowerStrapMaterial", "modulename": "hyperx.api.types", "qualname": "JointSelectionId.LowerStrapMaterial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointSelectionId.LowerStrapMaterial: 3&gt;"}, {"fullname": "hyperx.api.types.JointSelectionId.ClevisMaterial", "modulename": "hyperx.api.types", "qualname": "JointSelectionId.ClevisMaterial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointSelectionId.ClevisMaterial: 4&gt;"}, {"fullname": "hyperx.api.types.JointSelectionId.FastenerSelection", "modulename": "hyperx.api.types", "qualname": "JointSelectionId.FastenerSelection", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointSelectionId.FastenerSelection: 5&gt;"}, {"fullname": "hyperx.api.types.JointSelectionId.Adherend1Material", "modulename": "hyperx.api.types", "qualname": "JointSelectionId.Adherend1Material", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointSelectionId.Adherend1Material: 6&gt;"}, {"fullname": "hyperx.api.types.JointSelectionId.Adherend2Material", "modulename": "hyperx.api.types", "qualname": "JointSelectionId.Adherend2Material", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointSelectionId.Adherend2Material: 7&gt;"}, {"fullname": "hyperx.api.types.JointSelectionId.Sheet1Material", "modulename": "hyperx.api.types", "qualname": "JointSelectionId.Sheet1Material", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointSelectionId.Sheet1Material: 8&gt;"}, {"fullname": "hyperx.api.types.JointSelectionId.Sheet2Material", "modulename": "hyperx.api.types", "qualname": "JointSelectionId.Sheet2Material", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointSelectionId.Sheet2Material: 9&gt;"}, {"fullname": "hyperx.api.types.JointSelectionId.RivetMaterial", "modulename": "hyperx.api.types", "qualname": "JointSelectionId.RivetMaterial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointSelectionId.RivetMaterial: 10&gt;"}, {"fullname": "hyperx.api.types.JointSelectionId.StrapMaterial", "modulename": "hyperx.api.types", "qualname": "JointSelectionId.StrapMaterial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointSelectionId.StrapMaterial: 11&gt;"}, {"fullname": "hyperx.api.types.JointSelectionId.DoublerMaterial", "modulename": "hyperx.api.types", "qualname": "JointSelectionId.DoublerMaterial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointSelectionId.DoublerMaterial: 12&gt;"}, {"fullname": "hyperx.api.types.JointSelectionId.Sheet3Material", "modulename": "hyperx.api.types", "qualname": "JointSelectionId.Sheet3Material", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointSelectionId.Sheet3Material: 13&gt;"}, {"fullname": "hyperx.api.types.JointSelectionId.Sheet4Material", "modulename": "hyperx.api.types", "qualname": "JointSelectionId.Sheet4Material", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointSelectionId.Sheet4Material: 14&gt;"}, {"fullname": "hyperx.api.types.BoundaryConditionType", "modulename": "hyperx.api.types", "qualname": "BoundaryConditionType", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.BoundaryConditionType.Force", "modulename": "hyperx.api.types", "qualname": "BoundaryConditionType.Force", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;BoundaryConditionType.Force: 1&gt;"}, {"fullname": "hyperx.api.types.BoundaryConditionType.Displacement", "modulename": "hyperx.api.types", "qualname": "BoundaryConditionType.Displacement", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;BoundaryConditionType.Displacement: 2&gt;"}, {"fullname": "hyperx.api.types.BoundaryConditionType.Free", "modulename": "hyperx.api.types", "qualname": "BoundaryConditionType.Free", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;BoundaryConditionType.Free: 3&gt;"}, {"fullname": "hyperx.api.types.BoundaryConditionType.Fixed", "modulename": "hyperx.api.types", "qualname": "BoundaryConditionType.Fixed", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;BoundaryConditionType.Fixed: 4&gt;"}, {"fullname": "hyperx.api.types.ForceTransformType", "modulename": "hyperx.api.types", "qualname": "ForceTransformType", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.ForceTransformType.HyperXConvention", "modulename": "hyperx.api.types", "qualname": "ForceTransformType.HyperXConvention", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ForceTransformType.HyperXConvention: 1&gt;"}, {"fullname": "hyperx.api.types.ForceTransformType.SolverConvention", "modulename": "hyperx.api.types", "qualname": "ForceTransformType.SolverConvention", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ForceTransformType.SolverConvention: 2&gt;"}, {"fullname": "hyperx.api.types.LoadCaseType", "modulename": "hyperx.api.types", "qualname": "LoadCaseType", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.LoadCaseType.Static", "modulename": "hyperx.api.types", "qualname": "LoadCaseType.Static", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LoadCaseType.Static: 1&gt;"}, {"fullname": "hyperx.api.types.LoadCaseType.Fatigue", "modulename": "hyperx.api.types", "qualname": "LoadCaseType.Fatigue", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LoadCaseType.Fatigue: 2&gt;"}, {"fullname": "hyperx.api.types.LoadPropertyAverageElementType", "modulename": "hyperx.api.types", "qualname": "LoadPropertyAverageElementType", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.LoadPropertyAverageElementType.TensionCompressionAverage", "modulename": "hyperx.api.types", "qualname": "LoadPropertyAverageElementType.TensionCompressionAverage", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LoadPropertyAverageElementType.TensionCompressionAverage: 0&gt;"}, {"fullname": "hyperx.api.types.LoadPropertyAverageElementType.TrueAverage", "modulename": "hyperx.api.types", "qualname": "LoadPropertyAverageElementType.TrueAverage", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LoadPropertyAverageElementType.TrueAverage: 1&gt;"}, {"fullname": "hyperx.api.types.LoadPropertyPeakElementScope", "modulename": "hyperx.api.types", "qualname": "LoadPropertyPeakElementScope", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.LoadPropertyPeakElementScope.PeakDesignCase", "modulename": "hyperx.api.types", "qualname": "LoadPropertyPeakElementScope.PeakDesignCase", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LoadPropertyPeakElementScope.PeakDesignCase: 1&gt;"}, {"fullname": "hyperx.api.types.LoadPropertyPeakElementScope.AllDesignCases", "modulename": "hyperx.api.types", "qualname": "LoadPropertyPeakElementScope.AllDesignCases", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LoadPropertyPeakElementScope.AllDesignCases: 2&gt;"}, {"fullname": "hyperx.api.types.LoadPropertyType", "modulename": "hyperx.api.types", "qualname": "LoadPropertyType", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.LoadPropertyType.none", "modulename": "hyperx.api.types", "qualname": "LoadPropertyType.none", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LoadPropertyType.none: 0&gt;"}, {"fullname": "hyperx.api.types.LoadPropertyType.Average", "modulename": "hyperx.api.types", "qualname": "LoadPropertyType.Average", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LoadPropertyType.Average: 1&gt;"}, {"fullname": "hyperx.api.types.LoadPropertyType.Statistical", "modulename": "hyperx.api.types", "qualname": "LoadPropertyType.Statistical", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LoadPropertyType.Statistical: 2&gt;"}, {"fullname": "hyperx.api.types.LoadPropertyType.PeakLoad", "modulename": "hyperx.api.types", "qualname": "LoadPropertyType.PeakLoad", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LoadPropertyType.PeakLoad: 3&gt;"}, {"fullname": "hyperx.api.types.LoadPropertyType.NeighborAverage", "modulename": "hyperx.api.types", "qualname": "LoadPropertyType.NeighborAverage", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LoadPropertyType.NeighborAverage: 4&gt;"}, {"fullname": "hyperx.api.types.LoadPropertyType.ElementBased", "modulename": "hyperx.api.types", "qualname": "LoadPropertyType.ElementBased", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LoadPropertyType.ElementBased: 5&gt;"}, {"fullname": "hyperx.api.types.LoadPropertyType.UserFEA", "modulename": "hyperx.api.types", "qualname": "LoadPropertyType.UserFEA", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LoadPropertyType.UserFEA: 6&gt;"}, {"fullname": "hyperx.api.types.LoadPropertyType.UserBonded", "modulename": "hyperx.api.types", "qualname": "LoadPropertyType.UserBonded", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LoadPropertyType.UserBonded: 7&gt;"}, {"fullname": "hyperx.api.types.LoadPropertyType.UserBolted", "modulename": "hyperx.api.types", "qualname": "LoadPropertyType.UserBolted", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LoadPropertyType.UserBolted: 8&gt;"}, {"fullname": "hyperx.api.types.LoadPropertyType.UserGeneral", "modulename": "hyperx.api.types", "qualname": "LoadPropertyType.UserGeneral", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LoadPropertyType.UserGeneral: 9&gt;"}, {"fullname": "hyperx.api.types.LoadSubCaseFactor", "modulename": "hyperx.api.types", "qualname": "LoadSubCaseFactor", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.LoadSubCaseFactor.none", "modulename": "hyperx.api.types", "qualname": "LoadSubCaseFactor.none", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LoadSubCaseFactor.none: 0&gt;"}, {"fullname": "hyperx.api.types.LoadSubCaseFactor.LimitOnly", "modulename": "hyperx.api.types", "qualname": "LoadSubCaseFactor.LimitOnly", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LoadSubCaseFactor.LimitOnly: 1&gt;"}, {"fullname": "hyperx.api.types.LoadSubCaseFactor.UltimateOnly", "modulename": "hyperx.api.types", "qualname": "LoadSubCaseFactor.UltimateOnly", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LoadSubCaseFactor.UltimateOnly: 2&gt;"}, {"fullname": "hyperx.api.types.LoadSubCaseFactor.LimitWithThermalHelp", "modulename": "hyperx.api.types", "qualname": "LoadSubCaseFactor.LimitWithThermalHelp", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LoadSubCaseFactor.LimitWithThermalHelp: 3&gt;"}, {"fullname": "hyperx.api.types.LoadSubCaseFactor.LimitWithThermalHurt", "modulename": "hyperx.api.types", "qualname": "LoadSubCaseFactor.LimitWithThermalHurt", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LoadSubCaseFactor.LimitWithThermalHurt: 4&gt;"}, {"fullname": "hyperx.api.types.LoadSubCaseFactor.UltimateWithThermalHelp", "modulename": "hyperx.api.types", "qualname": "LoadSubCaseFactor.UltimateWithThermalHelp", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LoadSubCaseFactor.UltimateWithThermalHelp: 5&gt;"}, {"fullname": "hyperx.api.types.LoadSubCaseFactor.UltimateWithThermalHurt", "modulename": "hyperx.api.types", "qualname": "LoadSubCaseFactor.UltimateWithThermalHurt", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LoadSubCaseFactor.UltimateWithThermalHurt: 6&gt;"}, {"fullname": "hyperx.api.types.LoadSubCaseFactor.Unfactored", "modulename": "hyperx.api.types", "qualname": "LoadSubCaseFactor.Unfactored", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LoadSubCaseFactor.Unfactored: 7&gt;"}, {"fullname": "hyperx.api.types.TemperatureChoiceType", "modulename": "hyperx.api.types", "qualname": "TemperatureChoiceType", "kind": "class", "doc": "<p>Load Case Setting selection for analysis and initial temperature.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.TemperatureChoiceType.Analysis", "modulename": "hyperx.api.types", "qualname": "TemperatureChoiceType.Analysis", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;TemperatureChoiceType.Analysis: 0&gt;"}, {"fullname": "hyperx.api.types.TemperatureChoiceType.Value", "modulename": "hyperx.api.types", "qualname": "TemperatureChoiceType.Value", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;TemperatureChoiceType.Value: 1&gt;"}, {"fullname": "hyperx.api.types.TemperatureChoiceType.Subcase", "modulename": "hyperx.api.types", "qualname": "TemperatureChoiceType.Subcase", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;TemperatureChoiceType.Subcase: 2&gt;"}, {"fullname": "hyperx.api.types.AllowableMethodName", "modulename": "hyperx.api.types", "qualname": "AllowableMethodName", "kind": "class", "doc": "<p>Method name for a laminate allowable.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.AllowableMethodName.AML", "modulename": "hyperx.api.types", "qualname": "AllowableMethodName.AML", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AllowableMethodName.AML: 1&gt;"}, {"fullname": "hyperx.api.types.AllowableMethodName.Percent_0", "modulename": "hyperx.api.types", "qualname": "AllowableMethodName.Percent_0", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AllowableMethodName.Percent_0: 2&gt;"}, {"fullname": "hyperx.api.types.AllowableMethodName.Percent_45", "modulename": "hyperx.api.types", "qualname": "AllowableMethodName.Percent_45", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AllowableMethodName.Percent_45: 3&gt;"}, {"fullname": "hyperx.api.types.AllowableMethodName.BypassStress", "modulename": "hyperx.api.types", "qualname": "AllowableMethodName.BypassStress", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AllowableMethodName.BypassStress: 4&gt;"}, {"fullname": "hyperx.api.types.AllowableMethodName.Polynomial", "modulename": "hyperx.api.types", "qualname": "AllowableMethodName.Polynomial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AllowableMethodName.Polynomial: 999&gt;"}, {"fullname": "hyperx.api.types.AllowablePropertyName", "modulename": "hyperx.api.types", "qualname": "AllowablePropertyName", "kind": "class", "doc": "<p>Property name for a laminate allowable.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.AllowablePropertyName.Strain_Tension_Pristine", "modulename": "hyperx.api.types", "qualname": "AllowablePropertyName.Strain_Tension_Pristine", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AllowablePropertyName.Strain_Tension_Pristine: 1&gt;"}, {"fullname": "hyperx.api.types.AllowablePropertyName.Strain_Compression_Pristine", "modulename": "hyperx.api.types", "qualname": "AllowablePropertyName.Strain_Compression_Pristine", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AllowablePropertyName.Strain_Compression_Pristine: 2&gt;"}, {"fullname": "hyperx.api.types.AllowablePropertyName.Strain_Shear_Pristine", "modulename": "hyperx.api.types", "qualname": "AllowablePropertyName.Strain_Shear_Pristine", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AllowablePropertyName.Strain_Shear_Pristine: 3&gt;"}, {"fullname": "hyperx.api.types.AllowablePropertyName.Strain_Tension_OHT", "modulename": "hyperx.api.types", "qualname": "AllowablePropertyName.Strain_Tension_OHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AllowablePropertyName.Strain_Tension_OHT: 4&gt;"}, {"fullname": "hyperx.api.types.AllowablePropertyName.Strain_Compression_OHC", "modulename": "hyperx.api.types", "qualname": "AllowablePropertyName.Strain_Compression_OHC", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AllowablePropertyName.Strain_Compression_OHC: 5&gt;"}, {"fullname": "hyperx.api.types.AllowablePropertyName.Stress_Bearing", "modulename": "hyperx.api.types", "qualname": "AllowablePropertyName.Stress_Bearing", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AllowablePropertyName.Stress_Bearing: 6&gt;"}, {"fullname": "hyperx.api.types.AllowablePropertyName.Strain_Compression_CAI", "modulename": "hyperx.api.types", "qualname": "AllowablePropertyName.Strain_Compression_CAI", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AllowablePropertyName.Strain_Compression_CAI: 9&gt;"}, {"fullname": "hyperx.api.types.AllowablePropertyName.Strain_Compression_FHC", "modulename": "hyperx.api.types", "qualname": "AllowablePropertyName.Strain_Compression_FHC", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AllowablePropertyName.Strain_Compression_FHC: 10&gt;"}, {"fullname": "hyperx.api.types.AllowablePropertyName.Strain_Compression_BVID", "modulename": "hyperx.api.types", "qualname": "AllowablePropertyName.Strain_Compression_BVID", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AllowablePropertyName.Strain_Compression_BVID: 11&gt;"}, {"fullname": "hyperx.api.types.AllowablePropertyName.Strain_Tension_TAI", "modulename": "hyperx.api.types", "qualname": "AllowablePropertyName.Strain_Tension_TAI", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AllowablePropertyName.Strain_Tension_TAI: 12&gt;"}, {"fullname": "hyperx.api.types.AllowablePropertyName.Strain_Tension_FHT", "modulename": "hyperx.api.types", "qualname": "AllowablePropertyName.Strain_Tension_FHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AllowablePropertyName.Strain_Tension_FHT: 13&gt;"}, {"fullname": "hyperx.api.types.AllowablePropertyName.Strain_Shear_SAI", "modulename": "hyperx.api.types", "qualname": "AllowablePropertyName.Strain_Shear_SAI", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AllowablePropertyName.Strain_Shear_SAI: 14&gt;"}, {"fullname": "hyperx.api.types.AllowablePropertyName.Stress_PullThrough", "modulename": "hyperx.api.types", "qualname": "AllowablePropertyName.Stress_PullThrough", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AllowablePropertyName.Stress_PullThrough: 15&gt;"}, {"fullname": "hyperx.api.types.AllowablePropertyName.Stress_Bearing_Bypass", "modulename": "hyperx.api.types", "qualname": "AllowablePropertyName.Stress_Bearing_Bypass", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AllowablePropertyName.Stress_Bearing_Bypass: 16&gt;"}, {"fullname": "hyperx.api.types.AllowablePropertyName.Stress_Bypass", "modulename": "hyperx.api.types", "qualname": "AllowablePropertyName.Stress_Bypass", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;AllowablePropertyName.Stress_Bypass: 17&gt;"}, {"fullname": "hyperx.api.types.CorrectionCategory", "modulename": "hyperx.api.types", "qualname": "CorrectionCategory", "kind": "class", "doc": "<p>Correction property category.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.CorrectionCategory.ElasticStiffness", "modulename": "hyperx.api.types", "qualname": "CorrectionCategory.ElasticStiffness", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionCategory.ElasticStiffness: 1&gt;"}, {"fullname": "hyperx.api.types.CorrectionCategory.StressAllowables", "modulename": "hyperx.api.types", "qualname": "CorrectionCategory.StressAllowables", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionCategory.StressAllowables: 2&gt;"}, {"fullname": "hyperx.api.types.CorrectionCategory.StrainAllowables", "modulename": "hyperx.api.types", "qualname": "CorrectionCategory.StrainAllowables", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionCategory.StrainAllowables: 3&gt;"}, {"fullname": "hyperx.api.types.CorrectionCategory.LaminateStrainAllowables", "modulename": "hyperx.api.types", "qualname": "CorrectionCategory.LaminateStrainAllowables", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionCategory.LaminateStrainAllowables: 4&gt;"}, {"fullname": "hyperx.api.types.CorrectionCategory.BoltedJointParameters", "modulename": "hyperx.api.types", "qualname": "CorrectionCategory.BoltedJointParameters", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionCategory.BoltedJointParameters: 5&gt;"}, {"fullname": "hyperx.api.types.CorrectionCategory.BoltedJointStressAllowables", "modulename": "hyperx.api.types", "qualname": "CorrectionCategory.BoltedJointStressAllowables", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionCategory.BoltedJointStressAllowables: 6&gt;"}, {"fullname": "hyperx.api.types.CorrectionEquation", "modulename": "hyperx.api.types", "qualname": "CorrectionEquation", "kind": "class", "doc": "<p>Equation for a correction factor.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.CorrectionEquation.Constant", "modulename": "hyperx.api.types", "qualname": "CorrectionEquation.Constant", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionEquation.Constant: 1&gt;"}, {"fullname": "hyperx.api.types.CorrectionEquation.Linear_Percent_Ply", "modulename": "hyperx.api.types", "qualname": "CorrectionEquation.Linear_Percent_Ply", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionEquation.Linear_Percent_Ply: 2&gt;"}, {"fullname": "hyperx.api.types.CorrectionEquation.Quadratic_Percent_Ply_and_Temperature", "modulename": "hyperx.api.types", "qualname": "CorrectionEquation.Quadratic_Percent_Ply_and_Temperature", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionEquation.Quadratic_Percent_Ply_and_Temperature: 3&gt;"}, {"fullname": "hyperx.api.types.CorrectionEquation.Cubic_AML", "modulename": "hyperx.api.types", "qualname": "CorrectionEquation.Cubic_AML", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionEquation.Cubic_AML: 4&gt;"}, {"fullname": "hyperx.api.types.CorrectionEquation.Biquadratic_Thickness", "modulename": "hyperx.api.types", "qualname": "CorrectionEquation.Biquadratic_Thickness", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionEquation.Biquadratic_Thickness: 5&gt;"}, {"fullname": "hyperx.api.types.CorrectionEquation.Quadratic_Diameter_and_Thickness", "modulename": "hyperx.api.types", "qualname": "CorrectionEquation.Quadratic_Diameter_and_Thickness", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionEquation.Quadratic_Diameter_and_Thickness: 6&gt;"}, {"fullname": "hyperx.api.types.CorrectionId", "modulename": "hyperx.api.types", "qualname": "CorrectionId", "kind": "class", "doc": "<p>Correction ID for a correction factor. (Columns in HyperX)</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.CorrectionId.Correction1", "modulename": "hyperx.api.types", "qualname": "CorrectionId.Correction1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionId.Correction1: 1&gt;"}, {"fullname": "hyperx.api.types.CorrectionId.Correction2", "modulename": "hyperx.api.types", "qualname": "CorrectionId.Correction2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionId.Correction2: 2&gt;"}, {"fullname": "hyperx.api.types.CorrectionId.Correction7", "modulename": "hyperx.api.types", "qualname": "CorrectionId.Correction7", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionId.Correction7: 3&gt;"}, {"fullname": "hyperx.api.types.CorrectionId.Correction6", "modulename": "hyperx.api.types", "qualname": "CorrectionId.Correction6", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionId.Correction6: 4&gt;"}, {"fullname": "hyperx.api.types.CorrectionId.Correction8", "modulename": "hyperx.api.types", "qualname": "CorrectionId.Correction8", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionId.Correction8: 5&gt;"}, {"fullname": "hyperx.api.types.CorrectionId.Correction9", "modulename": "hyperx.api.types", "qualname": "CorrectionId.Correction9", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionId.Correction9: 6&gt;"}, {"fullname": "hyperx.api.types.CorrectionId.Correction5", "modulename": "hyperx.api.types", "qualname": "CorrectionId.Correction5", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionId.Correction5: 7&gt;"}, {"fullname": "hyperx.api.types.CorrectionId.Correction3", "modulename": "hyperx.api.types", "qualname": "CorrectionId.Correction3", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionId.Correction3: 8&gt;"}, {"fullname": "hyperx.api.types.CorrectionId.Correction4", "modulename": "hyperx.api.types", "qualname": "CorrectionId.Correction4", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionId.Correction4: 9&gt;"}, {"fullname": "hyperx.api.types.CorrectionIndependentDefinition", "modulename": "hyperx.api.types", "qualname": "CorrectionIndependentDefinition", "kind": "class", "doc": "<p>Defines the type of Correction Factor.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.CorrectionIndependentDefinition.Temperature", "modulename": "hyperx.api.types", "qualname": "CorrectionIndependentDefinition.Temperature", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionIndependentDefinition.Temperature: 1&gt;"}, {"fullname": "hyperx.api.types.CorrectionIndependentDefinition.Percent0s", "modulename": "hyperx.api.types", "qualname": "CorrectionIndependentDefinition.Percent0s", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionIndependentDefinition.Percent0s: 2&gt;"}, {"fullname": "hyperx.api.types.CorrectionIndependentDefinition.Percent45s", "modulename": "hyperx.api.types", "qualname": "CorrectionIndependentDefinition.Percent45s", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionIndependentDefinition.Percent45s: 3&gt;"}, {"fullname": "hyperx.api.types.CorrectionIndependentDefinition.AML", "modulename": "hyperx.api.types", "qualname": "CorrectionIndependentDefinition.AML", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionIndependentDefinition.AML: 4&gt;"}, {"fullname": "hyperx.api.types.CorrectionIndependentDefinition.IsCsk", "modulename": "hyperx.api.types", "qualname": "CorrectionIndependentDefinition.IsCsk", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionIndependentDefinition.IsCsk: 5&gt;"}, {"fullname": "hyperx.api.types.CorrectionIndependentDefinition.Csk", "modulename": "hyperx.api.types", "qualname": "CorrectionIndependentDefinition.Csk", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionIndependentDefinition.Csk: 6&gt;"}, {"fullname": "hyperx.api.types.CorrectionIndependentDefinition.e_over_D", "modulename": "hyperx.api.types", "qualname": "CorrectionIndependentDefinition.e_over_D", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionIndependentDefinition.e_over_D: 7&gt;"}, {"fullname": "hyperx.api.types.CorrectionIndependentDefinition.S_over_D", "modulename": "hyperx.api.types", "qualname": "CorrectionIndependentDefinition.S_over_D", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionIndependentDefinition.S_over_D: 8&gt;"}, {"fullname": "hyperx.api.types.CorrectionIndependentDefinition.Spacing", "modulename": "hyperx.api.types", "qualname": "CorrectionIndependentDefinition.Spacing", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionIndependentDefinition.Spacing: 9&gt;"}, {"fullname": "hyperx.api.types.CorrectionIndependentDefinition.Diameter", "modulename": "hyperx.api.types", "qualname": "CorrectionIndependentDefinition.Diameter", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionIndependentDefinition.Diameter: 10&gt;"}, {"fullname": "hyperx.api.types.CorrectionIndependentDefinition.Thickness", "modulename": "hyperx.api.types", "qualname": "CorrectionIndependentDefinition.Thickness", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionIndependentDefinition.Thickness: 11&gt;"}, {"fullname": "hyperx.api.types.CorrectionIndependentDefinition.D_over_t", "modulename": "hyperx.api.types", "qualname": "CorrectionIndependentDefinition.D_over_t", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionIndependentDefinition.D_over_t: 12&gt;"}, {"fullname": "hyperx.api.types.CorrectionIndependentDefinition.H_over_t", "modulename": "hyperx.api.types", "qualname": "CorrectionIndependentDefinition.H_over_t", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionIndependentDefinition.H_over_t: 13&gt;"}, {"fullname": "hyperx.api.types.CorrectionIndependentDefinition.ShimThickness", "modulename": "hyperx.api.types", "qualname": "CorrectionIndependentDefinition.ShimThickness", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionIndependentDefinition.ShimThickness: 14&gt;"}, {"fullname": "hyperx.api.types.CorrectionIndependentDefinition.PointIndex", "modulename": "hyperx.api.types", "qualname": "CorrectionIndependentDefinition.PointIndex", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionIndependentDefinition.PointIndex: 15&gt;"}, {"fullname": "hyperx.api.types.CorrectionIndependentDefinition.CoreDensity", "modulename": "hyperx.api.types", "qualname": "CorrectionIndependentDefinition.CoreDensity", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionIndependentDefinition.CoreDensity: 16&gt;"}, {"fullname": "hyperx.api.types.CorrectionIndependentDefinition.CoreThickness", "modulename": "hyperx.api.types", "qualname": "CorrectionIndependentDefinition.CoreThickness", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionIndependentDefinition.CoreThickness: 17&gt;"}, {"fullname": "hyperx.api.types.CorrectionIndependentDefinition.Skin", "modulename": "hyperx.api.types", "qualname": "CorrectionIndependentDefinition.Skin", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionIndependentDefinition.Skin: 18&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty", "kind": "class", "doc": "<p>Property name for a correction factor. (Rows in HyperX)</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.CorrectionProperty.Et1", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.Et1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.Et1: 2&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.Et2", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.Et2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.Et2: 3&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.Ec1", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.Ec1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.Ec1: 5&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.Ec2", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.Ec2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.Ec2: 6&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.G12", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.G12", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.G12: 8&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.Ftu1", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.Ftu1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.Ftu1: 11&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.Ftu2", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.Ftu2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.Ftu2: 12&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.Fcu1", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.Fcu1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.Fcu1: 13&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.Fcu2", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.Fcu2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.Fcu2: 14&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.Fsu12", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.Fsu12", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.Fsu12: 17&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.Fsu13", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.Fsu13", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.Fsu13: 18&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.Fsu23", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.Fsu23", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.Fsu23: 19&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.etu1", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.etu1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.etu1: 32&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.etu2", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.etu2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.etu2: 33&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.ecu1", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.ecu1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.ecu1: 34&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.ecu2", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.ecu2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.ecu2: 35&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.eOHT", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.eOHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.eOHT: 36&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.eOHC", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.eOHC", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.eOHC: 37&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.esu12", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.esu12", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.esu12: 38&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.esu13", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.esu13", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.esu13: 39&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.esu23", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.esu23", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.esu23: 40&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.Ftu3", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.Ftu3", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.Ftu3: 50&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.D0_Tension", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.D0_Tension", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.D0_Tension: 82&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.D0_Compression", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.D0_Compression", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.D0_Compression: 84&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.Tension_Pristine", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.Tension_Pristine", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.Tension_Pristine: 1001&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.Compression_Pristine", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.Compression_Pristine", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.Compression_Pristine: 1002&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.Shear_Pristine", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.Shear_Pristine", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.Shear_Pristine: 1003&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.Tension_OHT", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.Tension_OHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.Tension_OHT: 1004&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.Compression_OHC", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.Compression_OHC", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.Compression_OHC: 1005&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.Bearing", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.Bearing", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.Bearing: 1006&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.Compression_CAI", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.Compression_CAI", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.Compression_CAI: 1009&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.Compression_FHC", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.Compression_FHC", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.Compression_FHC: 1010&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.Compression_BVID", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.Compression_BVID", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.Compression_BVID: 1011&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.Tension_TAI", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.Tension_TAI", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.Tension_TAI: 1012&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.Tension_FHT", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.Tension_FHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.Tension_FHT: 1013&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.Shear_SAI", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.Shear_SAI", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.Shear_SAI: 1014&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.PullThrough", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.PullThrough", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.PullThrough: 1015&gt;"}, {"fullname": "hyperx.api.types.CorrectionProperty.BearingBypass", "modulename": "hyperx.api.types", "qualname": "CorrectionProperty.BearingBypass", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionProperty.BearingBypass: 1016&gt;"}, {"fullname": "hyperx.api.types.CorrectionValueType", "modulename": "hyperx.api.types", "qualname": "CorrectionValueType", "kind": "class", "doc": "<p>Defines the type of the independent values on a tabular correction factor row.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.CorrectionValueType.Double", "modulename": "hyperx.api.types", "qualname": "CorrectionValueType.Double", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionValueType.Double: 0&gt;"}, {"fullname": "hyperx.api.types.CorrectionValueType.Bool", "modulename": "hyperx.api.types", "qualname": "CorrectionValueType.Bool", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionValueType.Bool: 1&gt;"}, {"fullname": "hyperx.api.types.CorrectionValueType.Integer", "modulename": "hyperx.api.types", "qualname": "CorrectionValueType.Integer", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CorrectionValueType.Integer: 2&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId", "modulename": "hyperx.api.types", "qualname": "EquationParameterId", "kind": "class", "doc": "<p>Correction factor parameter names.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.EquationParameterId.Constant_Low_Value", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.Constant_Low_Value", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.Constant_Low_Value: 1001&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.Constant_High_Value", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.Constant_High_Value", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.Constant_High_Value: 1002&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.Constant_Constant", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.Constant_Constant", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.Constant_Constant: 1003&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.LinearPly_Low_Value", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.LinearPly_Low_Value", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.LinearPly_Low_Value: 2001&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.LinearPly_High_Value", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.LinearPly_High_Value", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.LinearPly_High_Value: 2002&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.LinearPly_Constant", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.LinearPly_Constant", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.LinearPly_Constant: 2003&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.LinearPly_Percent_0s", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.LinearPly_Percent_0s", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.LinearPly_Percent_0s: 2004&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.LinearPly_Percent_45s", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.LinearPly_Percent_45s", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.LinearPly_Percent_45s: 2005&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.LinearPly_Factor_Thickness", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.LinearPly_Factor_Thickness", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.LinearPly_Factor_Thickness: 2006&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.QuadraticPlyTemp_Low_Value", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.QuadraticPlyTemp_Low_Value", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.QuadraticPlyTemp_Low_Value: 3001&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.QuadraticPlyTemp_High_Value", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.QuadraticPlyTemp_High_Value", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.QuadraticPlyTemp_High_Value: 3002&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.QuadraticPlyTemp_Constant", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.QuadraticPlyTemp_Constant", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.QuadraticPlyTemp_Constant: 3003&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.QuadraticPlyTemp_Percent_0s", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.QuadraticPlyTemp_Percent_0s", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.QuadraticPlyTemp_Percent_0s: 3004&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.QuadraticPlyTemp_Percent_45s", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.QuadraticPlyTemp_Percent_45s", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.QuadraticPlyTemp_Percent_45s: 3005&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.QuadraticPlyTemp_Percent_0s_Squared", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.QuadraticPlyTemp_Percent_0s_Squared", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.QuadraticPlyTemp_Percent_0s_Squared: 3006&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.QuadraticPlyTemp_Percent_45s_Squared", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.QuadraticPlyTemp_Percent_45s_Squared", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.QuadraticPlyTemp_Percent_45s_Squared: 3007&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.QuadraticPlyTemp_P0s_Times_P45s", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.QuadraticPlyTemp_P0s_Times_P45s", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.QuadraticPlyTemp_P0s_Times_P45s: 3008&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.QuadraticPlyTemp_Temperature", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.QuadraticPlyTemp_Temperature", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.QuadraticPlyTemp_Temperature: 3009&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.QuadraticPlyTemp_Temperature_Squared", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.QuadraticPlyTemp_Temperature_Squared", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.QuadraticPlyTemp_Temperature_Squared: 3010&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.QuadraticPlyTemp_T0", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.QuadraticPlyTemp_T0", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.QuadraticPlyTemp_T0: 3011&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.CubicAML_Low_Value", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.CubicAML_Low_Value", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.CubicAML_Low_Value: 4001&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.CubicAML_High_Value", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.CubicAML_High_Value", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.CubicAML_High_Value: 4002&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.CubicAML_Constant", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.CubicAML_Constant", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.CubicAML_Constant: 4003&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.CubicAML_AML_Number", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.CubicAML_AML_Number", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.CubicAML_AML_Number: 4004&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.CubicAML_AML_Number_Squared", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.CubicAML_AML_Number_Squared", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.CubicAML_AML_Number_Squared: 4005&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.CubicAML_AML_Number_Cubed", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.CubicAML_AML_Number_Cubed", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.CubicAML_AML_Number_Cubed: 4006&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.BiQuadThick_Low_Value", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.BiQuadThick_Low_Value", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.BiQuadThick_Low_Value: 5001&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.BiQuadThick_High_Value", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.BiQuadThick_High_Value", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.BiQuadThick_High_Value: 5002&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.BiQuadThick_Threshold", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.BiQuadThick_Threshold", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.BiQuadThick_Threshold: 5003&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.BiQuadThick_Constant_1", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.BiQuadThick_Constant_1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.BiQuadThick_Constant_1: 5004&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.BiQuadThick_Factor_Thickness_1", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.BiQuadThick_Factor_Thickness_1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.BiQuadThick_Factor_Thickness_1: 5005&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.BiQuadThick_Constant_2", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.BiQuadThick_Constant_2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.BiQuadThick_Constant_2: 5006&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.BiQuadThick_Factor_Thickness_2", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.BiQuadThick_Factor_Thickness_2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.BiQuadThick_Factor_Thickness_2: 5007&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.BiQuadThick_Factor_Thickness_Squared_1", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.BiQuadThick_Factor_Thickness_Squared_1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.BiQuadThick_Factor_Thickness_Squared_1: 5008&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.BiQuadThick_Factor_Thickness_Squared_2", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.BiQuadThick_Factor_Thickness_Squared_2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.BiQuadThick_Factor_Thickness_Squared_2: 5009&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.QuadDiamThick_Low_Value", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.QuadDiamThick_Low_Value", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.QuadDiamThick_Low_Value: 6001&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.QuadDiamThick_High_Value", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.QuadDiamThick_High_Value", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.QuadDiamThick_High_Value: 6002&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.QuadDiamThick_Constant", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.QuadDiamThick_Constant", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.QuadDiamThick_Constant: 6003&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.QuadDiamThick_Diameter", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.QuadDiamThick_Diameter", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.QuadDiamThick_Diameter: 6004&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.QuadDiamThick_Diameter_Squared", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.QuadDiamThick_Diameter_Squared", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.QuadDiamThick_Diameter_Squared: 6005&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.QuadDiamThick_Thickness_Over_D", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.QuadDiamThick_Thickness_Over_D", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.QuadDiamThick_Thickness_Over_D: 6006&gt;"}, {"fullname": "hyperx.api.types.EquationParameterId.QuadDiamThick_Thickness_Over_D_Squared", "modulename": "hyperx.api.types", "qualname": "EquationParameterId.QuadDiamThick_Thickness_Over_D_Squared", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;EquationParameterId.QuadDiamThick_Thickness_Over_D_Squared: 6007&gt;"}, {"fullname": "hyperx.api.types.LaminateFamilySettingType", "modulename": "hyperx.api.types", "qualname": "LaminateFamilySettingType", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.LaminateFamilySettingType.none", "modulename": "hyperx.api.types", "qualname": "LaminateFamilySettingType.none", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LaminateFamilySettingType.none: 0&gt;"}, {"fullname": "hyperx.api.types.LaminateFamilySettingType.Allowed", "modulename": "hyperx.api.types", "qualname": "LaminateFamilySettingType.Allowed", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LaminateFamilySettingType.Allowed: 1&gt;"}, {"fullname": "hyperx.api.types.LaminateFamilySettingType.Required", "modulename": "hyperx.api.types", "qualname": "LaminateFamilySettingType.Required", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LaminateFamilySettingType.Required: 2&gt;"}, {"fullname": "hyperx.api.types.LaminateFamilyType", "modulename": "hyperx.api.types", "qualname": "LaminateFamilyType", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.LaminateFamilyType.Unknown", "modulename": "hyperx.api.types", "qualname": "LaminateFamilyType.Unknown", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LaminateFamilyType.Unknown: 0&gt;"}, {"fullname": "hyperx.api.types.LaminateFamilyType.Traditional", "modulename": "hyperx.api.types", "qualname": "LaminateFamilyType.Traditional", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LaminateFamilyType.Traditional: 1&gt;"}, {"fullname": "hyperx.api.types.LaminateFamilyType.DoubleDouble", "modulename": "hyperx.api.types", "qualname": "LaminateFamilyType.DoubleDouble", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LaminateFamilyType.DoubleDouble: 2&gt;"}, {"fullname": "hyperx.api.types.PlyDropPattern", "modulename": "hyperx.api.types", "qualname": "PlyDropPattern", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.PlyDropPattern.none", "modulename": "hyperx.api.types", "qualname": "PlyDropPattern.none", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PlyDropPattern.none: 0&gt;"}, {"fullname": "hyperx.api.types.PlyDropPattern.Hourglass", "modulename": "hyperx.api.types", "qualname": "PlyDropPattern.Hourglass", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PlyDropPattern.Hourglass: 1&gt;"}, {"fullname": "hyperx.api.types.PlyDropPattern.Diamond", "modulename": "hyperx.api.types", "qualname": "PlyDropPattern.Diamond", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PlyDropPattern.Diamond: 2&gt;"}, {"fullname": "hyperx.api.types.PlyDropPattern.UpsideDownTriangle", "modulename": "hyperx.api.types", "qualname": "PlyDropPattern.UpsideDownTriangle", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PlyDropPattern.UpsideDownTriangle: 3&gt;"}, {"fullname": "hyperx.api.types.PlyDropPattern.Pyramid", "modulename": "hyperx.api.types", "qualname": "PlyDropPattern.Pyramid", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PlyDropPattern.Pyramid: 4&gt;"}, {"fullname": "hyperx.api.types.PlyDropPattern.Interleaved", "modulename": "hyperx.api.types", "qualname": "PlyDropPattern.Interleaved", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PlyDropPattern.Interleaved: 5&gt;"}, {"fullname": "hyperx.api.types.PlyDropPattern.InterleavedHourglass", "modulename": "hyperx.api.types", "qualname": "PlyDropPattern.InterleavedHourglass", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PlyDropPattern.InterleavedHourglass: 6&gt;"}, {"fullname": "hyperx.api.types.PlyDropPattern.Element", "modulename": "hyperx.api.types", "qualname": "PlyDropPattern.Element", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PlyDropPattern.Element: 7&gt;"}, {"fullname": "hyperx.api.types.PlyDropPattern.Stiffener", "modulename": "hyperx.api.types", "qualname": "PlyDropPattern.Stiffener", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PlyDropPattern.Stiffener: 8&gt;"}, {"fullname": "hyperx.api.types.PlyStiffenerSubType", "modulename": "hyperx.api.types", "qualname": "PlyStiffenerSubType", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.PlyStiffenerSubType.none", "modulename": "hyperx.api.types", "qualname": "PlyStiffenerSubType.none", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PlyStiffenerSubType.none: 0&gt;"}, {"fullname": "hyperx.api.types.PlyStiffenerSubType.Base1", "modulename": "hyperx.api.types", "qualname": "PlyStiffenerSubType.Base1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PlyStiffenerSubType.Base1: 1&gt;"}, {"fullname": "hyperx.api.types.PlyStiffenerSubType.Plank", "modulename": "hyperx.api.types", "qualname": "PlyStiffenerSubType.Plank", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PlyStiffenerSubType.Plank: 2&gt;"}, {"fullname": "hyperx.api.types.PlyStiffenerSubType.FootCharge", "modulename": "hyperx.api.types", "qualname": "PlyStiffenerSubType.FootCharge", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PlyStiffenerSubType.FootCharge: 3&gt;"}, {"fullname": "hyperx.api.types.PlyStiffenerSubType.WebCharge", "modulename": "hyperx.api.types", "qualname": "PlyStiffenerSubType.WebCharge", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PlyStiffenerSubType.WebCharge: 4&gt;"}, {"fullname": "hyperx.api.types.PlyStiffenerSubType.CapCharge", "modulename": "hyperx.api.types", "qualname": "PlyStiffenerSubType.CapCharge", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PlyStiffenerSubType.CapCharge: 5&gt;"}, {"fullname": "hyperx.api.types.PlyStiffenerSubType.CapCover", "modulename": "hyperx.api.types", "qualname": "PlyStiffenerSubType.CapCover", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PlyStiffenerSubType.CapCover: 6&gt;"}, {"fullname": "hyperx.api.types.PlyStiffenerSubType.Charge", "modulename": "hyperx.api.types", "qualname": "PlyStiffenerSubType.Charge", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PlyStiffenerSubType.Charge: 7&gt;"}, {"fullname": "hyperx.api.types.PlyStiffenerSubType.Base2", "modulename": "hyperx.api.types", "qualname": "PlyStiffenerSubType.Base2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PlyStiffenerSubType.Base2: 8&gt;"}, {"fullname": "hyperx.api.types.PlyStiffenerSubType.BottomCover", "modulename": "hyperx.api.types", "qualname": "PlyStiffenerSubType.BottomCover", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PlyStiffenerSubType.BottomCover: 9&gt;"}, {"fullname": "hyperx.api.types.PlyStiffenerSubType.TopCover", "modulename": "hyperx.api.types", "qualname": "PlyStiffenerSubType.TopCover", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PlyStiffenerSubType.TopCover: 10&gt;"}, {"fullname": "hyperx.api.types.StiffenerLaminateLayerLocation", "modulename": "hyperx.api.types", "qualname": "StiffenerLaminateLayerLocation", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.StiffenerLaminateLayerLocation.Base", "modulename": "hyperx.api.types", "qualname": "StiffenerLaminateLayerLocation.Base", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffenerLaminateLayerLocation.Base: 1&gt;"}, {"fullname": "hyperx.api.types.StiffenerLaminateLayerLocation.Plank", "modulename": "hyperx.api.types", "qualname": "StiffenerLaminateLayerLocation.Plank", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffenerLaminateLayerLocation.Plank: 2&gt;"}, {"fullname": "hyperx.api.types.StiffenerLaminateLayerLocation.FootCharge", "modulename": "hyperx.api.types", "qualname": "StiffenerLaminateLayerLocation.FootCharge", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffenerLaminateLayerLocation.FootCharge: 3&gt;"}, {"fullname": "hyperx.api.types.StiffenerLaminateLayerLocation.WebCharge", "modulename": "hyperx.api.types", "qualname": "StiffenerLaminateLayerLocation.WebCharge", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffenerLaminateLayerLocation.WebCharge: 4&gt;"}, {"fullname": "hyperx.api.types.StiffenerLaminateLayerLocation.CapCharge", "modulename": "hyperx.api.types", "qualname": "StiffenerLaminateLayerLocation.CapCharge", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffenerLaminateLayerLocation.CapCharge: 5&gt;"}, {"fullname": "hyperx.api.types.StiffenerLaminateLayerLocation.BottomCover", "modulename": "hyperx.api.types", "qualname": "StiffenerLaminateLayerLocation.BottomCover", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffenerLaminateLayerLocation.BottomCover: 6&gt;"}, {"fullname": "hyperx.api.types.StiffenerLaminateLayerLocation.TopCover", "modulename": "hyperx.api.types", "qualname": "StiffenerLaminateLayerLocation.TopCover", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffenerLaminateLayerLocation.TopCover: 7&gt;"}, {"fullname": "hyperx.api.types.StiffenerProfile", "modulename": "hyperx.api.types", "qualname": "StiffenerProfile", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.StiffenerProfile.Corrugated", "modulename": "hyperx.api.types", "qualname": "StiffenerProfile.Corrugated", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffenerProfile.Corrugated: 1&gt;"}, {"fullname": "hyperx.api.types.StiffenerProfile.IPanel", "modulename": "hyperx.api.types", "qualname": "StiffenerProfile.IPanel", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffenerProfile.IPanel: 2&gt;"}, {"fullname": "hyperx.api.types.StiffenerProfile.TPanel", "modulename": "hyperx.api.types", "qualname": "StiffenerProfile.TPanel", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffenerProfile.TPanel: 3&gt;"}, {"fullname": "hyperx.api.types.StiffenerProfile.ZPanel", "modulename": "hyperx.api.types", "qualname": "StiffenerProfile.ZPanel", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffenerProfile.ZPanel: 4&gt;"}, {"fullname": "hyperx.api.types.StiffenerProfile.JPanel", "modulename": "hyperx.api.types", "qualname": "StiffenerProfile.JPanel", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffenerProfile.JPanel: 5&gt;"}, {"fullname": "hyperx.api.types.StiffenerProfile.CPanel", "modulename": "hyperx.api.types", "qualname": "StiffenerProfile.CPanel", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffenerProfile.CPanel: 6&gt;"}, {"fullname": "hyperx.api.types.StiffenerProfile.AnglePanel", "modulename": "hyperx.api.types", "qualname": "StiffenerProfile.AnglePanel", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffenerProfile.AnglePanel: 7&gt;"}, {"fullname": "hyperx.api.types.StiffenerProfile.InvertedTPanel", "modulename": "hyperx.api.types", "qualname": "StiffenerProfile.InvertedTPanel", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffenerProfile.InvertedTPanel: 8&gt;"}, {"fullname": "hyperx.api.types.StiffenerProfile.LPanel", "modulename": "hyperx.api.types", "qualname": "StiffenerProfile.LPanel", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffenerProfile.LPanel: 9&gt;"}, {"fullname": "hyperx.api.types.StiffenerProfile.IsoGrid", "modulename": "hyperx.api.types", "qualname": "StiffenerProfile.IsoGrid", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffenerProfile.IsoGrid: 10&gt;"}, {"fullname": "hyperx.api.types.StiffenerProfile.Orthogrid", "modulename": "hyperx.api.types", "qualname": "StiffenerProfile.Orthogrid", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffenerProfile.Orthogrid: 11&gt;"}, {"fullname": "hyperx.api.types.StiffenerProfile.GeneralGrid", "modulename": "hyperx.api.types", "qualname": "StiffenerProfile.GeneralGrid", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffenerProfile.GeneralGrid: 12&gt;"}, {"fullname": "hyperx.api.types.StiffenerProfile.IBeam", "modulename": "hyperx.api.types", "qualname": "StiffenerProfile.IBeam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffenerProfile.IBeam: 13&gt;"}, {"fullname": "hyperx.api.types.StiffenerProfile.CBeam", "modulename": "hyperx.api.types", "qualname": "StiffenerProfile.CBeam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffenerProfile.CBeam: 14&gt;"}, {"fullname": "hyperx.api.types.StiffenerProfile.TBeam", "modulename": "hyperx.api.types", "qualname": "StiffenerProfile.TBeam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffenerProfile.TBeam: 15&gt;"}, {"fullname": "hyperx.api.types.StiffenerProfile.ZBeam", "modulename": "hyperx.api.types", "qualname": "StiffenerProfile.ZBeam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffenerProfile.ZBeam: 16&gt;"}, {"fullname": "hyperx.api.types.StiffenerProfile.LBeam", "modulename": "hyperx.api.types", "qualname": "StiffenerProfile.LBeam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffenerProfile.LBeam: 17&gt;"}, {"fullname": "hyperx.api.types.StiffenerProfile.JBeam", "modulename": "hyperx.api.types", "qualname": "StiffenerProfile.JBeam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffenerProfile.JBeam: 18&gt;"}, {"fullname": "hyperx.api.types.StiffenerProfile.RectangularBeam", "modulename": "hyperx.api.types", "qualname": "StiffenerProfile.RectangularBeam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;StiffenerProfile.RectangularBeam: 19&gt;"}, {"fullname": "hyperx.api.types.MaterialType", "modulename": "hyperx.api.types", "qualname": "MaterialType", "kind": "class", "doc": "<p>Represents a material's type.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.MaterialType.Foam", "modulename": "hyperx.api.types", "qualname": "MaterialType.Foam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MaterialType.Foam: 0&gt;"}, {"fullname": "hyperx.api.types.MaterialType.Honeycomb", "modulename": "hyperx.api.types", "qualname": "MaterialType.Honeycomb", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MaterialType.Honeycomb: 1&gt;"}, {"fullname": "hyperx.api.types.MaterialType.Isotropic", "modulename": "hyperx.api.types", "qualname": "MaterialType.Isotropic", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MaterialType.Isotropic: 2&gt;"}, {"fullname": "hyperx.api.types.MaterialType.Laminate", "modulename": "hyperx.api.types", "qualname": "MaterialType.Laminate", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MaterialType.Laminate: 3&gt;"}, {"fullname": "hyperx.api.types.MaterialType.Orthotropic", "modulename": "hyperx.api.types", "qualname": "MaterialType.Orthotropic", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MaterialType.Orthotropic: 5&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Default_Object", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Default_Object", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Default_Object: 0&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Top_Stack", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Top_Stack", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Top_Stack: 1&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Middle_Stack", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Middle_Stack", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Middle_Stack: 2&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Bottom_Stack", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Bottom_Stack", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Bottom_Stack: 3&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Top_Honeycomb_Face", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Top_Honeycomb_Face", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Top_Honeycomb_Face: 4&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Honeycomb_Core", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Honeycomb_Core", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Honeycomb_Core: 5&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Bottom_Honeycomb_Face", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Bottom_Honeycomb_Face", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Bottom_Honeycomb_Face: 6&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Top_Foam_Face", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Top_Foam_Face", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Top_Foam_Face: 7&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Foam_Core_Unstiffened", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Foam_Core_Unstiffened", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Foam_Core_Unstiffened: 8&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Bottom_Foam_Face", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Bottom_Foam_Face", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Bottom_Foam_Face: 9&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Corrugated_FwntTop_with_flange_Open_Span", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Corrugated_FwntTop_with_flange_Open_Span", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Corrugated_FwntTop_with_flange_Open_Span: 10&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Bwidth_Closed_Span", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Bwidth_Closed_Span", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Bwidth_Closed_Span: 11&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Wnt_face_only_Joint_Span_Corrugated", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Wnt_face_only_Joint_Span_Corrugated", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Wnt_face_only_Joint_Span_Corrugated: 12&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Wnt_Crown_Top_Crown_Top", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Wnt_Crown_Top_Crown_Top", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Wnt_Crown_Top_Crown_Top: 13&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Wnt_ComboTop_Bonded_Combo_Top", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Wnt_ComboTop_Bonded_Combo_Top", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Wnt_ComboTop_Bonded_Combo_Top: 14&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.FwntAndWnt_ComboTop_Fastened_Flange_and_Face_Top", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.FwntAndWnt_ComboTop_Fastened_Flange_and_Face_Top", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.FwntAndWnt_ComboTop_Fastened_Flange_and_Face_Top: 15&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Bonded_FwntAndWnt_ComboTop_Bonded_Flange_and_Face_Top", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Bonded_FwntAndWnt_ComboTop_Bonded_Flange_and_Face_Top", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Bonded_FwntAndWnt_ComboTop_Bonded_Flange_and_Face_Top: 16&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.B2_Web_Web_Corrugated", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.B2_Web_Web_Corrugated", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.B2_Web_Web_Corrugated: 17&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Wnb_Crown_bottom_Crown_Bottom", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Wnb_Crown_bottom_Crown_Bottom", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Wnb_Crown_bottom_Crown_Bottom: 18&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Wnb_Combo_bottom_Bonded_Combo", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Wnb_Combo_bottom_Bonded_Combo", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Wnb_Combo_bottom_Bonded_Combo: 19&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Wnb_face_only_Joint_Span_Corrugated", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Wnb_face_only_Joint_Span_Corrugated", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Wnb_face_only_Joint_Span_Corrugated: 20&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Sx_MinusOrDashIdk_Wnb_bottom_face_Bottom_Span", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Sx_MinusOrDashIdk_Wnb_bottom_face_Bottom_Span", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Sx_MinusOrDashIdk_Wnb_bottom_face_Bottom_Span: 21&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.FwntAndWnt_Discontinuous_Spacing_Span_Corrugated", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.FwntAndWnt_Discontinuous_Spacing_Span_Corrugated", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.FwntAndWnt_Discontinuous_Spacing_Span_Corrugated: 22&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.FwntTop_no_flange_Clear_Span", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.FwntTop_no_flange_Clear_Span", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.FwntTop_no_flange_Clear_Span: 25&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Wnt_face_only_Joint_Span_Uniaxial", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Wnt_face_only_Joint_Span_Uniaxial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Wnt_face_only_Joint_Span_Uniaxial: 26&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Two_sided_Wnt_Top_Discontinuous_Flange_Top_Uniaxial", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Two_sided_Wnt_Top_Discontinuous_Flange_Top_Uniaxial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Two_sided_Wnt_Top_Discontinuous_Flange_Top_Uniaxial: 27&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.One_sided_Wnt_Top_Discontinuous_Flange_Top_Uniaxial", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.One_sided_Wnt_Top_Discontinuous_Flange_Top_Uniaxial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.One_sided_Wnt_Top_Discontinuous_Flange_Top_Uniaxial: 28&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Two_sided_Wnt_ComboTop_Discontinuous_Bonded_Combo", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Two_sided_Wnt_ComboTop_Discontinuous_Bonded_Combo", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Two_sided_Wnt_ComboTop_Discontinuous_Bonded_Combo: 29&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.One_sided_Wnt_ComboTop_Discontinuous_Bonded_Combo", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.One_sided_Wnt_ComboTop_Discontinuous_Bonded_Combo", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.One_sided_Wnt_ComboTop_Discontinuous_Bonded_Combo: 30&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Defunct_entire_span_FwntAndWnt_ComboTop_Continuous_Fastened_Flange_and_Face_Top", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Defunct_entire_span_FwntAndWnt_ComboTop_Continuous_Fastened_Flange_and_Face_Top", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Defunct_entire_span_FwntAndWnt_ComboTop_Continuous_Fastened_Flange_and_Face_Top: 31&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Entire_span_FwntAndWnt_ComboTop_Continuous_Bonded_Flange_and_Face_Top", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Entire_span_FwntAndWnt_ComboTop_Continuous_Bonded_Flange_and_Face_Top", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Entire_span_FwntAndWnt_ComboTop_Continuous_Bonded_Flange_and_Face_Top: 32&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.B2_Web_Web_Uniaxial", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.B2_Web_Web_Uniaxial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.B2_Web_Web_Uniaxial: 33&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Two_sided_Wnb_bottom_free_flange_Flange_Bottom_Uniaxial", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Two_sided_Wnb_bottom_free_flange_Flange_Bottom_Uniaxial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Two_sided_Wnb_bottom_free_flange_Flange_Bottom_Uniaxial: 34&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.One_sided_Wnb_bottom_free_flange_Flange_Bottom_Uniaxial", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.One_sided_Wnb_bottom_free_flange_Flange_Bottom_Uniaxial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.One_sided_Wnb_bottom_free_flange_Flange_Bottom_Uniaxial: 35&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Two_sided_Wnb_Combo_bottom_Discontinuous_Bonded_Combo", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Two_sided_Wnb_Combo_bottom_Discontinuous_Bonded_Combo", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Two_sided_Wnb_Combo_bottom_Discontinuous_Bonded_Combo: 36&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Entire_span_FwnbAndWnb_ComboBot_Continuous_Bonded_Flange_and_Face_Bottom", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Entire_span_FwnbAndWnb_ComboBot_Continuous_Bonded_Flange_and_Face_Bottom", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Entire_span_FwnbAndWnb_ComboBot_Continuous_Bonded_Flange_and_Face_Bottom: 37&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Wnb_face_only_Joint_Span_Uniaxial", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Wnb_face_only_Joint_Span_Uniaxial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Wnb_face_only_Joint_Span_Uniaxial: 38&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.CleMinusOrDashIdkdash_Wnb_bottom_face_Bottom_Span", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.CleMinusOrDashIdkdash_Wnb_bottom_face_Bottom_Span", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.CleMinusOrDashIdkdash_Wnb_bottom_face_Bottom_Span: 39&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.B2_Web_unsupported_Web", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.B2_Web_unsupported_Web", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.B2_Web_unsupported_Web: 40&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.FwntAndWnt_Discontinuous_Spacing_Span_Uniaxial", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.FwntAndWnt_Discontinuous_Spacing_Span_Uniaxial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.FwntAndWnt_Discontinuous_Spacing_Span_Uniaxial: 41&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Two_sided_Wnt_Top_Discontinuous_Flange_Top_OpenBeam", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Two_sided_Wnt_Top_Discontinuous_Flange_Top_OpenBeam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Two_sided_Wnt_Top_Discontinuous_Flange_Top_OpenBeam: 43&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.One_sided_Wnt_Top_Discontinuous_Flange_Top_OpenBeam", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.One_sided_Wnt_Top_Discontinuous_Flange_Top_OpenBeam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.One_sided_Wnt_Top_Discontinuous_Flange_Top_OpenBeam: 44&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.B2_Web_no_edges_free_Web", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.B2_Web_no_edges_free_Web", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.B2_Web_no_edges_free_Web: 45&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Two_sided_Wnb_bottom_free_flange_Flange_Bottom_OpenBeam", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Two_sided_Wnb_bottom_free_flange_Flange_Bottom_OpenBeam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Two_sided_Wnb_bottom_free_flange_Flange_Bottom_OpenBeam: 46&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.One_sided_Wnb_bottom_free_flange_Flange_Bottom_OpenBeam", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.One_sided_Wnb_bottom_free_flange_Flange_Bottom_OpenBeam", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.One_sided_Wnb_bottom_free_flange_Flange_Bottom_OpenBeam: 47&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.B2_Web_one_edge_free_Web", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.B2_Web_one_edge_free_Web", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.B2_Web_one_edge_free_Web: 48&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.TopFace_Zero_Grid", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.TopFace_Zero_Grid", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.TopFace_Zero_Grid: 49&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.TopFace_Ninety_Grid", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.TopFace_Ninety_Grid", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.TopFace_Ninety_Grid: 50&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.TopFace_OrthoGrid", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.TopFace_OrthoGrid", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.TopFace_OrthoGrid: 51&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.BottomFace_OrthoGrid", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.BottomFace_OrthoGrid", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.BottomFace_OrthoGrid: 52&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.TopFace_WaffleGrid", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.TopFace_WaffleGrid", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.TopFace_WaffleGrid: 53&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.TopFace_AngleGrid", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.TopFace_AngleGrid", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.TopFace_AngleGrid: 54&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.BottomFace_AngleGrid", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.BottomFace_AngleGrid", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.BottomFace_AngleGrid: 55&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.TopFace_GeneralGrid", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.TopFace_GeneralGrid", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.TopFace_GeneralGrid: 56&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Web_Zero_Grid", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Web_Zero_Grid", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Web_Zero_Grid: 59&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Web_Ninety_Grid", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Web_Ninety_Grid", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Web_Ninety_Grid: 60&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Zero_Web", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Zero_Web", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Zero_Web: 61&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Ninety_Web", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Ninety_Web", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Ninety_Web: 62&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.AngleWeb_Plus", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.AngleWeb_Plus", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.AngleWeb_Plus: 63&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.AngleWeb_Minus", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.AngleWeb_Minus", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.AngleWeb_Minus: 64&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.FwntTop_with_flange_Open_Span_Uniaxial", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.FwntTop_with_flange_Open_Span_Uniaxial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.FwntTop_with_flange_Open_Span_Uniaxial: 65&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Curved_Wall", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Curved_Wall", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Curved_Wall: 66&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Foam_Core_Uniaxial", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Foam_Core_Uniaxial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Foam_Core_Uniaxial: 67&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Open_Span", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Open_Span", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Open_Span: 68&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Frame_Web_Foam_Core_PRSEUS", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Frame_Web_Foam_Core_PRSEUS", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Frame_Web_Foam_Core_PRSEUS: 69&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Two_sided_Wnt_s_ComboTop_Discontinuous_Bonded_Combo", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Two_sided_Wnt_s_ComboTop_Discontinuous_Bonded_Combo", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Two_sided_Wnt_s_ComboTop_Discontinuous_Bonded_Combo: 70&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Two_sided_Wnt_f_ComboTop_Discontinuous_Bonded_Combo", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Two_sided_Wnt_f_ComboTop_Discontinuous_Bonded_Combo", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Two_sided_Wnt_f_ComboTop_Discontinuous_Bonded_Combo: 71&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.B2_Web_Stringer_Web", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.B2_Web_Stringer_Web", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.B2_Web_Stringer_Web: 72&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Two_sided_Wnb_bottom_stringer_rod_and_laminate", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Two_sided_Wnb_bottom_stringer_rod_and_laminate", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Two_sided_Wnb_bottom_stringer_rod_and_laminate: 73&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.B2_Web_Frame_Web", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.B2_Web_Frame_Web", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.B2_Web_Frame_Web: 74&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.FwntAndWnt_Discontinuous_Spacing_Span_PRSEUS", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.FwntAndWnt_Discontinuous_Spacing_Span_PRSEUS", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.FwntAndWnt_Discontinuous_Spacing_Span_PRSEUS: 75&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Stringer_and_Frame_Bonded_Combo", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Stringer_and_Frame_Bonded_Combo", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Stringer_and_Frame_Bonded_Combo: 76&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Span_between_frames_for_rod_stiffened_panel", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Span_between_frames_for_rod_stiffened_panel", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Span_between_frames_for_rod_stiffened_panel: 77&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Web_upper", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Web_upper", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Web_upper: 233&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Web_lower", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Web_lower", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Web_lower: 234&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Mid_one_sided", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Mid_one_sided", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Mid_one_sided: 235&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.SC_Foot", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.SC_Foot", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.SC_Foot: 236&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.SC_Web", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.SC_Web", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.SC_Web: 237&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Rectangular_open_beam_Top_Wall", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Rectangular_open_beam_Top_Wall", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Rectangular_open_beam_Top_Wall: 843&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Rectangular_open_beam_Side_Wall", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Rectangular_open_beam_Side_Wall", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Rectangular_open_beam_Side_Wall: 845&gt;"}, {"fullname": "hyperx.api.types.FamilyObjectUID.Rectangular_open_beam_Bottom_Wall", "modulename": "hyperx.api.types", "qualname": "FamilyObjectUID.Rectangular_open_beam_Bottom_Wall", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FamilyObjectUID.Rectangular_open_beam_Bottom_Wall: 846&gt;"}, {"fullname": "hyperx.api.types.JointObject", "modulename": "hyperx.api.types", "qualname": "JointObject", "kind": "class", "doc": "<p>Enum identifying the possible entities within a joint</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.JointObject.EntireJoint", "modulename": "hyperx.api.types", "qualname": "JointObject.EntireJoint", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointObject.EntireJoint: 0&gt;"}, {"fullname": "hyperx.api.types.JointObject.Fastener", "modulename": "hyperx.api.types", "qualname": "JointObject.Fastener", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointObject.Fastener: 1&gt;"}, {"fullname": "hyperx.api.types.JointObject.Sheet1", "modulename": "hyperx.api.types", "qualname": "JointObject.Sheet1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointObject.Sheet1: 2&gt;"}, {"fullname": "hyperx.api.types.JointObject.Sheet2", "modulename": "hyperx.api.types", "qualname": "JointObject.Sheet2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointObject.Sheet2: 3&gt;"}, {"fullname": "hyperx.api.types.JointObject.Sheet3", "modulename": "hyperx.api.types", "qualname": "JointObject.Sheet3", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointObject.Sheet3: 4&gt;"}, {"fullname": "hyperx.api.types.JointObject.Sheet4", "modulename": "hyperx.api.types", "qualname": "JointObject.Sheet4", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointObject.Sheet4: 5&gt;"}, {"fullname": "hyperx.api.types.JointObject.FaceSheetEndCap", "modulename": "hyperx.api.types", "qualname": "JointObject.FaceSheetEndCap", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointObject.FaceSheetEndCap: 6&gt;"}, {"fullname": "hyperx.api.types.JointObject.EndCap", "modulename": "hyperx.api.types", "qualname": "JointObject.EndCap", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointObject.EndCap: 7&gt;"}, {"fullname": "hyperx.api.types.JointObject.UpperAdhesive", "modulename": "hyperx.api.types", "qualname": "JointObject.UpperAdhesive", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointObject.UpperAdhesive: 8&gt;"}, {"fullname": "hyperx.api.types.JointObject.LowerAdhesive", "modulename": "hyperx.api.types", "qualname": "JointObject.LowerAdhesive", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointObject.LowerAdhesive: 9&gt;"}, {"fullname": "hyperx.api.types.JointObject.UpperDoubler", "modulename": "hyperx.api.types", "qualname": "JointObject.UpperDoubler", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointObject.UpperDoubler: 10&gt;"}, {"fullname": "hyperx.api.types.JointObject.LowerDoubler", "modulename": "hyperx.api.types", "qualname": "JointObject.LowerDoubler", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointObject.LowerDoubler: 11&gt;"}, {"fullname": "hyperx.api.types.JointObject.EdgeAllowableSheet", "modulename": "hyperx.api.types", "qualname": "JointObject.EdgeAllowableSheet", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointObject.EdgeAllowableSheet: 12&gt;"}, {"fullname": "hyperx.api.types.JointObject.Rivet", "modulename": "hyperx.api.types", "qualname": "JointObject.Rivet", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;JointObject.Rivet: 13&gt;"}, {"fullname": "hyperx.api.types.ObjectGroup", "modulename": "hyperx.api.types", "qualname": "ObjectGroup", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.ObjectGroup.EntireConcept", "modulename": "hyperx.api.types", "qualname": "ObjectGroup.EntireConcept", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ObjectGroup.EntireConcept: 0&gt;"}, {"fullname": "hyperx.api.types.ObjectGroup.LaminateSkinTopFacesheet", "modulename": "hyperx.api.types", "qualname": "ObjectGroup.LaminateSkinTopFacesheet", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ObjectGroup.LaminateSkinTopFacesheet: 1&gt;"}, {"fullname": "hyperx.api.types.ObjectGroup.Web", "modulename": "hyperx.api.types", "qualname": "ObjectGroup.Web", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ObjectGroup.Web: 2&gt;"}, {"fullname": "hyperx.api.types.ObjectGroup.Foot", "modulename": "hyperx.api.types", "qualname": "ObjectGroup.Foot", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ObjectGroup.Foot: 3&gt;"}, {"fullname": "hyperx.api.types.ObjectGroup.CapCrown", "modulename": "hyperx.api.types", "qualname": "ObjectGroup.CapCrown", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ObjectGroup.CapCrown: 4&gt;"}, {"fullname": "hyperx.api.types.ObjectGroup.SpacingSpan", "modulename": "hyperx.api.types", "qualname": "ObjectGroup.SpacingSpan", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ObjectGroup.SpacingSpan: 5&gt;"}, {"fullname": "hyperx.api.types.ObjectGroup.Core", "modulename": "hyperx.api.types", "qualname": "ObjectGroup.Core", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ObjectGroup.Core: 6&gt;"}, {"fullname": "hyperx.api.types.ObjectGroup.Wall", "modulename": "hyperx.api.types", "qualname": "ObjectGroup.Wall", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ObjectGroup.Wall: 7&gt;"}, {"fullname": "hyperx.api.types.ObjectGroup.Fastener", "modulename": "hyperx.api.types", "qualname": "ObjectGroup.Fastener", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ObjectGroup.Fastener: 11&gt;"}, {"fullname": "hyperx.api.types.ObjectGroup.Sheet", "modulename": "hyperx.api.types", "qualname": "ObjectGroup.Sheet", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ObjectGroup.Sheet: 12&gt;"}, {"fullname": "hyperx.api.types.ObjectGroup.Doubler", "modulename": "hyperx.api.types", "qualname": "ObjectGroup.Doubler", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ObjectGroup.Doubler: 13&gt;"}, {"fullname": "hyperx.api.types.ObjectGroup.Rivet", "modulename": "hyperx.api.types", "qualname": "ObjectGroup.Rivet", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ObjectGroup.Rivet: 14&gt;"}, {"fullname": "hyperx.api.types.ObjectGroup.Adhesive", "modulename": "hyperx.api.types", "qualname": "ObjectGroup.Adhesive", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ObjectGroup.Adhesive: 15&gt;"}, {"fullname": "hyperx.api.types.ObjectGroup.MiddleStack", "modulename": "hyperx.api.types", "qualname": "ObjectGroup.MiddleStack", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ObjectGroup.MiddleStack: 16&gt;"}, {"fullname": "hyperx.api.types.ObjectGroup.BottomFacesheet", "modulename": "hyperx.api.types", "qualname": "ObjectGroup.BottomFacesheet", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ObjectGroup.BottomFacesheet: 17&gt;"}, {"fullname": "hyperx.api.types.VariableParameter", "modulename": "hyperx.api.types", "qualname": "VariableParameter", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.VariableParameter.none", "modulename": "hyperx.api.types", "qualname": "VariableParameter.none", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.none: 0&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.BottomFaceThicknessMaterial", "modulename": "hyperx.api.types", "qualname": "VariableParameter.BottomFaceThicknessMaterial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.BottomFaceThicknessMaterial: 1&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.BottomFlangeThickness", "modulename": "hyperx.api.types", "qualname": "VariableParameter.BottomFlangeThickness", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.BottomFlangeThickness: 2&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.BottomFlangeWidth", "modulename": "hyperx.api.types", "qualname": "VariableParameter.BottomFlangeWidth", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.BottomFlangeWidth: 3&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.ThreeStackCoreThicknessMaterial", "modulename": "hyperx.api.types", "qualname": "VariableParameter.ThreeStackCoreThicknessMaterial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.ThreeStackCoreThicknessMaterial: 4&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.WebAngle", "modulename": "hyperx.api.types", "qualname": "VariableParameter.WebAngle", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.WebAngle: 5&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.Height", "modulename": "hyperx.api.types", "qualname": "VariableParameter.Height", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.Height: 6&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.Spacing", "modulename": "hyperx.api.types", "qualname": "VariableParameter.Spacing", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.Spacing: 7&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.TopFaceThicknessMaterial", "modulename": "hyperx.api.types", "qualname": "VariableParameter.TopFaceThicknessMaterial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.TopFaceThicknessMaterial: 8&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.TopClearSpanWidth", "modulename": "hyperx.api.types", "qualname": "VariableParameter.TopClearSpanWidth", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.TopClearSpanWidth: 9&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.TopFlangeThickness", "modulename": "hyperx.api.types", "qualname": "VariableParameter.TopFlangeThickness", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.TopFlangeThickness: 10&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.TopFlangeWidth", "modulename": "hyperx.api.types", "qualname": "VariableParameter.TopFlangeWidth", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.TopFlangeWidth: 11&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.EllipticalTubeWallThicknessMaterial", "modulename": "hyperx.api.types", "qualname": "VariableParameter.EllipticalTubeWallThicknessMaterial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.EllipticalTubeWallThicknessMaterial: 13&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.WebThicknessMaterial", "modulename": "hyperx.api.types", "qualname": "VariableParameter.WebThicknessMaterial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.WebThicknessMaterial: 14&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.GridStiffened90WebThickness", "modulename": "hyperx.api.types", "qualname": "VariableParameter.GridStiffened90WebThickness", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.GridStiffened90WebThickness: 15&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.GridStiffenedAngleWebThickness", "modulename": "hyperx.api.types", "qualname": "VariableParameter.GridStiffenedAngleWebThickness", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.GridStiffenedAngleWebThickness: 16&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.GridStiffened0WebHeight", "modulename": "hyperx.api.types", "qualname": "VariableParameter.GridStiffened0WebHeight", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.GridStiffened0WebHeight: 17&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.GridStiffened90WebHeight", "modulename": "hyperx.api.types", "qualname": "VariableParameter.GridStiffened90WebHeight", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.GridStiffened90WebHeight: 18&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.GridStiffenedAngleWebHeight", "modulename": "hyperx.api.types", "qualname": "VariableParameter.GridStiffenedAngleWebHeight", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.GridStiffenedAngleWebHeight: 19&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.GridStiffened90WebStiffenerSpacing", "modulename": "hyperx.api.types", "qualname": "VariableParameter.GridStiffened90WebStiffenerSpacing", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.GridStiffened90WebStiffenerSpacing: 20&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.GridStiffenedAngleWebStiffenerSpacing", "modulename": "hyperx.api.types", "qualname": "VariableParameter.GridStiffenedAngleWebStiffenerSpacing", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.GridStiffenedAngleWebStiffenerSpacing: 21&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.RectangularBeamTopWallThickness", "modulename": "hyperx.api.types", "qualname": "VariableParameter.RectangularBeamTopWallThickness", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.RectangularBeamTopWallThickness: 24&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.RectangularBeamSideWallThicknessMaterial", "modulename": "hyperx.api.types", "qualname": "VariableParameter.RectangularBeamSideWallThicknessMaterial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.RectangularBeamSideWallThicknessMaterial: 25&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.RectangularBeamBottomWallThickness", "modulename": "hyperx.api.types", "qualname": "VariableParameter.RectangularBeamBottomWallThickness", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.RectangularBeamBottomWallThickness: 26&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.BeamWidth", "modulename": "hyperx.api.types", "qualname": "VariableParameter.BeamWidth", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.BeamWidth: 28&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.TubeTaperAngle", "modulename": "hyperx.api.types", "qualname": "VariableParameter.TubeTaperAngle", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.TubeTaperAngle: 29&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.RodStiffenedStringerHeight", "modulename": "hyperx.api.types", "qualname": "VariableParameter.RodStiffenedStringerHeight", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.RodStiffenedStringerHeight: 31&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.RodStiffenedFrameWebThicknessMaterial", "modulename": "hyperx.api.types", "qualname": "VariableParameter.RodStiffenedFrameWebThicknessMaterial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.RodStiffenedFrameWebThicknessMaterial: 32&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.RodStiffenedFrameHeight", "modulename": "hyperx.api.types", "qualname": "VariableParameter.RodStiffenedFrameHeight", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.RodStiffenedFrameHeight: 33&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.RodStiffenedFrameSpacing", "modulename": "hyperx.api.types", "qualname": "VariableParameter.RodStiffenedFrameSpacing", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.RodStiffenedFrameSpacing: 34&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.RodStiffenedFrameFlangeWidth", "modulename": "hyperx.api.types", "qualname": "VariableParameter.RodStiffenedFrameFlangeWidth", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.RodStiffenedFrameFlangeWidth: 35&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.RodStiffenedFrameFlangeThickness", "modulename": "hyperx.api.types", "qualname": "VariableParameter.RodStiffenedFrameFlangeThickness", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.RodStiffenedFrameFlangeThickness: 36&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.RodStiffenedRodDiameterMaterial", "modulename": "hyperx.api.types", "qualname": "VariableParameter.RodStiffenedRodDiameterMaterial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.RodStiffenedRodDiameterMaterial: 37&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.RodStiffenedFrameClearSpan", "modulename": "hyperx.api.types", "qualname": "VariableParameter.RodStiffenedFrameClearSpan", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.RodStiffenedFrameClearSpan: 38&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.RodStiffenedFoamThicknessMaterial", "modulename": "hyperx.api.types", "qualname": "VariableParameter.RodStiffenedFoamThicknessMaterial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.RodStiffenedFoamThicknessMaterial: 41&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.RodStiffenedTopFaceThicknessMaterial", "modulename": "hyperx.api.types", "qualname": "VariableParameter.RodStiffenedTopFaceThicknessMaterial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.RodStiffenedTopFaceThicknessMaterial: 42&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.RodStiffenedStringerSpacing", "modulename": "hyperx.api.types", "qualname": "VariableParameter.RodStiffenedStringerSpacing", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.RodStiffenedStringerSpacing: 43&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.RodStiffenedStringerFlangeWidth", "modulename": "hyperx.api.types", "qualname": "VariableParameter.RodStiffenedStringerFlangeWidth", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.RodStiffenedStringerFlangeWidth: 44&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.RodStiffenedStringerFlangeThickness", "modulename": "hyperx.api.types", "qualname": "VariableParameter.RodStiffenedStringerFlangeThickness", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.RodStiffenedStringerFlangeThickness: 45&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.RodStiffenedStringerClearSpan", "modulename": "hyperx.api.types", "qualname": "VariableParameter.RodStiffenedStringerClearSpan", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.RodStiffenedStringerClearSpan: 46&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.HoneycombThicknessMaterial", "modulename": "hyperx.api.types", "qualname": "VariableParameter.HoneycombThicknessMaterial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.HoneycombThicknessMaterial: 47&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.FoamThicknessMaterial", "modulename": "hyperx.api.types", "qualname": "VariableParameter.FoamThicknessMaterial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.FoamThicknessMaterial: 48&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.HeightStiffener", "modulename": "hyperx.api.types", "qualname": "VariableParameter.HeightStiffener", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.HeightStiffener: 49&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.HeightStiffenerWeb", "modulename": "hyperx.api.types", "qualname": "VariableParameter.HeightStiffenerWeb", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.HeightStiffenerWeb: 50&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.CapBeamThicknessMaterial", "modulename": "hyperx.api.types", "qualname": "VariableParameter.CapBeamThicknessMaterial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.CapBeamThicknessMaterial: 51&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.FrameMidThickness", "modulename": "hyperx.api.types", "qualname": "VariableParameter.FrameMidThickness", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.FrameMidThickness: 52&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.FrameMidWidth", "modulename": "hyperx.api.types", "qualname": "VariableParameter.FrameMidWidth", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.FrameMidWidth: 53&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.FrameMidHeight", "modulename": "hyperx.api.types", "qualname": "VariableParameter.FrameMidHeight", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.FrameMidHeight: 54&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.ShearClipFootThickness", "modulename": "hyperx.api.types", "qualname": "VariableParameter.ShearClipFootThickness", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.ShearClipFootThickness: 55&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.ShearClipFootWidth", "modulename": "hyperx.api.types", "qualname": "VariableParameter.ShearClipFootWidth", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.ShearClipFootWidth: 56&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.ShearClipWebThickness", "modulename": "hyperx.api.types", "qualname": "VariableParameter.ShearClipWebThickness", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.ShearClipWebThickness: 57&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.ShearClipWebHeight", "modulename": "hyperx.api.types", "qualname": "VariableParameter.ShearClipWebHeight", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.ShearClipWebHeight: 58&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.FrameWebCapThickness", "modulename": "hyperx.api.types", "qualname": "VariableParameter.FrameWebCapThickness", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.FrameWebCapThickness: 59&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.ShearClipRefHeight", "modulename": "hyperx.api.types", "qualname": "VariableParameter.ShearClipRefHeight", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.ShearClipRefHeight: 60&gt;"}, {"fullname": "hyperx.api.types.VariableParameter.CorrugatedWebThicknessMaterial", "modulename": "hyperx.api.types", "qualname": "VariableParameter.CorrugatedWebThicknessMaterial", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;VariableParameter.CorrugatedWebThicknessMaterial: 61&gt;"}, {"fullname": "hyperx.api.types.LoadSetType", "modulename": "hyperx.api.types", "qualname": "LoadSetType", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.LoadSetType.Mechanical", "modulename": "hyperx.api.types", "qualname": "LoadSetType.Mechanical", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LoadSetType.Mechanical: 0&gt;"}, {"fullname": "hyperx.api.types.LoadSetType.Thermal", "modulename": "hyperx.api.types", "qualname": "LoadSetType.Thermal", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LoadSetType.Thermal: 1&gt;"}, {"fullname": "hyperx.api.types.ProjectModelFormat", "modulename": "hyperx.api.types", "qualname": "ProjectModelFormat", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.ProjectModelFormat.UNKNOWN", "modulename": "hyperx.api.types", "qualname": "ProjectModelFormat.UNKNOWN", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ProjectModelFormat.UNKNOWN: 0&gt;"}, {"fullname": "hyperx.api.types.ProjectModelFormat.MscNastran", "modulename": "hyperx.api.types", "qualname": "ProjectModelFormat.MscNastran", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ProjectModelFormat.MscNastran: 1&gt;"}, {"fullname": "hyperx.api.types.ProjectModelFormat.NeiNastran", "modulename": "hyperx.api.types", "qualname": "ProjectModelFormat.NeiNastran", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ProjectModelFormat.NeiNastran: 5&gt;"}, {"fullname": "hyperx.api.types.ProjectModelFormat.NxNastran", "modulename": "hyperx.api.types", "qualname": "ProjectModelFormat.NxNastran", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ProjectModelFormat.NxNastran: 6&gt;"}, {"fullname": "hyperx.api.types.ProjectModelFormat.Abaqus", "modulename": "hyperx.api.types", "qualname": "ProjectModelFormat.Abaqus", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ProjectModelFormat.Abaqus: 7&gt;"}, {"fullname": "hyperx.api.types.ProjectModelFormat.Ansys", "modulename": "hyperx.api.types", "qualname": "ProjectModelFormat.Ansys", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ProjectModelFormat.Ansys: 8&gt;"}, {"fullname": "hyperx.api.types.ProjectModelFormat.OptiStruct", "modulename": "hyperx.api.types", "qualname": "ProjectModelFormat.OptiStruct", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ProjectModelFormat.OptiStruct: 9&gt;"}, {"fullname": "hyperx.api.types.SectionCutPropertyLocation", "modulename": "hyperx.api.types", "qualname": "SectionCutPropertyLocation", "kind": "class", "doc": "<p>Centroid vs Origin</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.SectionCutPropertyLocation.Centroid", "modulename": "hyperx.api.types", "qualname": "SectionCutPropertyLocation.Centroid", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;SectionCutPropertyLocation.Centroid: 0&gt;"}, {"fullname": "hyperx.api.types.SectionCutPropertyLocation.Origin", "modulename": "hyperx.api.types", "qualname": "SectionCutPropertyLocation.Origin", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;SectionCutPropertyLocation.Origin: 1&gt;"}, {"fullname": "hyperx.api.types.ReferencePlaneBeam", "modulename": "hyperx.api.types", "qualname": "ReferencePlaneBeam", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.ReferencePlaneBeam.UNKNOWN", "modulename": "hyperx.api.types", "qualname": "ReferencePlaneBeam.UNKNOWN", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ReferencePlaneBeam.UNKNOWN: 0&gt;"}, {"fullname": "hyperx.api.types.ReferencePlaneBeam.Neutral", "modulename": "hyperx.api.types", "qualname": "ReferencePlaneBeam.Neutral", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ReferencePlaneBeam.Neutral: 1&gt;"}, {"fullname": "hyperx.api.types.ReferencePlaneBeam.Top", "modulename": "hyperx.api.types", "qualname": "ReferencePlaneBeam.Top", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ReferencePlaneBeam.Top: 2&gt;"}, {"fullname": "hyperx.api.types.ReferencePlaneBeam.Bottom", "modulename": "hyperx.api.types", "qualname": "ReferencePlaneBeam.Bottom", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ReferencePlaneBeam.Bottom: 3&gt;"}, {"fullname": "hyperx.api.types.ReferencePlanePanel", "modulename": "hyperx.api.types", "qualname": "ReferencePlanePanel", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.ReferencePlanePanel.UNKNOWN", "modulename": "hyperx.api.types", "qualname": "ReferencePlanePanel.UNKNOWN", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ReferencePlanePanel.UNKNOWN: 0&gt;"}, {"fullname": "hyperx.api.types.ReferencePlanePanel.MidplaneTopFace", "modulename": "hyperx.api.types", "qualname": "ReferencePlanePanel.MidplaneTopFace", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ReferencePlanePanel.MidplaneTopFace: 1&gt;"}, {"fullname": "hyperx.api.types.ReferencePlanePanel.Midplane", "modulename": "hyperx.api.types", "qualname": "ReferencePlanePanel.Midplane", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ReferencePlanePanel.Midplane: 2&gt;"}, {"fullname": "hyperx.api.types.ReferencePlanePanel.MidplaneBottomFace", "modulename": "hyperx.api.types", "qualname": "ReferencePlanePanel.MidplaneBottomFace", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ReferencePlanePanel.MidplaneBottomFace: 3&gt;"}, {"fullname": "hyperx.api.types.ReferencePlanePanel.OML", "modulename": "hyperx.api.types", "qualname": "ReferencePlanePanel.OML", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ReferencePlanePanel.OML: 4&gt;"}, {"fullname": "hyperx.api.types.ReferencePlanePanel.IML", "modulename": "hyperx.api.types", "qualname": "ReferencePlanePanel.IML", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ReferencePlanePanel.IML: 5&gt;"}, {"fullname": "hyperx.api.types.ZoneBucklingMode", "modulename": "hyperx.api.types", "qualname": "ZoneBucklingMode", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "hyperx.api.types.ZoneBucklingMode.UNKNOWN", "modulename": "hyperx.api.types", "qualname": "ZoneBucklingMode.UNKNOWN", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ZoneBucklingMode.UNKNOWN: 0&gt;"}, {"fullname": "hyperx.api.types.ZoneBucklingMode.InternalX", "modulename": "hyperx.api.types", "qualname": "ZoneBucklingMode.InternalX", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ZoneBucklingMode.InternalX: 1&gt;"}, {"fullname": "hyperx.api.types.ZoneBucklingMode.InternalY", "modulename": "hyperx.api.types", "qualname": "ZoneBucklingMode.InternalY", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ZoneBucklingMode.InternalY: 2&gt;"}, {"fullname": "hyperx.api.types.ZoneBucklingMode.ExternalX", "modulename": "hyperx.api.types", "qualname": "ZoneBucklingMode.ExternalX", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ZoneBucklingMode.ExternalX: 3&gt;"}, {"fullname": "hyperx.api.types.ZoneBucklingMode.ExternalY", "modulename": "hyperx.api.types", "qualname": "ZoneBucklingMode.ExternalY", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ZoneBucklingMode.ExternalY: 4&gt;"}, {"fullname": "hyperx.api.types.SimpleStatus", "modulename": "hyperx.api.types", "qualname": "SimpleStatus", "kind": "class", "doc": "<p>Lots of methods need to return a Success state and an associated Message.</p>\n"}, {"fullname": "hyperx.api.types.SimpleStatus.__init__", "modulename": "hyperx.api.types", "qualname": "SimpleStatus.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">simpleStatus</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Types</span><span class=\"o\">.</span><span class=\"n\">SimpleStatus</span></span>)</span>"}, {"fullname": "hyperx.api.types.SimpleStatus.Create_SimpleStatus_success_message", "modulename": "hyperx.api.types", "qualname": "SimpleStatus.Create_SimpleStatus_success_message", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">success</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.types.SimpleStatus.Create_SimpleStatus_tupleInput", "modulename": "hyperx.api.types", "qualname": "SimpleStatus.Create_SimpleStatus_tupleInput", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tupleInput</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.types.SimpleStatus.Success", "modulename": "hyperx.api.types", "qualname": "SimpleStatus.Success", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "hyperx.api.types.SimpleStatus.Message", "modulename": "hyperx.api.types", "qualname": "SimpleStatus.Message", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.types.SimpleStatus.ToString", "modulename": "hyperx.api.types", "qualname": "SimpleStatus.ToString", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.types.SimpleStatus.GetHashCode", "modulename": "hyperx.api.types", "qualname": "SimpleStatus.GetHashCode", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.types.SimpleStatus.Equals", "modulename": "hyperx.api.types", "qualname": "SimpleStatus.Equals", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item1</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.types.DesignLink", "modulename": "hyperx.api.types", "qualname": "DesignLink", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "hyperx.api.types.DesignLink.__init__", "modulename": "hyperx.api.types", "qualname": "DesignLink.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">designLink</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Types</span><span class=\"o\">.</span><span class=\"n\">DesignLink</span></span>)</span>"}, {"fullname": "hyperx.api.types.DesignLink.Create_DesignLink", "modulename": "hyperx.api.types", "qualname": "DesignLink.Create_DesignLink", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">designId</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">familyId</span><span class=\"p\">:</span> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">BeamPanelFamily</span>,</span><span class=\"param\">\t<span class=\"n\">conceptId</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">linkedVariableId</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.types.DesignLink.DesignId", "modulename": "hyperx.api.types", "qualname": "DesignLink.DesignId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.types.DesignLink.FamilyId", "modulename": "hyperx.api.types", "qualname": "DesignLink.FamilyId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": hyperx.api.types.BeamPanelFamily"}, {"fullname": "hyperx.api.types.DesignLink.ConceptId", "modulename": "hyperx.api.types", "qualname": "DesignLink.ConceptId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.types.DesignLink.LinkedVariableId", "modulename": "hyperx.api.types", "qualname": "DesignLink.LinkedVariableId", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "hyperx.api.types.DesignLink.Equals", "modulename": "hyperx.api.types", "qualname": "DesignLink.Equals", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">obj</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.types.DesignLink.GetHashCode", "modulename": "hyperx.api.types", "qualname": "DesignLink.GetHashCode", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.types.HyperFeaSolver", "modulename": "hyperx.api.types", "qualname": "HyperFeaSolver", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "hyperx.api.types.HyperFeaSolver.__init__", "modulename": "hyperx.api.types", "qualname": "HyperFeaSolver.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">hyperFeaSolver</span><span class=\"p\">:</span> <span class=\"n\">HyperX</span><span class=\"o\">.</span><span class=\"n\">Types</span><span class=\"o\">.</span><span class=\"n\">HyperFeaSolver</span></span>)</span>"}, {"fullname": "hyperx.api.types.HyperFeaSolver.Create_HyperFeaSolver", "modulename": "hyperx.api.types", "qualname": "HyperFeaSolver.Create_HyperFeaSolver", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">projectModelFormat</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"nb\">property</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">solverPath</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">arguments</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "hyperx.api.types.HyperFeaSolver.ProjectModelFormat", "modulename": "hyperx.api.types", "qualname": "HyperFeaSolver.ProjectModelFormat", "kind": "variable", "doc": "<p></p>\n", "annotation": ": &lt;property object at 0x0000014E357F8220&gt;"}, {"fullname": "hyperx.api.types.HyperFeaSolver.SolverPath", "modulename": "hyperx.api.types", "qualname": "HyperFeaSolver.SolverPath", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.api.types.HyperFeaSolver.Arguments", "modulename": "hyperx.api.types", "qualname": "HyperFeaSolver.Arguments", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "hyperx.library", "modulename": "hyperx.library", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "hyperx.library.find", "modulename": "hyperx.library.find", "kind": "module", "doc": "<p>Utilities for finding HyperX files.</p>\n"}, {"fullname": "hyperx.library.find.AutoDetectInstallFolder", "modulename": "hyperx.library.find", "qualname": "AutoDetectInstallFolder", "kind": "function", "doc": "<p>Gets the installation directory of the most recently installed HyperX.\nThe order of locations searched is:</p>\n\n<ul>\n<li>environment variable</li>\n<li>current user registry (if installed 'for this user only')</li>\n<li>local machine registry (if installed 'for all users')</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.library.library", "modulename": "hyperx.library.library", "kind": "module", "doc": "<p>References the HyperX scripting library.</p>\n"}, {"fullname": "hyperx.library.library.ReferenceLibrary", "modulename": "hyperx.library.library", "qualname": "ReferenceLibrary", "kind": "function", "doc": "<p>Adds references to the C# HyperX scripting library.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "hyperx.utils", "modulename": "hyperx.utils", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "hyperx.utils.utils", "modulename": "hyperx.utils.utils", "kind": "module", "doc": "<p>Utility methods.</p>\n"}, {"fullname": "hyperx.utils.utils.Open", "modulename": "hyperx.utils.utils", "qualname": "Open", "kind": "function", "doc": "<p>Opens a HyperX database for script access.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">hdbPath</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Application</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.utils.utils.OpenManagedDatabase", "modulename": "hyperx.utils.utils", "qualname": "OpenManagedDatabase", "kind": "function", "doc": "<p>Opens a HyperX database for script access in with statement context managers.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">hdbPath</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Generator</span><span class=\"p\">[</span><span class=\"n\">hyperx</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Application</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.utils.utils.OpenWithDefault", "modulename": "hyperx.utils.utils", "qualname": "OpenWithDefault", "kind": "function", "doc": "<p>Opens a file in the default application for its file extension.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "hyperx.utils.utils.CallExternalProcess", "modulename": "hyperx.utils.utils", "qualname": "CallExternalProcess", "kind": "function", "doc": "<p>Calls an external process and returns stdout as a string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">cmd</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.utils.utils.WriteCsv", "modulename": "hyperx.utils.utils", "qualname": "WriteCsv", "kind": "function", "doc": "<p>Write tabular data to a csv file.\nReturns the path that the file was written to.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">title</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">outputDir</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.utils.utils.ScrubFileName", "modulename": "hyperx.utils.utils", "qualname": "ScrubFileName", "kind": "function", "doc": "<p>Removes invalid characters from a windows file name.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "hyperx.utils.utils.RemoveCharacters", "modulename": "hyperx.utils.utils", "qualname": "RemoveCharacters", "kind": "function", "doc": "<p>Removes a set of characters from a string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">chars</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();